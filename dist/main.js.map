{"version":3,"file":"main.js","mappings":"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","sources":["webpack://carnivalpoker/./src/game_files/card.js","webpack://carnivalpoker/./src/game_files/dealer.js","webpack://carnivalpoker/./src/game_files/deck.js","webpack://carnivalpoker/./src/game_files/game.js","webpack://carnivalpoker/./src/game_files/player.js","webpack://carnivalpoker/./src/game_files/trick.js","webpack://carnivalpoker/./src/game_files/util.js","webpack://carnivalpoker/./src/game_files/view_game.js","webpack://carnivalpoker/webpack/bootstrap","webpack://carnivalpoker/webpack/runtime/define property getters","webpack://carnivalpoker/webpack/runtime/hasOwnProperty shorthand","webpack://carnivalpoker/webpack/runtime/make namespace object","webpack://carnivalpoker/./src/index.js"],"sourcesContent":["const Util = require(\"./util\")\r\n\r\nclass Card {\r\n    static CARDDIMENSIONS = [[41,60],[55,80],[69,100]]\r\n    \r\n    static canvasSize = Util.canvasSize().size;\r\n    static CARDWIDTH = this.canvasSize === \"Large\" ? this.CARDDIMENSIONS[2][0] : this.canvasSize === \"Medium\" \r\n        ? this.CARDDIMENSIONS[1][0] : this.CARDDIMENSIONS[0][0];\r\n    static CARDHEIGHT = this.canvasSize === \"Large\" ? this.CARDDIMENSIONS[2][1] : this.canvasSize === \"Medium\" \r\n    ? this.CARDDIMENSIONS[1][1] : this.CARDDIMENSIONS[0][1];\r\n    constructor(object) {\r\n        \r\n        //#2-14\r\n        this.value = object.value;\r\n        // Suit needs to match the card save: Clubs, Diamond, Hearts, Spades\r\n        this.suit = object.suit;\r\n        // Code this in once ready to draw\r\n        this.sprite = new Image();\r\n        this.sprite.src = \"images/Cards/Medium/\"+this.suit+this.value+\".png\";\r\n        // console.log(this.sprite.src,\"Card Src\");\r\n        this.selected = false;\r\n        //Might need to know what trick we are inside, for event handling\r\n        this.trickid = 0;\r\n        this.pos = [0,0];\r\n        this.points =[];\r\n    }\r\n    animate(ctx,spot){\r\n        ctx.drawImage(this.sprite,spot[0],spot[1],Card.CARDWIDTH,Card.CARDHEIGHT)\r\n        if(this.selected){\r\n        ctx.lineWidth = 3;;\r\n        ctx.strokeStyle = \"#FFFF00\";\r\n        ctx.strokeRect(spot[0],spot[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n        }\r\n        this.sprite.onload = ()=> {   \r\n            ctx.drawImage(this.sprite,spot[0],spot[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n            if(this.selected){\r\n                ctx.lineWidth = 3;\r\n                ctx.strokeStyle = \"#FFFF00\";\r\n                ctx.strokeRect(spot[0],spot[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n            }\r\n        };\r\n\r\n    }\r\n    updatePoints(pos){\r\n        this.pos = pos || this.pos;\r\n        this.points =[{\r\n            x: this.pos[0],\r\n            y: this.pos[1]\r\n        },{\r\n            x: this.pos[0]+Card.CARDWIDTH,\r\n            y: this.pos[1]\r\n        },{\r\n            x: this.pos[0]+Card.CARDWIDTH,\r\n            y: this.pos[1]+Card.CARDHEIGHT\r\n        },{\r\n            x: this.pos[0],\r\n            y: this.pos[1]+Card.CARDHEIGHT\r\n        }\r\n    ];\r\n    }\r\n}\r\n\r\nmodule.exports = Card; ","const Trick = require(\"./trick\")\r\nconst Player = require(\"./player\")\r\nconst Util = require(\"./util\")\r\nclass Dealer extends Player{\r\n\r\n    constructor(object){\r\n        super(object);\r\n        this.dealerCards = [];\r\n        this.handTracker = {result: []};\r\n        this.makeTricks();\r\n    }\r\n    addCardBoard(card){\r\n        for(let i = 0;i <this.tricks.length;i++){\r\n            if(this.tricks[i].active && this.tricks[i].addCard(card)){\r\n                break;\r\n            }else if(!this.tricks[i].active){\r\n                this.activateNextTrick();\r\n                this.addCardBoard(card);\r\n                break;\r\n            }\r\n        }\r\n        this.dealerPlayCycle();\r\n        return true;\r\n    }\r\n\r\n    makeTricks(){\r\n        let trickArray = [];\r\n        let trick1 = new Trick({pos: [this.pos[0],this.pos[1]+Trick.HEIGHT],color: \"#FFA500\", trickid: 5, active: true});\r\n        trickArray.push(trick1);\r\n        let trick2 = new Trick({pos: [this.pos[0]+Trick.WIDTH,this.pos[1]+Trick.HEIGHT], color: \"#00CC33\", trickid: 6, active: true});\r\n        trickArray.push(trick2);\r\n        let trick3 = new Trick({pos: this.pos, color: \"#800080\", trickid: 7, active: false});\r\n        trickArray.push(trick3);\r\n        let trick4 = new Trick({pos: [this.pos[0]+Trick.WIDTH,this.pos[1]], color: \"#0099FF\", trickid: 8, active: false});\r\n        trickArray.push(trick4);\r\n        this.tricks = trickArray;\r\n    }\r\n    updateDealerCards (){\r\n        let newDealerCards = [];\r\n        this.tricks.forEach((trick)=>{\r\n            let array = [...trick.cards];\r\n            newDealerCards = [...newDealerCards, ...array];\r\n        })\r\n        this.dealerCards = newDealerCards;\r\n    }\r\n\r\n\r\n    updateCardTracker (cards = this.dealerCards, object = this.handTracker){\r\n        object.cards = cards;\r\n        let values = [...Array(15).keys()].splice(2,15)\r\n        values.forEach((value) => {\r\n            object[value] = [];\r\n        });\r\n        let suits = [\"Clubs\",\"Hearts\",\"Diamond\",\"Spades\"];\r\n        suits.forEach((suit)=>{\r\n            object[suit] = [];\r\n        })\r\n        cards.forEach((card)=>{\r\n            let suit = card.suit;\r\n            let val = card.value;\r\n            object[suit].push(card);\r\n            object[val].push(card);\r\n        })\r\n    }\r\n\r\n    updateBestHand (object = this.handTracker){\r\n        this.updateCardTracker(object.cards, object);\r\n        if(object.cards.length <= 5 ){\r\n            object.result.push(object.cards)\r\n            return object\r\n        }\r\n        let flushCheck = [];\r\n        let straightCheck = [];\r\n        let fourKind = [];\r\n        let threeKind = [];\r\n        let twoKind = [];\r\n        // Check for flush\r\n        let suits = [\"Clubs\",\"Hearts\",\"Diamond\",\"Spades\"];\r\n        suits.forEach((suit)=>{\r\n            if(object[suit].length>4){\r\n                flushCheck = object[suit]; \r\n            }\r\n        })\r\n        \r\n        // Check for straight\r\n        let values = [...Array(15).keys()].splice(2,15);\r\n        let chain = [];\r\n        values.forEach((value)=>{\r\n            if(object[value].length >= 4){\r\n                fourKind.push(object[value]);\r\n            } else if(object[value].length ===3){\r\n                threeKind.push(object[value]);\r\n            } else if (object[value].length === 2){\r\n                twoKind.push(object[value]);\r\n            }\r\n            if(object[value][0]){\r\n                chain.push(object[value][0])\r\n                if(chain.length === 5){\r\n                    straightCheck = chain;\r\n                }\r\n            } else {\r\n                chain = [];\r\n            }\r\n        });\r\n        //\r\n        const cleanUpResult = () => {\r\n            let copyObject = {...object};\r\n\r\n            object.result.forEach((trick)=>{\r\n                trick.forEach((card)=>{\r\n                    object.cards.forEach((card2,idx)=>{\r\n                       if(card.suit === card2.suit && card.value === card2.value){\r\n                           object.cards = object.cards.slice(0,idx).concat(object.cards.slice(idx+1))\r\n                       }\r\n                    })\r\n                })\r\n            })\r\n     \r\n            return this.updateBestHand(object);\r\n        }\r\n        //Build Straight Flush\r\n        // if(flushCheck.length !== 0 && straightCheck.length !== 0){\r\n        //     let straightCards = straightCheck.filter((card)=>{\r\n        //         card.suit === flushCheck[0].suit;\r\n        //     })\r\n        //     let result = [];\r\n        //     for(let i = 0; i < 5; i++){\r\n        //         result.push(straightCards[i]);\r\n        //     }\r\n        //     object.result.push(result);\r\n        //     console.log(\"Found Straight Flush\")\r\n        //     return cleanUpResult();\r\n        // }\r\n        //Build Four of a Kind\r\n        if(fourKind.length ){\r\n            let result = [];\r\n            for(let i = 0; i < 4; i++){\r\n                result.push(fourKind[0][i]);\r\n            }\r\n            object.result.push(result);\r\n            return cleanUpResult();\r\n        }\r\n        //Build Full House\r\n        if(threeKind.length && twoKind.length){\r\n            let result = [];\r\n            for(let i = 0; i < 3; i++){\r\n                result.push(threeKind[0][i]);\r\n                if(i !== 2){\r\n                    result.push(twoKind[0][i])\r\n                }\r\n            }\r\n            object.result.push(result);\r\n    \r\n            return cleanUpResult();\r\n        }\r\n        //Build Flush\r\n        if(flushCheck.length){\r\n            let result = [];\r\n            for(let i = 0; i < 5; i++){\r\n                result.push(flushCheck[i]);\r\n            }\r\n            object.result.push(result);\r\n           \r\n            return cleanUpResult();\r\n        }\r\n        // Build Straight\r\n        if(straightCheck.length){\r\n            let result = [];\r\n            for(let i = 0; i < 5; i++){\r\n                result.push(straightCheck[i]);\r\n            }\r\n            object.result.push(result);\r\n           \r\n            return cleanUpResult();\r\n        }\r\n        // Build three of a Kind\r\n        if(threeKind.length){\r\n            let result = [];\r\n            for(let i = 0; i < 3; i++){\r\n                result.push(threeKind[0][i]);\r\n            }\r\n            object.result.push(result);\r\n        \r\n            return cleanUpResult();\r\n        }\r\n        // Build two of a Kind\r\n        if(twoKind.length){\r\n            if(twoKind.length > 1){\r\n                let result = [];\r\n                for(let i = 0; i < 2; i++){\r\n                    result.push(twoKind[0][i]);\r\n                    result.push(twoKind[1][i]);\r\n                }\r\n               \r\n                object.result.push(result);\r\n                return cleanUpResult();\r\n            }\r\n            let result = [];\r\n            for(let i = 0; i < 2; i++){\r\n                result.push(twoKind[0][i]);\r\n            }\r\n         \r\n            object.result.push(result);\r\n            return cleanUpResult();\r\n        }\r\n        let result = [];\r\n        for(let i = 0; i < 5; i++){\r\n            result.push(object.cards[i]);\r\n        }\r\n    \r\n        object.result.push(result);\r\n   \r\n        return cleanUpResult();        \r\n    }\r\n\r\n    dealerPlayCycle () {\r\n        this.updateDealerCards();\r\n        this.updateCardTracker();\r\n        if(this.dealerCards.length >= 5){\r\n            this.handTracker.result = [];\r\n            this.updateBestHand();\r\n         \r\n        };\r\n        if(this.activeTricks === this.handTracker.result.length){\r\n            //Easy Case\r\n            this.handTracker.result.forEach((newTrick,idx)=>{\r\n                this.tricks[idx].cards = []; \r\n                newTrick.forEach((card)=>{\r\n                    this.tricks[idx].addCard(card)\r\n                })\r\n            })\r\n        }else{\r\n            if(this.handTracker.result.length > this.activeTricks){\r\n                let flatResult = this.handTracker.result.flat();\r\n                for(let i = 0; i < this.activeTricks; i++){\r\n                    this.tricks[i].cards = [];\r\n                    while((this.tricks[i].cards.length < 5) && (flatResult.length > 0)) {\r\n                        this.tricks[i].addCard(flatResult.shift());\r\n                    }\r\n                }\r\n            }        \r\n        }\r\n    }\r\n\r\n\r\n    sumScores (scores) {\r\n        let score = 0;\r\n        scores.forEach((num)=>{\r\n            score += num\r\n        } );\r\n        return score;\r\n    }\r\n\r\n    newTrickSet (){\r\n        let trickArray = [];\r\n        let tempPos = this.pos;\r\n        let trick1 = new Trick({pos: this.pos, trickid: 1});\r\n        trickArray.push(trick1);\r\n        let trick2 = new Trick({pos: [this.pos[0]+400,this.pos[1]], color: \"#00FF00\", trickid: 2});\r\n        trickArray.push(trick2);\r\n        let trick3 = new Trick({pos: [this.pos[0],this.pos[1]+150], color: \"#FF0000\", trickid: 3, active: false});\r\n        trickArray.push(trick3);\r\n        let trick4 = new Trick({pos: [this.pos[0]+400,this.pos[1]+150], color: \"#0000FF\", trickid: 4, active: false});\r\n        trickArray.push(trick4);\r\n        return trickArray;\r\n    }\r\n\r\n\r\n    nextDealerCard(){\r\n\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = Dealer;","const Card = require(\"./card\")\r\n\r\nclass Deck {\r\n\r\n        constructor(){\r\n            this.cards = [];\r\n            this.makeCards();\r\n        }\r\n\r\n    makeCards() {\r\n        let allCards = [];\r\n        let values = [2,3,4,5,6,7,8,9,10,11,12,13,14];\r\n        let suits = [\"Clubs\",\"Hearts\",\"Diamond\",\"Spades\"];\r\n        \r\n        for(let i = 0;i < values.length; i++){\r\n            for(let j = 0; j < suits.length; j++){\r\n                let cardObject = {\r\n                    suit: suits[j],\r\n                    value: values[i],\r\n                }\r\n                let card = new Card(cardObject);\r\n                allCards.push(card);\r\n            }\r\n        }\r\n        this.cards = allCards;\r\n        return true;\r\n    }\r\n\r\n    drawCard() {\r\n        const scaler = this.cards.length;\r\n        const random = Math.random();\r\n        const pick = Math.floor(scaler * random);\r\n        const chosen = this.cards[pick];\r\n        return this.cards.splice(this.cards.indexOf(chosen),1)[0];\r\n    }\r\n}\r\n\r\n// let deck = new Deck();\r\n// console.log(deck.cards.length);\r\n// console.log(deck.drawCard());\r\n// console.log(deck.cards.length);\r\nmodule.exports = Deck;","const Player = require(\"./player\")\r\nconst Deck = require(\"./deck\")\r\nconst Util = require(\"./util\")\r\nconst Dealer = require(\"./dealer\")\r\n\r\nclass Game {\r\n    static START_HAND = 7;\r\n    static MAXROUNDS = 11;\r\n    //default is 1200,800\r\n    // 800 - 2*120 (Trick) = 560\r\n\r\n    constructor(canvasSize){\r\n        this.dealer = new Dealer({pos: [canvasSize[1]*0.36,canvasSize[1]*0.25], name: \"Dealer\", color:\"#FFA500\",canvasSize: canvasSize})\r\n        this.player = new Player({pos: [canvasSize[1]*0.36,canvasSize[1]*0.7], name: \"Player\", color:\"#FFA500\",canvasSize: canvasSize})\r\n        this.deck = new Deck();\r\n        this.canvasSize = canvasSize;\r\n        this.round = 1;\r\n        this.prep_game();\r\n        this.scaler = 1;\r\n    }\r\n    calcScaler(){\r\n        if(this.canvasSize[0] === 900){\r\n            return this.scaler = 0.75;\r\n        }else if(this.canvasSize[0] === 1500){\r\n            return this.scaler = 1.25;\r\n        }\r\n    }\r\n\r\n\r\n    prep_game(){\r\n        for(let i = 0; i < Game.START_HAND; i++){\r\n            this.drawPlayer();\r\n        }\r\n        for(let i = 0; i < Game.START_HAND; i++){\r\n            this.drawDealer();\r\n        }\r\n    }\r\n\r\n    drawPlayer(){\r\n        let new_card = this.deck.drawCard();\r\n        this.player.addCardBoard(new_card);     \r\n    }\r\n    drawDealer(){\r\n        let new_card = this.deck.drawCard();\r\n        this.dealer.addCardBoard(new_card);\r\n    }\r\n\r\n    nextRound(){\r\n        this.round += 1;\r\n        this.player.gold += 4;\r\n        this.compareBoards();\r\n        // console.log(this.player.score,\"player score\");\r\n        // console.log(this.dealer.score,\"dealer score\");\r\n    }\r\n\r\n    compareBoards(){\r\n        // Will need refactor to compare for each trick\r\n        // Loop based on whichever board has the most tricks\r\n        // Include auto win if mismatch on trick count\r\n\r\n        let dealer_scores = this.dealer.evaluateBoard();  \r\n        // console.log(dealer_scores,\"Dealer Scores\")\r\n        let player_scores = this.player.evaluateBoard();\r\n        // console.log(player_scores,\"Player Scores\")\r\n        let min = dealer_scores.length < player_scores.length ? dealer_scores.length : player_scores.length;\r\n        // console.log(min,\"min\");\r\n        let playerroundscore = 0;\r\n        let dealerroundscore = 0;\r\n        for(let i = 0;i<min;i++){\r\n            if(dealer_scores[i]>player_scores[i]){\r\n                let scoreobj = document.getElementById(`score${i+1}`)\r\n                scoreobj.innerText = 0;\r\n                dealerroundscore += 1;\r\n                // console.log(\"Dealer Wins 1\")\r\n            }else if(dealer_scores[i]<player_scores[i]){\r\n                let scoreobj = document.getElementById(`score${i+1}`)\r\n                scoreobj.innerText = 1;\r\n                playerroundscore += 1;\r\n                // console.log(\"Player Wins 1\")\r\n            }else if(dealer_scores[i] === player_scores[i]){\r\n                // console.log(\"Tie\");\r\n                let scoreobj = document.getElementById(`score${i+1}`)\r\n                scoreobj.innerText = \"\";\r\n            }\r\n        }\r\n        this.player.score += playerroundscore;\r\n        this.dealer.score += dealerroundscore;\r\n        // console.log([this.player.score,this.dealer.score],\"Score after round\");\r\n        let playerscorehtml = document.getElementById(`playerscore`)\r\n        let dealerscorehtml = document.getElementById(`dealerscore`)\r\n        playerscorehtml.innerText = `Round Score     ${playerroundscore}`\r\n        dealerscorehtml.innerText = `Round Score     ${dealerroundscore}`\r\n    }\r\n\r\n    animate(ctx) {\r\n        this.calcScaler();\r\n\r\n        ctx.font = `${40*this.scaler}px Arial`;\r\n        ctx.fillStyle = \"#FFFFFF\";\r\n        ctx.clearRect((725/1200)*this.canvasSize[0],0,300,(150/800)*this.canvasSize[1])\r\n        ctx.fillText(`Round: ${this.round}`,(725/1200)*this.canvasSize[0],(190/800)*this.canvasSize[1]);\r\n        ctx.onload = ()=> {\r\n            this.calcScaler();\r\n            ctx.clearRect((725/1200)*this.canvasSize[0],0,300,(150/800)*this.canvasSize[1])\r\n            ctx.fillText(`Dealer Hands`,(725/1200)*this.canvasSize[0],(190/800)*this.canvasSize[1]);\r\n        }\r\n    }\r\n\r\n    resetBoard(){\r\n\r\n    }\r\n\r\n    winner(){\r\n        let playerscore = this.player.score;\r\n        let dealerscore = this.dealer.score;\r\n        let result = [playerscore,dealerscore];\r\n        if(playerscore > dealerscore){\r\n            result.push(\"Player Wins!\");\r\n        }else{\r\n            result.push(\"Dealer Wins!\");\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n// const g = new Game();\r\n// g.play();\r\n\r\nmodule.exports = Game; ","const Card = require(\"./card\");\r\nconst Trick = require(\"./trick\")\r\nconst Util = require(\"./util\")\r\n\r\n\r\nclass Player{\r\n    static DIM_X = Trick.WIDTH*2;\r\n    static DIM_Y = Trick.HEIGHT*2;\r\n    constructor(object){\r\n        this.canvasSize = object.canvasSize;\r\n        this.DIM_X = \r\n        this.pos = object.pos;\r\n        this.name = object.name;\r\n        this.score = 0;\r\n        this.gold = 0;\r\n        this.color = object.color;\r\n        //Probably want an array of trick pos.\r\n        //Probably want to prefill each board with 4 tricks, 3 of which are empty.\r\n        this.tricks = [];\r\n        this.activeTricks = 2;\r\n        this.makeTricks();\r\n        this.scaler = 1;\r\n        this.calcScaler();\r\n    }\r\n\r\n    calcScaler(){\r\n        if(this.canvasSize[0] === 900){\r\n            return this.scaler = 0.75;\r\n        }else if(this.canvasSize[0] === 1500){\r\n            return this.scaler = 1.25;\r\n        }\r\n    }\r\n\r\n    addCardBoard(card){\r\n        for(let i = 0;i <this.tricks.length;i++){\r\n            if(this.tricks[i].addCard(card)){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    activateNextTrick(){\r\n        for(let i = 0;i<this.tricks.length;i++){\r\n            let trick = this.tricks[i];\r\n            if(trick.active === false){\r\n                trick.active = true;\r\n                this.activeTricks += 1;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    makeTricks(){\r\n        let trickArray = [];\r\n        let tempPos = this.pos;\r\n        let trick1 = new Trick({pos: this.pos, color: \"#FFA500\", trickid: 1, active: true});\r\n        trickArray.push(trick1);\r\n        let trick2 = new Trick({pos: [this.pos[0]+Trick.WIDTH,this.pos[1]], color: \"#00CC33\", trickid: 2, active: true});\r\n        trickArray.push(trick2);\r\n        let trick3 = new Trick({pos: [this.pos[0],this.pos[1]+Trick.HEIGHT], color: \"#800080\", trickid: 3, active: false});\r\n        trickArray.push(trick3);\r\n        let trick4 = new Trick({pos: [this.pos[0]+Trick.WIDTH,this.pos[1]+Trick.HEIGHT], color: \"#0099FF\", trickid: 4, active: false});\r\n        trickArray.push(trick4);\r\n        this.tricks = trickArray;\r\n    }\r\n    animate(ctx){\r\n        // ctx.clearRect(0,0,900,200)\r\n        ctx.fillStyle = this.color;\r\n        this.tricks.forEach((trick)=>{\r\n            trick.animate(ctx,this.name);\r\n        })\r\n        this.animateGold(ctx);\r\n    }\r\n\r\n    evaluateBoard(){\r\n        let scores = [];\r\n        for(let i = 0;i <this.tricks.length;i++){\r\n            let trick = this.tricks[i];\r\n            trick.evaluatePoker();\r\n            let value = trick.value || 0;\r\n            scores.push(value);\r\n        }\r\n        return scores;\r\n    }\r\n\r\n    animateGold(ctx){\r\n        // Might move this to the game class\r\n        if(this.name ===\"Player\"){\r\n        ctx.fillStyle = \"#003399\"\r\n        ctx.fillRect((980/1200)*this.canvasSize[0],(370/800)*this.canvasSize[1],130*this.scaler,260*this.scaler)\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = \"#FFFFFF\";\r\n        ctx.strokeRect((980/1200)*this.canvasSize[0],(370/800)*this.canvasSize[1],130*this.scaler,260*this.scaler);    \r\n        ctx.font = `${30*this.scaler}px Arial`;\r\n        ctx.fillStyle = \"#FFFFFF\"\r\n        ctx.fillText(`Gold: ${this.gold}`,(995/1200)*this.canvasSize[0],(400/800)*this.canvasSize[1]);\r\n        // Button for new card\r\n        const cardback = new Image();\r\n        cardback.src = \"images/Cards/Medium/BackRed1.png\"\r\n        ctx.drawImage(cardback,(1020/1200)*this.canvasSize[0],(405/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n        ctx.font =  `${20*this.scaler}px Arial`;\r\n        ctx.fillStyle = \"#FFFFFF\"\r\n        ctx.fillText(`New Card`,(995/1200)*this.canvasSize[0],(507/800)*this.canvasSize[1]);\r\n        ctx.fillText(`2`,(1090/1200)*this.canvasSize[0],(507/800)*this.canvasSize[1]);\r\n        /// Five in a row for the new hand\r\n        ctx.drawImage(cardback,(995/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n        ctx.drawImage(cardback,(1001/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n        ctx.drawImage(cardback,(1007/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n        ctx.drawImage(cardback,(1013/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n        ctx.drawImage(cardback,(1019/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n        ctx.font =  `${20*this.scaler}px Arial`;\r\n        ctx.fillStyle = \"#FFFFFF\"\r\n        ctx.fillText(`New Hand`,(995/1200)*this.canvasSize[0],(620/800)*this.canvasSize[1]);\r\n        ctx.fillText(`6`,(1092/1200)*this.canvasSize[0],(620/800)*this.canvasSize[1]);\r\n        //This is a box 1020 to 1100 or 80 by 80\r\n        //The points are [1020,100],[1100,100],[1020,180],[1100,180]\r\n        cardback.onload = ()=> {\r\n            ctx.drawImage(cardback,(1020/1200)*this.canvasSize[0],(405/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n            ctx.drawImage(cardback,(995/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n            ctx.drawImage(cardback,(1001/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n            ctx.drawImage(cardback,(1007/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n            ctx.drawImage(cardback,(1013/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n            ctx.drawImage(cardback,(1019/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n        }\r\n        \r\n        \r\n    }}\r\n}\r\n\r\nmodule.exports = Player;","const Player = require(\"./player\")\r\nconst Card = require(\"./card\")\r\nconst Util = require(\"./util\")\r\n\r\nclass Trick {\r\n    static TRICKDIMENSIONS = [[233,90],[310,120],[388,150]]\r\n    static canvasSize = Util.canvasSize().size;\r\n    static WIDTH = this.canvasSize === \"Large\" ? this.TRICKDIMENSIONS[2][0] : this.canvasSize === \"Medium\" \r\n    ? this.TRICKDIMENSIONS[1][0] : this.TRICKDIMENSIONS[0][0];\r\n    static HEIGHT = this.canvasSize === \"Large\" ? this.TRICKDIMENSIONS[2][1] : this.canvasSize === \"Medium\" \r\n    ? this.TRICKDIMENSIONS[1][1] : this.TRICKDIMENSIONS[0][1];\r\n    static YBUFFER = this.HEIGHT*0.09;\r\n    static XBUFFER = this.HEIGHT*0.09;\r\n    static MAXCARDS = 5;\r\n    constructor(object){\r\n        this.pos = object.pos;\r\n        this.cards = [];\r\n        this.value = 0;\r\n        this.values = [];\r\n        this.trait = \"High Card\";\r\n        this.major = 0;\r\n        this.color = object.color;\r\n        this.trickid = object.trickid;\r\n        this.active = object.active;\r\n        this.points = [];\r\n        this.updatePoints();\r\n        this.scaler = 1;\r\n        this.calcScaler();\r\n    }\r\n\r\n    calcScaler(){\r\n        if(this.canvasSize === \"Small\"){\r\n            return this.scaler = 0.75;\r\n        }else if(this.canvasSize === \"Large\"){\r\n            return this.scaler = 1.25;\r\n        }\r\n    }\r\n\r\n    updatePoints(pos){\r\n        this.pos = pos || this.pos;\r\n        this.points =[{\r\n            x: this.pos[0],\r\n            y: this.pos[1]\r\n        },{\r\n            x: this.pos[0]+Trick.WIDTH,\r\n            y: this.pos[1]\r\n        },{\r\n            x: this.pos[0]+Trick.WIDTH,\r\n            y: this.pos[1]+Trick.HEIGHT\r\n        },{\r\n            x: this.pos[0],\r\n            y: this.pos[1]+Trick.HEIGHT\r\n        }\r\n    ];\r\n    }\r\n\r\n    evaluate() {\r\n        let sum = 0;\r\n        this.cards.forEach((card)=>{\r\n            sum += card.value;\r\n        })\r\n        return sum; \r\n    }\r\n\r\n    evaluatePoker(){\r\n        let sorted = Util.sortCards(this.cards);\r\n        this.cards = sorted;\r\n        this.value = 0;\r\n        this.major = 0;\r\n        let values = [];\r\n        this.trait = \"High Card\";\r\n        let traitList = [\"High Card\",\"One Pair\",\"Two Pair\",\"Three of a Kind\",\r\n        \"Straight\",\"Flush\",\"Full House\",\"Four of a Kind\",\"Straight-Flush\"];\r\n        let suits = [\"Clubs\",\"Hearts\",\"Diamond\",\"Spades\"];\r\n        let base = 14;\r\n        for(let i = 0;i<this.cards.length;i++){\r\n            values.push(this.cards[i].value)\r\n        }\r\n        this.values = values;\r\n        if(this.cards.length === 5){\r\n            // Check flush\r\n            let flushCheck = false;\r\n            let straightCheck = true;\r\n            for(let i = 0;i<suits.length;i++){\r\n                let suit = suits[i];\r\n                if(this.cards.every((card)=>card.suit === suit)){\r\n                    flushCheck = true;\r\n                }\r\n            }\r\n            // Check straight\r\n            for(let i = 0;i<(values.length-1);i++){\r\n                if(values[i] !== values[i+1]+1){\r\n                    // console.log(values,\"straigh check\");\r\n                    // console.log([values[i],values[i+1]],\"straight check\");\r\n                    straightCheck = false;\r\n                }\r\n            }\r\n            if(flushCheck && straightCheck){\r\n                this.trait = \"Straight-Flush\";\r\n            }else if(flushCheck){\r\n                this.trait = \"Flush\"\r\n            }else if(straightCheck){\r\n                this.trait = \"Straight\"\r\n            }\r\n        }\r\n        let hash = {};\r\n        for(let i = 0;i<values.length;i++){\r\n            if(hash[values[i]] === undefined){\r\n                hash[values[i]] = 1;\r\n            }else{\r\n                hash[values[i]] += 1;\r\n            }\r\n        }\r\n        let pair = false;\r\n        let trips = false;\r\n        for(let i = 0;i<values.length;i++){\r\n             if(hash[values[i]]===4){\r\n                this.trait = \"Four of a Kind\";\r\n                this.major = values[i];\r\n             }\r\n             if(hash[values[i]]===2 && pair === false){\r\n                pair = true;\r\n                this.trait = \"One Pair\"\r\n                this.major = values[i];\r\n             }else if(hash[values[i]]===2 && pair === true && values[i] !== values[i-1]){\r\n                this.trait = \"Two Pair\"\r\n                this.major = values[i]>this.major ? values[i] : this.major;\r\n             }else if(hash[values[i]]===3){\r\n                trips = true;\r\n                this.trait = \"Three of a Kind\"\r\n                this.major = values[i];\r\n            }\r\n        }\r\n        if(trips && pair){\r\n            this.trait = \"Full House\"\r\n        }\r\n        this.major = this.major || values[0];\r\n        let rank = traitList.indexOf(this.trait)+1;\r\n        let tiebreaks = values.filter((num)=> num !== this.major);\r\n        let majorSum = this.major*(base**rank)*2;\r\n        let tiebreakSum = 0;\r\n        for(let i = 1;i<tiebreaks.length+1;i++){\r\n                tiebreakSum += tiebreaks[i-1]*(base**rank)/(base**i);\r\n        }\r\n        this.value = majorSum + tiebreakSum;\r\n        return this.value;\r\n    }\r\n\r\n    removeCard(card) {\r\n        let index = this.cards.indexOf(card);\r\n        return this.cards.splice(index,1)[0];\r\n    }\r\n\r\n    addCard(card){\r\n        // Need to refactor this to check if the trick has 5 cards\r\n        let count = this.cards.length;\r\n        if(count < Trick.MAXCARDS && this.active){\r\n            let pos = this.pos;\r\n            pos = [pos[0]+Trick.XBUFFER,pos[1]+Trick.YBUFFER]\r\n            let xshift = count*Card.CARDWIDTH + count*3;\r\n            pos = [pos[0]+xshift,pos[1]];\r\n            card.pos = pos;\r\n            card.trickid = this.trickid;\r\n            card.updatePoints();\r\n            this.cards.push(card);\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    updateCards(){\r\n        let count = this.cards.length;\r\n        for(let i = 0;i<count;i++){\r\n            let card = this.cards[i];\r\n            let pos = this.pos \r\n            pos = [pos[0]+Trick.XBUFFER,pos[1]+Trick.YBUFFER]\r\n            let xshift = i*Card.CARDWIDTH+i*3;\r\n            pos = [pos[0]+xshift,pos[1]];\r\n            card.pos = pos;\r\n            card.updatePoints();\r\n        }\r\n    }\r\n\r\n\r\n    animate(ctx,name){\r\n        let fontArray = [16,22,30];\r\n        const fontSize = Trick.canvasSize === \"Small\" ? fontArray[0] : Trick.canvasSize === \"Large\" ? fontArray[2] : fontArray[1]\r\n        if(this.active){\r\n        const trickobj = document.getElementById(`trick${this.trickid}`)\r\n        trickobj.style.display = \"flex\";\r\n        trickobj.style.backgroundColor = this.color;\r\n        let sorted = Util.sortCards(this.cards);\r\n        this.cards = sorted;\r\n        this.updateCards();\r\n        this.evaluatePoker();\r\n        ctx.fillStyle = this.color\r\n        let trickX = this.pos[0];\r\n        let trickY = this.pos[1];\r\n        ctx.fillRect(trickX,trickY,Trick.WIDTH,Trick.HEIGHT)\r\n        ctx.fillStyle = \"#FFFFFF\"\r\n        ctx.font = `${fontSize}px Arial`;\r\n        ctx.fillText(`${this.trait}`,trickX+Trick.WIDTH*0.33,trickY+Trick.HEIGHT*0.95)\r\n        for(let i = 0;i<this.cards.length;i++){\r\n            let currentCard = this.cards[i];\r\n            currentCard.animate(ctx,currentCard.pos);\r\n            let cardobj = document.getElementById(`${this.trickid}-${i}`)\r\n            cardobj.src = currentCard.sprite.src\r\n        }\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = \"#FFFFFF\";\r\n        ctx.strokeRect(this.pos[0],this.pos[1],Trick.WIDTH,Trick.HEIGHT);\r\n        }else{\r\n        ctx.fillStyle = this.color\r\n        let trickX = this.pos[0];\r\n        let trickY = this.pos[1];\r\n        ctx.fillRect(trickX,trickY,Trick.WIDTH,Trick.HEIGHT)\r\n        ctx.fillStyle = \"#FFFFFF\"\r\n        ctx.font = `${fontSize}px Arial`;\r\n        if(name === \"Player\"){\r\n        ctx.fillText(`Unlock Hand: 6 Gold!`,trickX+Trick.WIDTH*0.2*this.scaler,trickY+Trick.HEIGHT*0.5)\r\n        }else{\r\n        ctx.fillStyle = \"#FFFFFF\"\r\n        ctx.fillText(`Inactive Hand`,trickX+Trick.WIDTH*0.3*this.scaler,trickY+Trick.HEIGHT*0.5)    \r\n        }\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = \"#FFFFFF\";\r\n        ctx.strokeRect(this.pos[0],this.pos[1],Trick.WIDTH,Trick.HEIGHT);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// let t = new Trick({pos: [0,0]});\r\n// t.addCard(\"A\");\r\n// console.log(t,\"t\");\r\n\r\n\r\nmodule.exports = Trick; ","\r\nexport function sortCards(array){\r\n        function sorter(card1,card2){\r\n            //Return 1 if card 1 > card 2\r\n            //Return -1 if card 1 < card 2\r\n            const suits = [\"Spades\",\"Hearts\",\"Diamond\",\"Clubs\"]\r\n            if(card1.value>card2.value){\r\n                return 1\r\n            }else if(card1.value<card2.value){\r\n                return -1 \r\n            }else{\r\n                if(suits.indexOf(card1.suit)<suits.indexOf(card2.suit)){\r\n                    return 1\r\n                }else{\r\n                    return -1 \r\n                }\r\n            }\r\n        }\r\n        let pivot = array[0];\r\n        if(array.length < 2) return array;\r\n        let left = array.slice(1).filter((ele) => sorter(pivot,ele) === -1);\r\n        let right = array.slice(1).filter((ele) => sorter(pivot,ele) === 1);\r\n        let leftSorted = sortCards(left);\r\n        let rightSorted = sortCards(right);\r\n        return leftSorted.concat([pivot]).concat(rightSorted);\r\n    }\r\nexport function createPoints(pos,box){\r\n        const points =[{\r\n            x: pos[0],\r\n            y: pos[1]\r\n        },{\r\n            x: pos[0]+box[0],\r\n            y: pos[1]\r\n        },{\r\n            x: pos[0]+box[0],\r\n            y: pos[1]+box[1]\r\n        },{\r\n            x: pos[0],\r\n            y: pos[1]+box[1]\r\n        }\r\n    ];\r\n    return points;\r\n}\r\n\r\nexport function canvasSize() {\r\n    const windowWidth= window.innerWidth;\r\n    const windowHeight= window.innerHeight;\r\n    const canvasDimensions = [[900,600],[1200,800],[1500,1000]]\r\n    let canvasSize = canvasDimensions[0];\r\n    if((windowWidth)>(canvasDimensions[2][0]+200) && (windowHeight)>(canvasDimensions[2][1]+100)){\r\n        canvasSize = canvasDimensions[2];\r\n        return {canvasSize: canvasSize, size: \"Large\"}\r\n    } else if(windowWidth>(canvasDimensions[1][0]+200) && (windowHeight>(canvasDimensions[1][1]+100))){\r\n        canvasSize = canvasDimensions[1];\r\n        return {canvasSize: canvasSize, size: \"Medium\"}\r\n    }else {\r\n        canvasSize = canvasDimensions[0];\r\n        return {canvasSize: canvasSize, size: \"Small\"}\r\n    }\r\n}","const Util = require(\"./util\")\r\nconst Game = require(\"./game\")\r\nconst Card = require(\"./card\")\r\nconst Trick = require(\"./trick\")\r\nclass ViewGame {\r\n\r\n    constructor(game,ctx,pos,canvasSize){\r\n        this.canvasSize = canvasSize;\r\n        this.game = game;\r\n        this.gameCtx = ctx;\r\n        this.allCards = [];\r\n        this.allTricks = [];\r\n        this.setupScreen();\r\n        this.buildTricksCards();\r\n        this.bindCanvas();\r\n        this.cardSelected = false;\r\n        this.pos = pos;\r\n        this.scaler = 1;\r\n        this.calcScaler();\r\n    }\r\n\r\n    calcScaler(){\r\n        if(this.canvasSize[0] === 900){\r\n            return this.scaler = 0.75;\r\n        }else if(this.canvasSize[0] === 1500){\r\n            return this.scaler = 1.25;\r\n        }\r\n    }\r\n\r\n    resetCardLinks(){\r\n        let tricksidx = [1,2,3,4,5,6,7,8]\r\n        let cardsidx = [0,1,2,3,4]\r\n\r\n        for(let i = 1;i<tricksidx.length;i++){\r\n            for(let j = 0;j<cardsidx.length;j++){\r\n                let cardobj = document.getElementById(`${i}-${j}`);\r\n                cardobj.src = \"./images/transparent.png\";\r\n            }\r\n        }\r\n    }\r\n\r\n    buildTricksCards(){\r\n        // 2D array, first item is the shape array. second item is the card.\r\n        // Loop through player tricks and build each card. \r\n        let tricks = this.game.player.tricks;\r\n        let allCards = [];\r\n        let allTricks = [];\r\n        // console.log(tricks,\"player tricks\");\r\n        for(let i = 0;i < tricks.length;i++){\r\n            let trick = tricks[i];\r\n            allTricks.push(trick);\r\n            // console.log(trick,\"a grabbed trick\");\r\n            for(let j = 0; j < trick.cards.length ; j++){\r\n                let card = trick.cards[j];\r\n                // console.log(card,\"a grabbed card\");\r\n                allCards.push(card);\r\n            }\r\n        }\r\n        this.allCards = allCards;\r\n        this.allTricks = allTricks;\r\n    }\r\n    \r\n    tracePath(object,ctx){\r\n        let points = object.points;\r\n        ctx.beginPath();\r\n        ctx.moveTo(points[0].x,points[0].y);\r\n        for(let i = 1; i < points.length; i++) {\r\n            ctx.lineTo(points[i].x,points[i].y);\r\n        }\r\n    }\r\n\r\n    bindCanvas(){\r\n        let canvas = document.getElementById(\"game\");\r\n        // console.log(canvas,\"canvasgrabbed\");\r\n        canvas.addEventListener('click',this.handleCanvasClick.bind(this))\r\n    }\r\n    // bindDealer(){\r\n    //     let canvas = document.getElementById(\"game\");\r\n    //     // console.log(canvas,\"canvasgrabbed\");\r\n    //     canvas.addEventListener('click',this.handleDealerCanvasClick.bind(this))\r\n    // }\r\n    // handleDealerCanvasClick(e) {\r\n    //     e.preventDefault();\r\n    //     console.log(\"Click detected\")\r\n     \r\n    //     let xOffset = this.pos[0];\r\n    //     let yOffset = this.pos[1];\r\n    //     let mouseX = parseInt(e.clientX - xOffset);\r\n    //     let mouseY = parseInt(e.clientY - yOffset);\r\n    //     console.log([e.clientX,e.clientY],\"Event Mouse Click Array\")\r\n    //     console.log([mouseX,mouseY],\"Mouse Click Pos After Offsets\")\r\n    //     const newScoreRoundButton = [[1000,345],[160,80]];\r\n    //     const newScoreRoundButtonPoints = Util.createPoints(newScoreRoundButton[0],newScoreRoundButton[1]);\r\n    //     let points = {points: newScoreRoundButtonPoints}\r\n    //     this.tracePath(points,this.gameCtx)\r\n    //     if(this.gameCtx.isPointInPath(mouseX,mouseY)){\r\n    //         console.log(\"Click on Score Round\");\r\n    //         this.playRound();\r\n    //     }\r\n\r\n    // }\r\n\r\n    handleCanvasClick(e) {\r\n        // e.preventDefault();\r\n        // console.log(\"Click detected\")\r\n        // console.log(this.cardSelected,\"Card Selected?\")\r\n        let xOffset = this.pos[0];\r\n        let yOffset = this.pos[1];\r\n        let mouseX = parseInt(e.clientX - xOffset);\r\n        let mouseY = parseInt(e.clientY - yOffset);\r\n        console.log([e.clientX,e.clientY],\"Event Mouse Click Array\")\r\n        console.log([mouseX,mouseY],\"Mouse Click Pos After Offsets\")\r\n        // console.log([this.allCards.length],\"Card Array Length\");\r\n        // console.log([this.allTricks.length],\"Trick Array Length\");\r\n        // see if a card has been clicked on\r\n        if(this.cardSelected === false){\r\n            for(let i =0; i< this.allCards.length;i++){\r\n                let card = this.allCards[i];\r\n                // console.log(card.pos,\"Card Pos\");\r\n                this.tracePath(card,this.gameCtx);\r\n                if (this.gameCtx.isPointInPath(mouseX,mouseY)){\r\n                    this.cardSelected = card;\r\n                    card.selected = true;\r\n                    // console.log(card,\"grabbed card\");\r\n                    this.game.player.animate(this.gameCtx);\r\n                    this.buildTricksCards();\r\n                    break;\r\n                    \r\n                }\r\n            }\r\n        }\r\n        else if(this.cardSelected){\r\n            for(let i = 0; i < this.allTricks.length;i++){\r\n                let trick = this.allTricks[i];\r\n                // console.log(trick.pos,\"Trick Pos\");\r\n                this.tracePath(trick,this.gameCtx);\r\n                if (this.gameCtx.isPointInPath(mouseX,mouseY)){\r\n                    // console.log(trick,\"grabbed trick\");\r\n                    this.moveCard(this.cardSelected,trick);\r\n                    this.game.player.animate(this.gameCtx);\r\n                    this.buildTricksCards();\r\n                }\r\n            }\r\n        }\r\n        const newTrickButton = [[(995/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1]],[Card.CARDWIDTH+Card.CARDWIDTH*0.25,Card.CARDHEIGHT]];\r\n        const newCardButton = [[(1020/1200)*this.canvasSize[0],(405/800)*this.canvasSize[1]],[Card.CARDWIDTH,Card.CARDHEIGHT]];\r\n        const newTrickButtonPoints = Util.createPoints(newTrickButton[0],newTrickButton[1]);\r\n        const newCardButtonPoints = Util.createPoints(newCardButton[0],newCardButton[1]);\r\n        // Eventually need to error handle if there isnt enough gold\r\n        if(this.game.player.gold >= 6){\r\n            let points = {points: newTrickButtonPoints}\r\n            this.tracePath(points,this.gameCtx)\r\n            if(this.gameCtx.isPointInPath(mouseX,mouseY)){\r\n                console.log(\"Clicked on Trick Button\");\r\n                this.game.player.activateNextTrick();\r\n                this.game.player.gold -= 6;\r\n                this.game.player.animate(this.gameCtx);\r\n                this.buildTricksCards();\r\n            }\r\n        }\r\n        // Eventually error handle not enough gold\r\n        if(this.game.player.gold >= 2){\r\n            let points = {points: newCardButtonPoints}\r\n            this.tracePath(points,this.gameCtx)\r\n            if(this.gameCtx.isPointInPath(mouseX,mouseY)){\r\n                console.log(\"Clicked on Card Button\");\r\n                this.game.drawPlayer();\r\n                this.game.player.gold -= 2;\r\n                this.game.player.animate(this.gameCtx);\r\n                this.buildTricksCards();\r\n            }\r\n        }\r\n        // New Round button\r\n        //525,470,140,50\r\n        const newScoreRoundButton = [[(500/1200)*this.canvasSize[0],(470/800)*this.canvasSize[1]],[140*this.scaler,50*this.scaler]];\r\n        const newScoreRoundButtonPoints = Util.createPoints(newScoreRoundButton[0],newScoreRoundButton[1]);\r\n        let points = {points: newScoreRoundButtonPoints}\r\n        this.tracePath(points,this.gameCtx)\r\n        if(this.gameCtx.isPointInPath(mouseX,mouseY) && this.game.round <= Game.MAXROUNDS){\r\n            // console.log(this.game.round,\"Round#\");\r\n            this.playRound();\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    moveCard(card,trick){\r\n        let ownerid = card.trickid;\r\n        let owner;\r\n        this.allTricks.forEach((trick) =>{\r\n            if(trick.trickid === ownerid){\r\n                owner = trick;\r\n                owner.removeCard(card);\r\n                owner.updateCards();\r\n                owner.evaluatePoker();\r\n            }\r\n        })\r\n        if(trick.addCard(card)){\r\n        trick.updateCards();\r\n        trick.evaluatePoker();\r\n        this.cardSelected.selected = false;\r\n        this.cardSelected = false;\r\n        }else{\r\n            owner.addCard(card)\r\n            owner.updateCards();\r\n            owner.evaluatePoker();\r\n            this.cardSelected.selected = false;\r\n            this.cardSelected = false;\r\n        }\r\n    }\r\n\r\n\r\n    setupScreen(){\r\n        this.resetCardLinks();\r\n        this.gameCtx.clearRect(0,0,this.canvasSize[0],this.canvasSize[1]) \r\n        this.game.animate(this.gameCtx);\r\n        this.game.dealer.animate(this.gameCtx);\r\n        this.game.player.animate(this.gameCtx);\r\n        this.animateScores();\r\n        this.buildTricksCards();\r\n    }\r\n    \r\n    animateScores(){\r\n        this.calcScaler();\r\n        let scaler = this.scaler || 1; \r\n        this.gameCtx.font = `${40*scaler}px Arial`;\r\n        this.gameCtx.fillStyle = \"#FFFFFF\";\r\n        this.gameCtx.clearRect((250/1200)*this.canvasSize[0],0,300,(150/800)*this.canvasSize[1])\r\n        this.gameCtx.onload = ()=> {\r\n            this.calcScaler();\r\n            this.gameCtx.font = `${40}px Arial`;\r\n            this.gameCtx.clearRect((300/1200)*this.canvasSize[0],0,300,(150/800)*this.canvasSize[1])\r\n            this.gameCtx.fillText(`Dealer Hands`,(300/1200)*this.canvasSize[0],(190/800)*this.canvasSize[1]);\r\n        }\r\n        this.gameCtx.fillText(`Dealer Hands`,(300/1200)*this.canvasSize[0],(190/800)*this.canvasSize[1]);\r\n\r\n        //Draw Score Button\r\n        this.gameCtx.font = `${24*scaler}px Arial Bold`;\r\n        this.gameCtx.fillStyle = \"#003399\"\r\n        this.gameCtx.fillRect((525/1200)*this.canvasSize[0],(470/800)*this.canvasSize[1],140*scaler,50*scaler)\r\n        this.gameCtx.fillStyle = \"#FFFFFF\";\r\n        this.gameCtx.fillText(`Score Round`,(535/1200)*this.canvasSize[0],(500/800)*this.canvasSize[1]);\r\n        this.gameCtx.lineWidth = 3;\r\n        this.gameCtx.strokeStyle = \"#FFFFFF\";\r\n        this.gameCtx.strokeRect((525/1200)*this.canvasSize[0],(470/800)*this.canvasSize[1],140*scaler,50*scaler);\r\n        //Player Score \r\n        this.gameCtx.fillStyle = \"#003399\"\r\n        this.gameCtx.fillRect((285/1200)*this.canvasSize[0],(470/800)*this.canvasSize[1],180*scaler,50*scaler)\r\n        this.gameCtx.fillStyle = \"#FFFFFF\";\r\n        this.gameCtx.fillText(`Player Score: ${this.game.player.score}`,(295/1200)*this.canvasSize[0],(500/800)*this.canvasSize[1]);\r\n        this.gameCtx.lineWidth = 3;\r\n        this.gameCtx.strokeStyle = \"#FFFFFF\";\r\n        this.gameCtx.strokeRect((285/1200)*this.canvasSize[0],(470/800)*this.canvasSize[1],180*scaler,50*scaler);\r\n        //Dealer Score \r\n        this.gameCtx.fillStyle = \"#003399\"\r\n        this.gameCtx.fillRect((735/1200)*this.canvasSize[0],(470/800)*this.canvasSize[1],180*scaler,50*scaler)\r\n        this.gameCtx.fillStyle = \"#FFFFFF\";\r\n        this.gameCtx.fillText(`Dealer Score: ${this.game.dealer.score}`,(742/1200)*this.canvasSize[0],(500/800)*this.canvasSize[1]);\r\n        this.gameCtx.lineWidth = 3;\r\n        this.gameCtx.strokeStyle = \"#FFFFFF\";\r\n        this.gameCtx.strokeRect((735/1200)*this.canvasSize[0],(470/800)*this.canvasSize[1],180*scaler,50*scaler);\r\n\r\n    }\r\n\r\n    playRound(){\r\n        this.game.nextRound();\r\n        this.setupScreen();\r\n        this.buildTricksCards();\r\n        const roundscore = document.getElementById(\"roundscore\");\r\n        const overlay = document.getElementById(\"overlay\");\r\n        overlay.style.display = \"block\";\r\n        roundscore.style.display = \"flex\";\r\n    }\r\n\r\n\r\n}\r\n\r\nmodule.exports = ViewGame;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const Game = require(\"./game_files/game\")\r\nconst ViewGame = require(\"./game_files/view_game\")\r\n\r\n//Questions:\r\n// Ask about event handelers and what should own them\r\n// \r\n\r\n\r\nconst windowWidth= window.innerWidth;\r\nconst windowHeight= window.innerHeight;\r\n// console.log(windowWidth,windowHeight,\"window X Y\")\r\n//Width,Height\r\n// 1400,1000 with 1200,800. so +\r\n// In essence, this is +- 25%\r\nconst canvasDimensions = [[900,600],[1200,800],[1500,1000]]\r\nconst gameCanvas = document.getElementById(\"canvas\");\r\nconst gameCtx = gameCanvas.getContext(\"2d\");\r\nlet canvasSize = canvasDimensions[0];\r\n\r\nif((windowWidth)>(canvasDimensions[2][0]+200) && (windowHeight)>(canvasDimensions[2][1]+100)){\r\n    canvasSize = canvasDimensions[2];\r\n} else if(windowWidth>(canvasDimensions[1][0]+200) && (windowHeight>(canvasDimensions[1][1]+100))){\r\n    canvasSize = canvasDimensions[1];\r\n}else {\r\n    canvasSize = canvasDimensions[0];\r\n}\r\n// console.log([windowWidth,canvasDimensions[1][0]+200,windowHeight,canvasDimensions[1][1]+100],\"Deduce Canvas\")\r\n\r\n// console.log(canvasSize,\"canvasSize\")\r\ngameCanvas.setAttribute(\"width\",canvasSize[0])\r\ngameCanvas.setAttribute(\"height\",canvasSize[1])\r\nconst game = new Game (canvasSize);\r\nconst gameCanvasRect = gameCanvas.getBoundingClientRect();\r\nconst gamepos = [gameCanvasRect.x,gameCanvasRect.y];\r\n// console.log(gamepos,\"gamepos\")\r\nlet view = new ViewGame(game,gameCtx,gamepos,canvasSize);\r\nconst overlay = document.getElementById(\"overlay\");\r\nconst start = document.getElementById(\"start\");\r\nconst gameover = document.getElementById(\"gameover\");\r\nconst startbutton = document.getElementById(\"start-button\");\r\nconst roundscore = document.getElementById(\"roundscore\");\r\nconst continuebutton = document.getElementById(\"continuebutton\");\r\nconst restartbutton = document.getElementById(\"restartbutton\");\r\n\r\nstartbutton.addEventListener('click',()=>{\r\n    overlay.style.display = \"none\";\r\n    start.style.display = \"none\";\r\n})\r\n\r\ncontinuebutton.addEventListener('click',()=>{\r\n    overlay.style.display = \"none\";\r\n    roundscore.style.display = \"none\";\r\n    if(game.round < Game.MAXROUNDS){\r\n        view.game.drawDealer();\r\n        view.setupScreen();\r\n    }else{\r\n        const playerscore = document.getElementById(\"finalplayerscore\")\r\n        const dealerscore = document.getElementById(\"finaldealerscore\")\r\n        const winner = document.getElementById(\"winner\");\r\n        const result = game.winner();\r\n        // console.log([playerscore,dealerscore,winner],\"edits\")\r\n        playerscore.innerText = result[0];\r\n        dealerscore.innerText = result[1];\r\n        winner.innerText = result[2];\r\n        overlay.style.display = \"block\";\r\n        gameover.style.display = \"block\";\r\n    }\r\n    \r\n   \r\n})\r\n\r\nrestartbutton.addEventListener('click',()=>{\r\n    const newGame = new Game (canvasSize);\r\n    view = new ViewGame(newGame, gameCtx,gamepos,canvasSize);\r\n    gameover.style.display = \"none\";\r\n})\r\n\r\n\r\nwindow.game = game;\r\nwindow.view = view;\r\n"],"names":["Util","require","Card","constructor","object","this","value","suit","sprite","Image","src","selected","trickid","pos","points","animate","ctx","spot","drawImage","CARDWIDTH","CARDHEIGHT","lineWidth","strokeStyle","strokeRect","onload","updatePoints","x","y","_defineProperty","canvasSize","size","CARDDIMENSIONS","module","exports","Trick","Player","super","dealerCards","handTracker","result","makeTricks","addCardBoard","card","i","tricks","length","active","addCard","activateNextTrick","dealerPlayCycle","trickArray","trick1","HEIGHT","color","push","trick2","WIDTH","trick3","trick4","updateDealerCards","newDealerCards","forEach","trick","array","cards","updateCardTracker","arguments","undefined","Array","keys","splice","val","updateBestHand","flushCheck","straightCheck","fourKind","threeKind","twoKind","values","chain","cleanUpResult","card2","idx","slice","concat","activeTricks","newTrick","flatResult","flat","shift","sumScores","scores","score","num","newTrickSet","nextDealerCard","makeCards","allCards","suits","j","drawCard","scaler","random","Math","pick","floor","chosen","indexOf","Deck","Dealer","Game","dealer","name","player","deck","round","prep_game","calcScaler","START_HAND","drawPlayer","drawDealer","new_card","nextRound","gold","compareBoards","dealer_scores","evaluateBoard","player_scores","min","playerroundscore","dealerroundscore","document","getElementById","innerText","playerscorehtml","dealerscorehtml","font","fillStyle","clearRect","fillText","resetBoard","winner","playerscore","dealerscore","DIM_X","animateGold","evaluatePoker","fillRect","cardback","trait","major","evaluate","sum","sorted","sortCards","every","hash","pair","trips","rank","tiebreaks","filter","majorSum","tiebreakSum","removeCard","index","count","MAXCARDS","XBUFFER","YBUFFER","xshift","updateCards","fontArray","fontSize","trickobj","style","display","backgroundColor","trickX","trickY","currentCard","TRICKDIMENSIONS","sorter","card1","pivot","left","ele","right","leftSorted","rightSorted","createPoints","box","windowWidth","window","innerWidth","windowHeight","innerHeight","canvasDimensions","game","gameCtx","allTricks","setupScreen","buildTricksCards","bindCanvas","cardSelected","resetCardLinks","tricksidx","cardsidx","tracePath","beginPath","moveTo","lineTo","addEventListener","handleCanvasClick","bind","e","xOffset","yOffset","mouseX","parseInt","clientX","mouseY","clientY","console","log","isPointInPath","moveCard","newTrickButton","newCardButton","newTrickButtonPoints","newCardButtonPoints","newScoreRoundButton","MAXROUNDS","playRound","owner","ownerid","animateScores","roundscore","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","ViewGame","gameCanvas","getContext","setAttribute","gameCanvasRect","getBoundingClientRect","gamepos","view","overlay","start","gameover","startbutton","continuebutton","restartbutton","newGame"],"sourceRoot":""}