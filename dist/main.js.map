{"version":3,"file":"main.js","mappings":"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","sources":["webpack://carnivalpoker/./src/game_files/card.js","webpack://carnivalpoker/./src/game_files/dealer.js","webpack://carnivalpoker/./src/game_files/deck.js","webpack://carnivalpoker/./src/game_files/game.js","webpack://carnivalpoker/./src/game_files/player.js","webpack://carnivalpoker/./src/game_files/trick.js","webpack://carnivalpoker/./src/game_files/util.js","webpack://carnivalpoker/./src/game_files/view_game.js","webpack://carnivalpoker/webpack/bootstrap","webpack://carnivalpoker/webpack/runtime/define property getters","webpack://carnivalpoker/webpack/runtime/hasOwnProperty shorthand","webpack://carnivalpoker/webpack/runtime/make namespace object","webpack://carnivalpoker/./src/index.js"],"sourcesContent":["const Util = require(\"./util\")\r\n\r\nconsole.log(Util.canvasSize(),\"Util canvasSize\")\r\nclass Card {\r\n    static CARDDIMENSIONS = [[41,60],[55,80],[69,100]]\r\n    \r\n    static canvasSize = Util.canvasSize().size;\r\n    static CARDWIDTH = this.canvasSize === \"Large\" ? this.CARDDIMENSIONS[2][0] : this.canvasSize === \"Medium\" \r\n        ? this.CARDDIMENSIONS[1][0] : this.CARDDIMENSIONS[0][0];\r\n    static CARDHEIGHT = this.canvasSize === \"Large\" ? this.CARDDIMENSIONS[2][1] : this.canvasSize === \"Medium\" \r\n    ? this.CARDDIMENSIONS[1][1] : this.CARDDIMENSIONS[0][1];\r\n    constructor(object) {\r\n        \r\n        //#2-14\r\n        this.value = object.value;\r\n        // Suit needs to match the card save: Clubs, Diamond, Hearts, Spades\r\n        this.suit = object.suit;\r\n        // Code this in once ready to draw\r\n        this.sprite = new Image();\r\n        this.sprite.src = \"images/Cards/Medium/\"+this.suit+this.value+\".png\";\r\n        // console.log(this.sprite.src,\"Card Src\");\r\n        this.selected = false;\r\n        //Might need to know what trick we are inside, for event handling\r\n        this.trickid = 0;\r\n        this.pos = [0,0];\r\n        this.points =[];\r\n    }\r\n    animate(ctx,spot){\r\n        ctx.drawImage(this.sprite,spot[0],spot[1],Card.CARDWIDTH,Card.CARDHEIGHT)\r\n        if(this.selected){\r\n        ctx.lineWidth = 3;;\r\n        ctx.strokeStyle = \"#FFFF00\";\r\n        ctx.strokeRect(spot[0],spot[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n        }\r\n        this.sprite.onload = ()=> {   \r\n            ctx.drawImage(this.sprite,spot[0],spot[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n            if(this.selected){\r\n                ctx.lineWidth = 3;\r\n                ctx.strokeStyle = \"#FFFF00\";\r\n                ctx.strokeRect(spot[0],spot[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n            }\r\n        };\r\n\r\n    }\r\n    updatePoints(pos){\r\n        this.pos = pos || this.pos;\r\n        this.points =[{\r\n            x: this.pos[0],\r\n            y: this.pos[1]\r\n        },{\r\n            x: this.pos[0]+Card.CARDWIDTH,\r\n            y: this.pos[1]\r\n        },{\r\n            x: this.pos[0]+Card.CARDWIDTH,\r\n            y: this.pos[1]+Card.CARDHEIGHT\r\n        },{\r\n            x: this.pos[0],\r\n            y: this.pos[1]+Card.CARDHEIGHT\r\n        }\r\n    ];\r\n    }\r\n}\r\n\r\nmodule.exports = Card; ","const Trick = require(\"./trick\")\r\nconst Player = require(\"./player\")\r\nconst Util = require(\"./util\")\r\nclass Dealer extends Player{\r\n\r\n    constructor(object){\r\n        super(object);\r\n        this.dealerCards = [];\r\n        this.handTracker = {result: []};\r\n        this.makeTricks();\r\n    }\r\n    addCardBoard(card){\r\n        for(let i = 0;i <this.tricks.length;i++){\r\n            if(this.tricks[i].active && this.tricks[i].addCard(card)){\r\n                break;\r\n            }else if(!this.tricks[i].active){\r\n                this.activateNextTrick();\r\n                this.addCardBoard(card);\r\n                break;\r\n            }\r\n        }\r\n        this.dealerPlayCycle();\r\n        return true;\r\n    }\r\n\r\n    makeTricks(){\r\n        let trickArray = [];\r\n        let trick1 = new Trick({pos: [this.pos[0],this.pos[1]+Trick.HEIGHT],color: \"#FFA500\", trickid: 5, active: true});\r\n        trickArray.push(trick1);\r\n        let trick2 = new Trick({pos: [this.pos[0]+Trick.WIDTH,this.pos[1]+Trick.HEIGHT], color: \"#00CC33\", trickid: 6, active: true});\r\n        trickArray.push(trick2);\r\n        let trick3 = new Trick({pos: this.pos, color: \"#800080\", trickid: 7, active: false});\r\n        trickArray.push(trick3);\r\n        let trick4 = new Trick({pos: [this.pos[0]+Trick.WIDTH,this.pos[1]], color: \"#0099FF\", trickid: 8, active: false});\r\n        trickArray.push(trick4);\r\n        this.tricks = trickArray;\r\n    }\r\n    updateDealerCards (){\r\n        let newDealerCards = [];\r\n        this.tricks.forEach((trick)=>{\r\n            let array = [...trick.cards];\r\n            newDealerCards = [...newDealerCards, ...array];\r\n        })\r\n        this.dealerCards = newDealerCards;\r\n    }\r\n\r\n\r\n    updateCardTracker (cards = this.dealerCards, object = this.handTracker){\r\n        console.log(cards,\"cards\");\r\n        object.cards = cards;\r\n        let values = [...Array(15).keys()].splice(2,15)\r\n        values.forEach((value) => {\r\n            object[value] = [];\r\n        });\r\n        let suits = [\"Clubs\",\"Hearts\",\"Diamond\",\"Spades\"];\r\n        suits.forEach((suit)=>{\r\n            object[suit] = [];\r\n        })\r\n        cards.forEach((card)=>{\r\n            let suit = card.suit;\r\n            let val = card.value;\r\n            object[suit].push(card);\r\n            object[val].push(card);\r\n        })\r\n        console.log(object,\"object = hand Tracker\")\r\n    }\r\n\r\n    updateBestHand (object = this.handTracker){\r\n        this.updateCardTracker(object.cards, object);\r\n        if(object.cards.length <= 5 ){\r\n            object.result.push(object.cards)\r\n            return object\r\n        }\r\n        let flushCheck = [];\r\n        let straightCheck = [];\r\n        let fourKind = [];\r\n        let threeKind = [];\r\n        let twoKind = [];\r\n        // Check for flush\r\n        let suits = [\"Clubs\",\"Hearts\",\"Diamond\",\"Spades\"];\r\n        suits.forEach((suit)=>{\r\n            if(object[suit].length>4){\r\n                flushCheck = object[suit]; \r\n            }\r\n        })\r\n        \r\n        // Check for straight\r\n        let values = [...Array(15).keys()].splice(2,15);\r\n        let chain = [];\r\n        values.forEach((value)=>{\r\n            if(object[value].length >= 4){\r\n                fourKind.push(object[value]);\r\n            } else if(object[value].length ===3){\r\n                threeKind.push(object[value]);\r\n            } else if (object[value].length === 2){\r\n                twoKind.push(object[value]);\r\n            }\r\n            if(object[value][0]){\r\n                chain.push(object[value][0])\r\n                if(chain.length === 5){\r\n                    straightCheck = chain;\r\n                }\r\n            } else {\r\n                chain = [];\r\n            }\r\n        });\r\n        //\r\n        const cleanUpResult = () => {\r\n            let copyObject = {...object};\r\n            console.log(copyObject, \"Object before card array clean\")\r\n            object.result.forEach((trick)=>{\r\n                trick.forEach((card)=>{\r\n                    object.cards.forEach((card2,idx)=>{\r\n                       if(card.suit === card2.suit && card.value === card2.value){\r\n                           object.cards = object.cards.slice(0,idx).concat(object.cards.slice(idx+1))\r\n                       }\r\n                    })\r\n                })\r\n            })\r\n            console.log(object, \"Object after card array clean\")\r\n            return this.updateBestHand(object);\r\n        }\r\n        console.log([twoKind,threeKind,fourKind,straightCheck,flushCheck],\"Check arrays\")\r\n        //Build Straight Flush\r\n        // if(flushCheck.length !== 0 && straightCheck.length !== 0){\r\n        //     let straightCards = straightCheck.filter((card)=>{\r\n        //         card.suit === flushCheck[0].suit;\r\n        //     })\r\n        //     let result = [];\r\n        //     for(let i = 0; i < 5; i++){\r\n        //         result.push(straightCards[i]);\r\n        //     }\r\n        //     object.result.push(result);\r\n        //     console.log(\"Found Straight Flush\")\r\n        //     return cleanUpResult();\r\n        // }\r\n        //Build Four of a Kind\r\n        if(fourKind.length ){\r\n            let result = [];\r\n            for(let i = 0; i < 4; i++){\r\n                result.push(fourKind[0][i]);\r\n            }\r\n            object.result.push(result);\r\n            console.log(\"Found Four Kind\");\r\n            return cleanUpResult();\r\n        }\r\n        //Build Full House\r\n        if(threeKind.length && twoKind.length){\r\n            let result = [];\r\n            for(let i = 0; i < 3; i++){\r\n                result.push(threeKind[0][i]);\r\n                if(i !== 2){\r\n                    result.push(twoKind[0][i])\r\n                }\r\n            }\r\n            object.result.push(result);\r\n            console.log(\"Found Full House\");\r\n            return cleanUpResult();\r\n        }\r\n        //Build Flush\r\n        if(flushCheck.length){\r\n            let result = [];\r\n            for(let i = 0; i < 5; i++){\r\n                result.push(flushCheck[i]);\r\n            }\r\n            object.result.push(result);\r\n            console.log(\"Found Flush\");\r\n            return cleanUpResult();\r\n        }\r\n        // Build Straight\r\n        if(straightCheck.length){\r\n            let result = [];\r\n            for(let i = 0; i < 5; i++){\r\n                result.push(straightCheck[i]);\r\n            }\r\n            object.result.push(result);\r\n            console.log(\"Found Straight\");\r\n            return cleanUpResult();\r\n        }\r\n        // Build three of a Kind\r\n        if(threeKind.length){\r\n            let result = [];\r\n            for(let i = 0; i < 3; i++){\r\n                result.push(threeKind[0][i]);\r\n            }\r\n            object.result.push(result);\r\n            console.log(\"Found Three\");\r\n            return cleanUpResult();\r\n        }\r\n        // Build two of a Kind\r\n        if(twoKind.length){\r\n            if(twoKind.length > 1){\r\n                let result = [];\r\n                for(let i = 0; i < 2; i++){\r\n                    result.push(twoKind[0][i]);\r\n                    result.push(twoKind[1][i]);\r\n                }\r\n                console.log(result, \"Result in Two Pair\");\r\n                object.result.push(result);\r\n                return cleanUpResult();\r\n            }\r\n            let result = [];\r\n            for(let i = 0; i < 2; i++){\r\n                result.push(twoKind[0][i]);\r\n            }\r\n            console.log(result, \"Result in Pair\");\r\n            object.result.push(result);\r\n            return cleanUpResult();\r\n        }\r\n        let result = [];\r\n        for(let i = 0; i < 5; i++){\r\n            result.push(object.cards[i]);\r\n        }\r\n        console.log(result, \"Result in Nothing\");\r\n        object.result.push(result);\r\n        console.log(\"Found Nothing\");\r\n        return cleanUpResult();        \r\n    }\r\n\r\n    dealerPlayCycle () {\r\n        this.updateDealerCards();\r\n        this.updateCardTracker();\r\n        if(this.dealerCards.length >= 5){\r\n            this.handTracker.result = [];\r\n            this.updateBestHand();\r\n            console.log(this.handTracker,\"Hand Tracker\")\r\n            console.log(this.dealerCards,\"Dealer Cards\")\r\n        };\r\n        if(this.activeTricks === this.handTracker.result.length){\r\n            //Easy Case\r\n            this.handTracker.result.forEach((newTrick,idx)=>{\r\n                this.tricks[idx].cards = []; \r\n                newTrick.forEach((card)=>{\r\n                    this.tricks[idx].addCard(card)\r\n                })\r\n            })\r\n        }else{\r\n            if(this.handTracker.result.length > this.activeTricks){\r\n                let flatResult = this.handTracker.result.flat();\r\n                for(let i = 0; i < this.activeTricks; i++){\r\n                    this.tricks[i].cards = [];\r\n                    while((this.tricks[i].cards.length < 5) && (flatResult.length > 0)) {\r\n                        this.tricks[i].addCard(flatResult.shift());\r\n                    }\r\n                }\r\n            }        \r\n        }\r\n    }\r\n\r\n\r\n    sumScores (scores) {\r\n        let score = 0;\r\n        scores.forEach((num)=>{\r\n            score += num\r\n        } );\r\n        return score;\r\n    }\r\n\r\n    newTrickSet (){\r\n        let trickArray = [];\r\n        let tempPos = this.pos;\r\n        let trick1 = new Trick({pos: this.pos, trickid: 1});\r\n        trickArray.push(trick1);\r\n        let trick2 = new Trick({pos: [this.pos[0]+400,this.pos[1]], color: \"#00FF00\", trickid: 2});\r\n        trickArray.push(trick2);\r\n        let trick3 = new Trick({pos: [this.pos[0],this.pos[1]+150], color: \"#FF0000\", trickid: 3, active: false});\r\n        trickArray.push(trick3);\r\n        let trick4 = new Trick({pos: [this.pos[0]+400,this.pos[1]+150], color: \"#0000FF\", trickid: 4, active: false});\r\n        trickArray.push(trick4);\r\n        return trickArray;\r\n    }\r\n\r\n\r\n    nextDealerCard(){\r\n\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = Dealer;","const Card = require(\"./card\")\r\n\r\nclass Deck {\r\n\r\n        constructor(){\r\n            this.cards = [];\r\n            this.makeCards();\r\n        }\r\n\r\n    makeCards() {\r\n        let allCards = [];\r\n        let values = [2,3,4,5,6,7,8,9,10,11,12,13,14];\r\n        let suits = [\"Clubs\",\"Hearts\",\"Diamond\",\"Spades\"];\r\n        \r\n        for(let i = 0;i < values.length; i++){\r\n            for(let j = 0; j < suits.length; j++){\r\n                let cardObject = {\r\n                    suit: suits[j],\r\n                    value: values[i],\r\n                }\r\n                let card = new Card(cardObject);\r\n                allCards.push(card);\r\n            }\r\n        }\r\n        this.cards = allCards;\r\n        return true;\r\n    }\r\n\r\n    drawCard() {\r\n        const scaler = this.cards.length;\r\n        const random = Math.random();\r\n        const pick = Math.floor(scaler * random);\r\n        const chosen = this.cards[pick];\r\n        return this.cards.splice(this.cards.indexOf(chosen),1)[0];\r\n    }\r\n}\r\n\r\n// let deck = new Deck();\r\n// console.log(deck.cards.length);\r\n// console.log(deck.drawCard());\r\n// console.log(deck.cards.length);\r\nmodule.exports = Deck;","const Player = require(\"./player\")\r\nconst Deck = require(\"./deck\")\r\nconst Util = require(\"./util\")\r\nconst Dealer = require(\"./dealer\")\r\n\r\nclass Game {\r\n    static START_HAND = 7;\r\n    static MAXROUNDS = 11;\r\n    //default is 1200,800\r\n    // 800 - 2*120 (Trick) = 560\r\n\r\n    constructor(canvasSize){\r\n        this.dealer = new Dealer({pos: [canvasSize[1]*0.36,canvasSize[1]*0.25], name: \"Dealer\", color:\"#FFA500\",canvasSize: canvasSize})\r\n        this.player = new Player({pos: [canvasSize[1]*0.36,canvasSize[1]*0.7], name: \"Player\", color:\"#FFA500\",canvasSize: canvasSize})\r\n        this.deck = new Deck();\r\n        this.canvasSize = canvasSize;\r\n        this.round = 1;\r\n        this.prep_game();\r\n        this.scaler = 1;\r\n    }\r\n    calcScaler(){\r\n        if(this.canvasSize[0] === 900){\r\n            return this.scaler = 0.75;\r\n        }else if(this.canvasSize[0] === 1500){\r\n            return this.scaler = 1.25;\r\n        }\r\n    }\r\n\r\n\r\n    prep_game(){\r\n        for(let i = 0; i < Game.START_HAND; i++){\r\n            this.drawPlayer();\r\n        }\r\n        for(let i = 0; i < Game.START_HAND; i++){\r\n            this.drawDealer();\r\n        }\r\n    }\r\n\r\n    drawPlayer(){\r\n        let new_card = this.deck.drawCard();\r\n        this.player.addCardBoard(new_card);     \r\n    }\r\n    drawDealer(){\r\n        let new_card = this.deck.drawCard();\r\n        this.dealer.addCardBoard(new_card);\r\n    }\r\n\r\n    nextRound(){\r\n        this.round += 1;\r\n        this.player.gold += 4;\r\n        this.compareBoards();\r\n        // console.log(this.player.score,\"player score\");\r\n        // console.log(this.dealer.score,\"dealer score\");\r\n    }\r\n\r\n    compareBoards(){\r\n        // Will need refactor to compare for each trick\r\n        // Loop based on whichever board has the most tricks\r\n        // Include auto win if mismatch on trick count\r\n\r\n        let dealer_scores = this.dealer.evaluateBoard();  \r\n        // console.log(dealer_scores,\"Dealer Scores\")\r\n        let player_scores = this.player.evaluateBoard();\r\n        // console.log(player_scores,\"Player Scores\")\r\n        let min = dealer_scores.length < player_scores.length ? dealer_scores.length : player_scores.length;\r\n        // console.log(min,\"min\");\r\n        let playerroundscore = 0;\r\n        let dealerroundscore = 0;\r\n        for(let i = 0;i<min;i++){\r\n            if(dealer_scores[i]>player_scores[i]){\r\n                let scoreobj = document.getElementById(`score${i+1}`)\r\n                scoreobj.innerText = 0;\r\n                dealerroundscore += 1;\r\n                // console.log(\"Dealer Wins 1\")\r\n            }else if(dealer_scores[i]<player_scores[i]){\r\n                let scoreobj = document.getElementById(`score${i+1}`)\r\n                scoreobj.innerText = 1;\r\n                playerroundscore += 1;\r\n                // console.log(\"Player Wins 1\")\r\n            }else if(dealer_scores[i] === player_scores[i]){\r\n                // console.log(\"Tie\");\r\n                let scoreobj = document.getElementById(`score${i+1}`)\r\n                scoreobj.innerText = \"\";\r\n            }\r\n        }\r\n        this.player.score += playerroundscore;\r\n        this.dealer.score += dealerroundscore;\r\n        // console.log([this.player.score,this.dealer.score],\"Score after round\");\r\n        let playerscorehtml = document.getElementById(`playerscore`)\r\n        let dealerscorehtml = document.getElementById(`dealerscore`)\r\n        playerscorehtml.innerText = `Round Score     ${playerroundscore}`\r\n        dealerscorehtml.innerText = `Round Score     ${dealerroundscore}`\r\n    }\r\n\r\n    animate(ctx) {\r\n        this.calcScaler();\r\n        console.log(`${40*this.scaler}px Arial`)\r\n        ctx.font = `${40*this.scaler}px Arial`;\r\n        ctx.fillStyle = \"#FFFFFF\";\r\n        ctx.clearRect((725/1200)*this.canvasSize[0],0,300,(150/800)*this.canvasSize[1])\r\n        ctx.fillText(`Round: ${this.round}`,(725/1200)*this.canvasSize[0],(190/800)*this.canvasSize[1]);\r\n        ctx.onload = ()=> {\r\n            this.calcScaler();\r\n            ctx.clearRect((725/1200)*this.canvasSize[0],0,300,(150/800)*this.canvasSize[1])\r\n            ctx.fillText(`Dealer Hands`,(725/1200)*this.canvasSize[0],(190/800)*this.canvasSize[1]);\r\n        }\r\n    }\r\n\r\n    resetBoard(){\r\n\r\n    }\r\n\r\n    winner(){\r\n        let playerscore = this.player.score;\r\n        let dealerscore = this.dealer.score;\r\n        let result = [playerscore,dealerscore];\r\n        if(playerscore > dealerscore){\r\n            result.push(\"Player Wins!\");\r\n        }else{\r\n            result.push(\"Dealer Wins!\");\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n// const g = new Game();\r\n// g.play();\r\n\r\nmodule.exports = Game; ","const Card = require(\"./card\");\r\nconst Trick = require(\"./trick\")\r\nconst Util = require(\"./util\")\r\n\r\n\r\nclass Player{\r\n    static DIM_X = Trick.WIDTH*2;\r\n    static DIM_Y = Trick.HEIGHT*2;\r\n    constructor(object){\r\n        this.canvasSize = object.canvasSize;\r\n        this.DIM_X = \r\n        this.pos = object.pos;\r\n        this.name = object.name;\r\n        this.score = 0;\r\n        this.gold = 0;\r\n        this.color = object.color;\r\n        //Probably want an array of trick pos.\r\n        //Probably want to prefill each board with 4 tricks, 3 of which are empty.\r\n        this.tricks = [];\r\n        this.activeTricks = 2;\r\n        this.makeTricks();\r\n        this.scaler = 1;\r\n        this.calcScaler();\r\n    }\r\n\r\n    calcScaler(){\r\n        if(this.canvasSize[0] === 900){\r\n            return this.scaler = 0.75;\r\n        }else if(this.canvasSize[0] === 1500){\r\n            return this.scaler = 1.25;\r\n        }\r\n    }\r\n\r\n    addCardBoard(card){\r\n        for(let i = 0;i <this.tricks.length;i++){\r\n            if(this.tricks[i].addCard(card)){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    activateNextTrick(){\r\n        for(let i = 0;i<this.tricks.length;i++){\r\n            let trick = this.tricks[i];\r\n            if(trick.active === false){\r\n                trick.active = true;\r\n                this.activeTricks += 1;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    makeTricks(){\r\n        let trickArray = [];\r\n        let tempPos = this.pos;\r\n        let trick1 = new Trick({pos: this.pos, color: \"#FFA500\", trickid: 1, active: true});\r\n        trickArray.push(trick1);\r\n        let trick2 = new Trick({pos: [this.pos[0]+Trick.WIDTH,this.pos[1]], color: \"#00CC33\", trickid: 2, active: true});\r\n        trickArray.push(trick2);\r\n        let trick3 = new Trick({pos: [this.pos[0],this.pos[1]+Trick.HEIGHT], color: \"#800080\", trickid: 3, active: false});\r\n        trickArray.push(trick3);\r\n        let trick4 = new Trick({pos: [this.pos[0]+Trick.WIDTH,this.pos[1]+Trick.HEIGHT], color: \"#0099FF\", trickid: 4, active: false});\r\n        trickArray.push(trick4);\r\n        this.tricks = trickArray;\r\n    }\r\n    animate(ctx){\r\n        // ctx.clearRect(0,0,900,200)\r\n        ctx.fillStyle = this.color;\r\n        this.tricks.forEach((trick)=>{\r\n            trick.animate(ctx,this.name);\r\n        })\r\n        this.animateGold(ctx);\r\n    }\r\n\r\n    evaluateBoard(){\r\n        let scores = [];\r\n        for(let i = 0;i <this.tricks.length;i++){\r\n            let trick = this.tricks[i];\r\n            trick.evaluatePoker();\r\n            let value = trick.value || 0;\r\n            scores.push(value);\r\n        }\r\n        return scores;\r\n    }\r\n\r\n    animateGold(ctx){\r\n        // Might move this to the game class\r\n        if(this.name ===\"Player\"){\r\n        ctx.fillStyle = \"#003399\"\r\n        ctx.fillRect((980/1200)*this.canvasSize[0],(370/800)*this.canvasSize[1],130*this.scaler,260*this.scaler)\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = \"#FFFFFF\";\r\n        ctx.strokeRect((980/1200)*this.canvasSize[0],(370/800)*this.canvasSize[1],130*this.scaler,260*this.scaler);    \r\n        ctx.font = `${30*this.scaler}px Arial`;\r\n        ctx.fillStyle = \"#FFFFFF\"\r\n        ctx.fillText(`Gold: ${this.gold}`,(995/1200)*this.canvasSize[0],(400/800)*this.canvasSize[1]);\r\n        // Button for new card\r\n        const cardback = new Image();\r\n        cardback.src = \"images/Cards/Medium/BackRed1.png\"\r\n        ctx.drawImage(cardback,(1020/1200)*this.canvasSize[0],(405/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n        ctx.font =  `${20*this.scaler}px Arial`;\r\n        ctx.fillStyle = \"#FFFFFF\"\r\n        ctx.fillText(`New Card`,(995/1200)*this.canvasSize[0],(507/800)*this.canvasSize[1]);\r\n        ctx.fillText(`2`,(1090/1200)*this.canvasSize[0],(507/800)*this.canvasSize[1]);\r\n        /// Five in a row for the new hand\r\n        ctx.drawImage(cardback,(995/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n        ctx.drawImage(cardback,(1001/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n        ctx.drawImage(cardback,(1007/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n        ctx.drawImage(cardback,(1013/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n        ctx.drawImage(cardback,(1019/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n        ctx.font =  `${20*this.scaler}px Arial`;\r\n        ctx.fillStyle = \"#FFFFFF\"\r\n        ctx.fillText(`New Hand`,(995/1200)*this.canvasSize[0],(620/800)*this.canvasSize[1]);\r\n        ctx.fillText(`6`,(1092/1200)*this.canvasSize[0],(620/800)*this.canvasSize[1]);\r\n        //This is a box 1020 to 1100 or 80 by 80\r\n        //The points are [1020,100],[1100,100],[1020,180],[1100,180]\r\n        cardback.onload = ()=> {\r\n            ctx.drawImage(cardback,(1020/1200)*this.canvasSize[0],(405/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n            ctx.drawImage(cardback,(995/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n            ctx.drawImage(cardback,(1001/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n            ctx.drawImage(cardback,(1007/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n            ctx.drawImage(cardback,(1013/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n            ctx.drawImage(cardback,(1019/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1],Card.CARDWIDTH,Card.CARDHEIGHT);\r\n        }\r\n        \r\n        \r\n    }}\r\n}\r\n\r\nmodule.exports = Player;","const Player = require(\"./player\")\r\nconst Card = require(\"./card\")\r\nconst Util = require(\"./util\")\r\n\r\nclass Trick {\r\n    static TRICKDIMENSIONS = [[233,90],[310,120],[388,150]]\r\n    static canvasSize = Util.canvasSize().size;\r\n    static WIDTH = this.canvasSize === \"Large\" ? this.TRICKDIMENSIONS[2][0] : this.canvasSize === \"Medium\" \r\n    ? this.TRICKDIMENSIONS[1][0] : this.TRICKDIMENSIONS[0][0];\r\n    static HEIGHT = this.canvasSize === \"Large\" ? this.TRICKDIMENSIONS[2][1] : this.canvasSize === \"Medium\" \r\n    ? this.TRICKDIMENSIONS[1][1] : this.TRICKDIMENSIONS[0][1];\r\n    static YBUFFER = this.HEIGHT*0.09;\r\n    static XBUFFER = this.HEIGHT*0.09;\r\n    static MAXCARDS = 5;\r\n    constructor(object){\r\n        this.pos = object.pos;\r\n        this.cards = [];\r\n        this.value = 0;\r\n        this.values = [];\r\n        this.trait = \"High Card\";\r\n        this.major = 0;\r\n        this.color = object.color;\r\n        this.trickid = object.trickid;\r\n        this.active = object.active;\r\n        this.points = [];\r\n        this.updatePoints();\r\n        this.scaler = 1;\r\n        this.calcScaler();\r\n    }\r\n\r\n    calcScaler(){\r\n        if(this.canvasSize === \"Small\"){\r\n            return this.scaler = 0.75;\r\n        }else if(this.canvasSize === \"Large\"){\r\n            return this.scaler = 1.25;\r\n        }\r\n    }\r\n\r\n    updatePoints(pos){\r\n        this.pos = pos || this.pos;\r\n        this.points =[{\r\n            x: this.pos[0],\r\n            y: this.pos[1]\r\n        },{\r\n            x: this.pos[0]+Trick.WIDTH,\r\n            y: this.pos[1]\r\n        },{\r\n            x: this.pos[0]+Trick.WIDTH,\r\n            y: this.pos[1]+Trick.HEIGHT\r\n        },{\r\n            x: this.pos[0],\r\n            y: this.pos[1]+Trick.HEIGHT\r\n        }\r\n    ];\r\n    }\r\n\r\n    evaluate() {\r\n        let sum = 0;\r\n        this.cards.forEach((card)=>{\r\n            sum += card.value;\r\n        })\r\n        return sum; \r\n    }\r\n\r\n    evaluatePoker(){\r\n        let sorted = Util.sortCards(this.cards);\r\n        this.cards = sorted;\r\n        this.value = 0;\r\n        this.major = 0;\r\n        let values = [];\r\n        this.trait = \"High Card\";\r\n        let traitList = [\"High Card\",\"One Pair\",\"Two Pair\",\"Three of a Kind\",\r\n        \"Straight\",\"Flush\",\"Full House\",\"Four of a Kind\",\"Straight-Flush\"];\r\n        let suits = [\"Clubs\",\"Hearts\",\"Diamond\",\"Spades\"];\r\n        let base = 14;\r\n        for(let i = 0;i<this.cards.length;i++){\r\n            values.push(this.cards[i].value)\r\n        }\r\n        this.values = values;\r\n        if(this.cards.length === 5){\r\n            // Check flush\r\n            let flushCheck = false;\r\n            let straightCheck = true;\r\n            for(let i = 0;i<suits.length;i++){\r\n                let suit = suits[i];\r\n                if(this.cards.every((card)=>card.suit === suit)){\r\n                    flushCheck = true;\r\n                }\r\n            }\r\n            // Check straight\r\n            for(let i = 0;i<(values.length-1);i++){\r\n                if(values[i] !== values[i+1]+1){\r\n                    // console.log(values,\"straigh check\");\r\n                    // console.log([values[i],values[i+1]],\"straight check\");\r\n                    straightCheck = false;\r\n                }\r\n            }\r\n            if(flushCheck && straightCheck){\r\n                this.trait = \"Straight-Flush\";\r\n            }else if(flushCheck){\r\n                this.trait = \"Flush\"\r\n            }else if(straightCheck){\r\n                this.trait = \"Straight\"\r\n            }\r\n        }\r\n        let hash = {};\r\n        for(let i = 0;i<values.length;i++){\r\n            if(hash[values[i]] === undefined){\r\n                hash[values[i]] = 1;\r\n            }else{\r\n                hash[values[i]] += 1;\r\n            }\r\n        }\r\n        let pair = false;\r\n        let trips = false;\r\n        for(let i = 0;i<values.length;i++){\r\n             if(hash[values[i]]===4){\r\n                this.trait = \"Four of a Kind\";\r\n                this.major = values[i];\r\n             }\r\n             if(hash[values[i]]===2 && pair === false){\r\n                pair = true;\r\n                this.trait = \"One Pair\"\r\n                this.major = values[i];\r\n             }else if(hash[values[i]]===2 && pair === true && values[i] !== values[i-1]){\r\n                this.trait = \"Two Pair\"\r\n                this.major = values[i]>this.major ? values[i] : this.major;\r\n             }else if(hash[values[i]]===3){\r\n                trips = true;\r\n                this.trait = \"Three of a Kind\"\r\n                this.major = values[i];\r\n            }\r\n        }\r\n        if(trips && pair){\r\n            this.trait = \"Full House\"\r\n        }\r\n        this.major = this.major || values[0];\r\n        let rank = traitList.indexOf(this.trait)+1;\r\n        let tiebreaks = values.filter((num)=> num !== this.major);\r\n        let majorSum = this.major*(base**rank)*2;\r\n        let tiebreakSum = 0;\r\n        for(let i = 1;i<tiebreaks.length+1;i++){\r\n                tiebreakSum += tiebreaks[i-1]*(base**rank)/(base**i);\r\n        }\r\n        this.value = majorSum + tiebreakSum;\r\n        return this.value;\r\n    }\r\n\r\n    removeCard(card) {\r\n        let index = this.cards.indexOf(card);\r\n        return this.cards.splice(index,1)[0];\r\n    }\r\n\r\n    addCard(card){\r\n        // Need to refactor this to check if the trick has 5 cards\r\n        let count = this.cards.length;\r\n        if(count < Trick.MAXCARDS && this.active){\r\n            let pos = this.pos;\r\n            pos = [pos[0]+Trick.XBUFFER,pos[1]+Trick.YBUFFER]\r\n            let xshift = count*Card.CARDWIDTH + count*3;\r\n            pos = [pos[0]+xshift,pos[1]];\r\n            card.pos = pos;\r\n            card.trickid = this.trickid;\r\n            card.updatePoints();\r\n            this.cards.push(card);\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    updateCards(){\r\n        let count = this.cards.length;\r\n        for(let i = 0;i<count;i++){\r\n            let card = this.cards[i];\r\n            let pos = this.pos \r\n            pos = [pos[0]+Trick.XBUFFER,pos[1]+Trick.YBUFFER]\r\n            let xshift = i*Card.CARDWIDTH+i*3;\r\n            pos = [pos[0]+xshift,pos[1]];\r\n            card.pos = pos;\r\n            card.updatePoints();\r\n        }\r\n    }\r\n\r\n\r\n    animate(ctx,name){\r\n        let fontArray = [16,22,30];\r\n        const fontSize = Trick.canvasSize === \"Small\" ? fontArray[0] : Trick.canvasSize === \"Large\" ? fontArray[2] : fontArray[1]\r\n        if(this.active){\r\n        const trickobj = document.getElementById(`trick${this.trickid}`)\r\n        trickobj.style.display = \"flex\";\r\n        trickobj.style.backgroundColor = this.color;\r\n        let sorted = Util.sortCards(this.cards);\r\n        this.cards = sorted;\r\n        this.updateCards();\r\n        this.evaluatePoker();\r\n        ctx.fillStyle = this.color\r\n        let trickX = this.pos[0];\r\n        let trickY = this.pos[1];\r\n        ctx.fillRect(trickX,trickY,Trick.WIDTH,Trick.HEIGHT)\r\n        ctx.fillStyle = \"#FFFFFF\"\r\n        ctx.font = `${fontSize}px Arial`;\r\n        ctx.fillText(`${this.trait}`,trickX+Trick.WIDTH*0.33,trickY+Trick.HEIGHT*0.95)\r\n        for(let i = 0;i<this.cards.length;i++){\r\n            let currentCard = this.cards[i];\r\n            currentCard.animate(ctx,currentCard.pos);\r\n            let cardobj = document.getElementById(`${this.trickid}-${i}`)\r\n            cardobj.src = currentCard.sprite.src\r\n        }\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = \"#FFFFFF\";\r\n        ctx.strokeRect(this.pos[0],this.pos[1],Trick.WIDTH,Trick.HEIGHT);\r\n        }else{\r\n        ctx.fillStyle = this.color\r\n        let trickX = this.pos[0];\r\n        let trickY = this.pos[1];\r\n        ctx.fillRect(trickX,trickY,Trick.WIDTH,Trick.HEIGHT)\r\n        ctx.fillStyle = \"#FFFFFF\"\r\n        ctx.font = `${fontSize}px Arial`;\r\n        if(name === \"Player\"){\r\n        console.log(fontSize,\"fontSize\")\r\n        ctx.fillText(`Unlock Hand: 6 Gold!`,trickX+Trick.WIDTH*0.2*this.scaler,trickY+Trick.HEIGHT*0.5)\r\n        }else{\r\n        ctx.fillStyle = \"#FFFFFF\"\r\n        ctx.fillText(`Inactive Hand`,trickX+Trick.WIDTH*0.3*this.scaler,trickY+Trick.HEIGHT*0.5)    \r\n        }\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = \"#FFFFFF\";\r\n        ctx.strokeRect(this.pos[0],this.pos[1],Trick.WIDTH,Trick.HEIGHT);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// let t = new Trick({pos: [0,0]});\r\n// t.addCard(\"A\");\r\n// console.log(t,\"t\");\r\n\r\n\r\nmodule.exports = Trick; ","\r\nexport function sortCards(array){\r\n        function sorter(card1,card2){\r\n            //Return 1 if card 1 > card 2\r\n            //Return -1 if card 1 < card 2\r\n            const suits = [\"Spades\",\"Hearts\",\"Diamond\",\"Clubs\"]\r\n            if(card1.value>card2.value){\r\n                return 1\r\n            }else if(card1.value<card2.value){\r\n                return -1 \r\n            }else{\r\n                if(suits.indexOf(card1.suit)<suits.indexOf(card2.suit)){\r\n                    return 1\r\n                }else{\r\n                    return -1 \r\n                }\r\n            }\r\n        }\r\n        let pivot = array[0];\r\n        if(array.length < 2) return array;\r\n        let left = array.slice(1).filter((ele) => sorter(pivot,ele) === -1);\r\n        let right = array.slice(1).filter((ele) => sorter(pivot,ele) === 1);\r\n        let leftSorted = sortCards(left);\r\n        let rightSorted = sortCards(right);\r\n        return leftSorted.concat([pivot]).concat(rightSorted);\r\n    }\r\nexport function createPoints(pos,box){\r\n        const points =[{\r\n            x: pos[0],\r\n            y: pos[1]\r\n        },{\r\n            x: pos[0]+box[0],\r\n            y: pos[1]\r\n        },{\r\n            x: pos[0]+box[0],\r\n            y: pos[1]+box[1]\r\n        },{\r\n            x: pos[0],\r\n            y: pos[1]+box[1]\r\n        }\r\n    ];\r\n    return points;\r\n}\r\n\r\nexport function canvasSize() {\r\n    const windowWidth= window.innerWidth;\r\n    const windowHeight= window.innerHeight;\r\n    const canvasDimensions = [[900,600],[1200,800],[1500,1000]]\r\n    let canvasSize = canvasDimensions[0];\r\n    if((windowWidth)>(canvasDimensions[2][0]+200) && (windowHeight)>(canvasDimensions[2][1]+100)){\r\n        canvasSize = canvasDimensions[2];\r\n        return {canvasSize: canvasSize, size: \"Large\"}\r\n    } else if(windowWidth>(canvasDimensions[1][0]+200) && (windowHeight>(canvasDimensions[1][1]+100))){\r\n        canvasSize = canvasDimensions[1];\r\n        return {canvasSize: canvasSize, size: \"Medium\"}\r\n    }else {\r\n        canvasSize = canvasDimensions[0];\r\n        return {canvasSize: canvasSize, size: \"Small\"}\r\n    }\r\n}","const Util = require(\"./util\")\r\nconst Game = require(\"./game\")\r\nconst Card = require(\"./card\")\r\nconst Trick = require(\"./trick\")\r\nclass ViewGame {\r\n\r\n    constructor(game,ctx,pos,canvasSize){\r\n        this.canvasSize = canvasSize;\r\n        this.game = game;\r\n        this.gameCtx = ctx;\r\n        this.allCards = [];\r\n        this.allTricks = [];\r\n        this.setupScreen();\r\n        this.buildTricksCards();\r\n        this.bindCanvas();\r\n        this.cardSelected = false;\r\n        this.pos = pos;\r\n        this.scaler = 1;\r\n        this.calcScaler();\r\n        console.log(this.scaler,\"this.scaler\")\r\n    }\r\n\r\n    calcScaler(){\r\n        if(this.canvasSize[0] === 900){\r\n            return this.scaler = 0.75;\r\n        }else if(this.canvasSize[0] === 1500){\r\n            return this.scaler = 1.25;\r\n        }\r\n    }\r\n\r\n    resetCardLinks(){\r\n        let tricksidx = [1,2,3,4,5,6,7,8]\r\n        let cardsidx = [0,1,2,3,4]\r\n\r\n        for(let i = 1;i<tricksidx.length;i++){\r\n            for(let j = 0;j<cardsidx.length;j++){\r\n                let cardobj = document.getElementById(`${i}-${j}`);\r\n                cardobj.src = \"./images/transparent.png\";\r\n            }\r\n        }\r\n    }\r\n\r\n    buildTricksCards(){\r\n        // 2D array, first item is the shape array. second item is the card.\r\n        // Loop through player tricks and build each card. \r\n        let tricks = this.game.player.tricks;\r\n        let allCards = [];\r\n        let allTricks = [];\r\n        // console.log(tricks,\"player tricks\");\r\n        for(let i = 0;i < tricks.length;i++){\r\n            let trick = tricks[i];\r\n            allTricks.push(trick);\r\n            // console.log(trick,\"a grabbed trick\");\r\n            for(let j = 0; j < trick.cards.length ; j++){\r\n                let card = trick.cards[j];\r\n                // console.log(card,\"a grabbed card\");\r\n                allCards.push(card);\r\n            }\r\n        }\r\n        this.allCards = allCards;\r\n        this.allTricks = allTricks;\r\n    }\r\n    \r\n    tracePath(object,ctx){\r\n        let points = object.points;\r\n        ctx.beginPath();\r\n        ctx.moveTo(points[0].x,points[0].y);\r\n        for(let i = 1; i < points.length; i++) {\r\n            ctx.lineTo(points[i].x,points[i].y);\r\n        }\r\n    }\r\n\r\n    bindCanvas(){\r\n        let canvas = document.getElementById(\"game\");\r\n        // console.log(canvas,\"canvasgrabbed\");\r\n        canvas.addEventListener('click',this.handleCanvasClick.bind(this))\r\n    }\r\n    // bindDealer(){\r\n    //     let canvas = document.getElementById(\"game\");\r\n    //     // console.log(canvas,\"canvasgrabbed\");\r\n    //     canvas.addEventListener('click',this.handleDealerCanvasClick.bind(this))\r\n    // }\r\n    // handleDealerCanvasClick(e) {\r\n    //     e.preventDefault();\r\n    //     console.log(\"Click detected\")\r\n     \r\n    //     let xOffset = this.pos[0];\r\n    //     let yOffset = this.pos[1];\r\n    //     let mouseX = parseInt(e.clientX - xOffset);\r\n    //     let mouseY = parseInt(e.clientY - yOffset);\r\n    //     console.log([e.clientX,e.clientY],\"Event Mouse Click Array\")\r\n    //     console.log([mouseX,mouseY],\"Mouse Click Pos After Offsets\")\r\n    //     const newScoreRoundButton = [[1000,345],[160,80]];\r\n    //     const newScoreRoundButtonPoints = Util.createPoints(newScoreRoundButton[0],newScoreRoundButton[1]);\r\n    //     let points = {points: newScoreRoundButtonPoints}\r\n    //     this.tracePath(points,this.gameCtx)\r\n    //     if(this.gameCtx.isPointInPath(mouseX,mouseY)){\r\n    //         console.log(\"Click on Score Round\");\r\n    //         this.playRound();\r\n    //     }\r\n\r\n    // }\r\n\r\n    handleCanvasClick(e) {\r\n        // e.preventDefault();\r\n        // console.log(\"Click detected\")\r\n        // console.log(this.cardSelected,\"Card Selected?\")\r\n        let xOffset = this.pos[0];\r\n        let yOffset = this.pos[1];\r\n        let mouseX = parseInt(e.clientX - xOffset);\r\n        let mouseY = parseInt(e.clientY - yOffset);\r\n        console.log([e.clientX,e.clientY],\"Event Mouse Click Array\")\r\n        console.log([mouseX,mouseY],\"Mouse Click Pos After Offsets\")\r\n        // console.log([this.allCards.length],\"Card Array Length\");\r\n        // console.log([this.allTricks.length],\"Trick Array Length\");\r\n        // see if a card has been clicked on\r\n        if(this.cardSelected === false){\r\n            for(let i =0; i< this.allCards.length;i++){\r\n                let card = this.allCards[i];\r\n                // console.log(card.pos,\"Card Pos\");\r\n                this.tracePath(card,this.gameCtx);\r\n                if (this.gameCtx.isPointInPath(mouseX,mouseY)){\r\n                    this.cardSelected = card;\r\n                    card.selected = true;\r\n                    // console.log(card,\"grabbed card\");\r\n                    this.game.player.animate(this.gameCtx);\r\n                    this.buildTricksCards();\r\n                    break;\r\n                    \r\n                }\r\n            }\r\n        }\r\n        else if(this.cardSelected){\r\n            for(let i = 0; i < this.allTricks.length;i++){\r\n                let trick = this.allTricks[i];\r\n                // console.log(trick.pos,\"Trick Pos\");\r\n                this.tracePath(trick,this.gameCtx);\r\n                if (this.gameCtx.isPointInPath(mouseX,mouseY)){\r\n                    // console.log(trick,\"grabbed trick\");\r\n                    this.moveCard(this.cardSelected,trick);\r\n                    this.game.player.animate(this.gameCtx);\r\n                    this.buildTricksCards();\r\n                }\r\n            }\r\n        }\r\n        const newTrickButton = [[(995/1200)*this.canvasSize[0],(515/800)*this.canvasSize[1]],[Card.CARDWIDTH+Card.CARDWIDTH*0.25,Card.CARDHEIGHT]];\r\n        const newCardButton = [[(1020/1200)*this.canvasSize[0],(405/800)*this.canvasSize[1]],[Card.CARDWIDTH,Card.CARDHEIGHT]];\r\n        const newTrickButtonPoints = Util.createPoints(newTrickButton[0],newTrickButton[1]);\r\n        const newCardButtonPoints = Util.createPoints(newCardButton[0],newCardButton[1]);\r\n        // Eventually need to error handle if there isnt enough gold\r\n        if(this.game.player.gold >= 6){\r\n            let points = {points: newTrickButtonPoints}\r\n            this.tracePath(points,this.gameCtx)\r\n            if(this.gameCtx.isPointInPath(mouseX,mouseY)){\r\n                console.log(\"Clicked on Trick Button\");\r\n                this.game.player.activateNextTrick();\r\n                this.game.player.gold -= 6;\r\n                this.game.player.animate(this.gameCtx);\r\n                this.buildTricksCards();\r\n            }\r\n        }\r\n        // Eventually error handle not enough gold\r\n        if(this.game.player.gold >= 2){\r\n            let points = {points: newCardButtonPoints}\r\n            this.tracePath(points,this.gameCtx)\r\n            if(this.gameCtx.isPointInPath(mouseX,mouseY)){\r\n                console.log(\"Clicked on Card Button\");\r\n                this.game.drawPlayer();\r\n                this.game.player.gold -= 2;\r\n                this.game.player.animate(this.gameCtx);\r\n                this.buildTricksCards();\r\n            }\r\n        }\r\n        // New Round button\r\n        //525,470,140,50\r\n        const newScoreRoundButton = [[(500/1200)*this.canvasSize[0],(470/800)*this.canvasSize[1]],[140*this.scaler,50*this.scaler]];\r\n        const newScoreRoundButtonPoints = Util.createPoints(newScoreRoundButton[0],newScoreRoundButton[1]);\r\n        let points = {points: newScoreRoundButtonPoints}\r\n        this.tracePath(points,this.gameCtx)\r\n        if(this.gameCtx.isPointInPath(mouseX,mouseY) && this.game.round <= Game.MAXROUNDS){\r\n            // console.log(this.game.round,\"Round#\");\r\n            this.playRound();\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    moveCard(card,trick){\r\n        let ownerid = card.trickid;\r\n        let owner;\r\n        this.allTricks.forEach((trick) =>{\r\n            if(trick.trickid === ownerid){\r\n                owner = trick;\r\n                owner.removeCard(card);\r\n                owner.updateCards();\r\n                owner.evaluatePoker();\r\n            }\r\n        })\r\n        if(trick.addCard(card)){\r\n        trick.updateCards();\r\n        trick.evaluatePoker();\r\n        this.cardSelected.selected = false;\r\n        this.cardSelected = false;\r\n        }else{\r\n            owner.addCard(card)\r\n            owner.updateCards();\r\n            owner.evaluatePoker();\r\n            this.cardSelected.selected = false;\r\n            this.cardSelected = false;\r\n        }\r\n    }\r\n\r\n\r\n    setupScreen(){\r\n        this.resetCardLinks();\r\n        this.gameCtx.clearRect(0,0,this.canvasSize[0],this.canvasSize[1]) \r\n        this.game.animate(this.gameCtx);\r\n        this.game.dealer.animate(this.gameCtx);\r\n        this.game.player.animate(this.gameCtx);\r\n        this.animateScores();\r\n        this.buildTricksCards();\r\n    }\r\n    \r\n    animateScores(){\r\n        this.calcScaler();\r\n        let scaler = this.scaler || 1; \r\n        this.gameCtx.font = `${40*scaler}px Arial`;\r\n        this.gameCtx.fillStyle = \"#FFFFFF\";\r\n        this.gameCtx.clearRect((250/1200)*this.canvasSize[0],0,300,(150/800)*this.canvasSize[1])\r\n        this.gameCtx.onload = ()=> {\r\n            this.calcScaler();\r\n            this.gameCtx.font = `${40}px Arial`;\r\n            this.gameCtx.clearRect((300/1200)*this.canvasSize[0],0,300,(150/800)*this.canvasSize[1])\r\n            this.gameCtx.fillText(`Dealer Hands`,(300/1200)*this.canvasSize[0],(190/800)*this.canvasSize[1]);\r\n        }\r\n        this.gameCtx.fillText(`Dealer Hands`,(300/1200)*this.canvasSize[0],(190/800)*this.canvasSize[1]);\r\n\r\n        //Draw Score Button\r\n        this.gameCtx.font = `${24*scaler}px Arial Bold`;\r\n        this.gameCtx.fillStyle = \"#003399\"\r\n        this.gameCtx.fillRect((525/1200)*this.canvasSize[0],(470/800)*this.canvasSize[1],140*scaler,50*scaler)\r\n        this.gameCtx.fillStyle = \"#FFFFFF\";\r\n        this.gameCtx.fillText(`Score Round`,(535/1200)*this.canvasSize[0],(500/800)*this.canvasSize[1]);\r\n        this.gameCtx.lineWidth = 3;\r\n        this.gameCtx.strokeStyle = \"#FFFFFF\";\r\n        this.gameCtx.strokeRect((525/1200)*this.canvasSize[0],(470/800)*this.canvasSize[1],140*scaler,50*scaler);\r\n        //Player Score \r\n        this.gameCtx.fillStyle = \"#003399\"\r\n        this.gameCtx.fillRect((285/1200)*this.canvasSize[0],(470/800)*this.canvasSize[1],180*scaler,50*scaler)\r\n        this.gameCtx.fillStyle = \"#FFFFFF\";\r\n        this.gameCtx.fillText(`Player Score: ${this.game.player.score}`,(295/1200)*this.canvasSize[0],(500/800)*this.canvasSize[1]);\r\n        this.gameCtx.lineWidth = 3;\r\n        this.gameCtx.strokeStyle = \"#FFFFFF\";\r\n        this.gameCtx.strokeRect((285/1200)*this.canvasSize[0],(470/800)*this.canvasSize[1],180*scaler,50*scaler);\r\n        //Dealer Score \r\n        this.gameCtx.fillStyle = \"#003399\"\r\n        this.gameCtx.fillRect((735/1200)*this.canvasSize[0],(470/800)*this.canvasSize[1],180*scaler,50*scaler)\r\n        this.gameCtx.fillStyle = \"#FFFFFF\";\r\n        this.gameCtx.fillText(`Dealer Score: ${this.game.dealer.score}`,(742/1200)*this.canvasSize[0],(500/800)*this.canvasSize[1]);\r\n        this.gameCtx.lineWidth = 3;\r\n        this.gameCtx.strokeStyle = \"#FFFFFF\";\r\n        this.gameCtx.strokeRect((735/1200)*this.canvasSize[0],(470/800)*this.canvasSize[1],180*scaler,50*scaler);\r\n\r\n    }\r\n\r\n    playRound(){\r\n        this.game.nextRound();\r\n        this.setupScreen();\r\n        this.buildTricksCards();\r\n        const roundscore = document.getElementById(\"roundscore\");\r\n        const overlay = document.getElementById(\"overlay\");\r\n        overlay.style.display = \"block\";\r\n        roundscore.style.display = \"flex\";\r\n    }\r\n\r\n\r\n}\r\n\r\nmodule.exports = ViewGame;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const Game = require(\"./game_files/game\")\r\nconst ViewGame = require(\"./game_files/view_game\")\r\n\r\n//Questions:\r\n// Ask about event handelers and what should own them\r\n// \r\n\r\n\r\nconst windowWidth= window.innerWidth;\r\nconst windowHeight= window.innerHeight;\r\nconsole.log(windowWidth,windowHeight,\"window X Y\")\r\n//Width,Height\r\n// 1400,1000 with 1200,800. so +\r\n// In essence, this is +- 25%\r\nconst canvasDimensions = [[900,600],[1200,800],[1500,1000]]\r\nconst gameCanvas = document.getElementById(\"canvas\");\r\nconst gameCtx = gameCanvas.getContext(\"2d\");\r\nlet canvasSize = canvasDimensions[0];\r\n\r\nif((windowWidth)>(canvasDimensions[2][0]+200) && (windowHeight)>(canvasDimensions[2][1]+100)){\r\n    canvasSize = canvasDimensions[2];\r\n} else if(windowWidth>(canvasDimensions[1][0]+200) && (windowHeight>(canvasDimensions[1][1]+100))){\r\n    canvasSize = canvasDimensions[1];\r\n}else {\r\n    canvasSize = canvasDimensions[0];\r\n}\r\nconsole.log([windowWidth,canvasDimensions[1][0]+200,windowHeight,canvasDimensions[1][1]+100],\"Deduce Canvas\")\r\n\r\nconsole.log(canvasSize,\"canvasSize\")\r\ngameCanvas.setAttribute(\"width\",canvasSize[0])\r\ngameCanvas.setAttribute(\"height\",canvasSize[1])\r\nconst game = new Game (canvasSize);\r\nconst gameCanvasRect = gameCanvas.getBoundingClientRect();\r\nconst gamepos = [gameCanvasRect.x,gameCanvasRect.y];\r\nconsole.log(gamepos,\"gamepos\")\r\nconst view = new ViewGame(game,gameCtx,gamepos,canvasSize);\r\nconst overlay = document.getElementById(\"overlay\");\r\nconst start = document.getElementById(\"start\");\r\nconst startbutton = document.getElementById(\"start-button\");\r\nconst roundscore = document.getElementById(\"roundscore\");\r\nconst continuebutton = document.getElementById(\"continuebutton\");\r\n\r\nstartbutton.addEventListener('click',()=>{\r\n    overlay.style.display = \"none\";\r\n    start.style.display = \"none\";\r\n})\r\n\r\ncontinuebutton.addEventListener('click',()=>{\r\n    overlay.style.display = \"none\";\r\n    roundscore.style.display = \"none\";\r\n    if(game.round < Game.MAXROUNDS){\r\n        view.game.drawDealer();\r\n        view.setupScreen();\r\n    }else{\r\n        const playerscore = document.getElementById(\"finalplayerscore\")\r\n        const dealerscore = document.getElementById(\"finaldealerscore\")\r\n        const winner = document.getElementById(\"winner\");\r\n        const gameover = document.getElementById(\"gameover\");\r\n        const result = game.winner();\r\n        console.log([playerscore,dealerscore,winner],\"edits\")\r\n        playerscore.innerText = result[0];\r\n        dealerscore.innerText = result[1];\r\n        winner.innerText = result[2];\r\n        overlay.style.display = \"block\";\r\n        gameover.style.display = \"block\";\r\n    }\r\n    \r\n   \r\n})\r\n\r\n\r\nwindow.game = game;\r\nwindow.view = view;\r\n"],"names":["Util","require","console","log","canvasSize","Card","constructor","object","this","value","suit","sprite","Image","src","selected","trickid","pos","points","animate","ctx","spot","drawImage","CARDWIDTH","CARDHEIGHT","lineWidth","strokeStyle","strokeRect","onload","updatePoints","x","y","_defineProperty","size","CARDDIMENSIONS","module","exports","Trick","Player","super","dealerCards","handTracker","result","makeTricks","addCardBoard","card","i","tricks","length","active","addCard","activateNextTrick","dealerPlayCycle","trickArray","trick1","HEIGHT","color","push","trick2","WIDTH","trick3","trick4","updateDealerCards","newDealerCards","forEach","trick","array","cards","updateCardTracker","arguments","undefined","Array","keys","splice","val","updateBestHand","flushCheck","straightCheck","fourKind","threeKind","twoKind","values","chain","cleanUpResult","copyObject","card2","idx","slice","concat","activeTricks","newTrick","flatResult","flat","shift","sumScores","scores","score","num","newTrickSet","nextDealerCard","makeCards","allCards","suits","j","drawCard","scaler","random","Math","pick","floor","chosen","indexOf","Deck","Dealer","Game","dealer","name","player","deck","round","prep_game","calcScaler","START_HAND","drawPlayer","drawDealer","new_card","nextRound","gold","compareBoards","dealer_scores","evaluateBoard","player_scores","min","playerroundscore","dealerroundscore","document","getElementById","innerText","playerscorehtml","dealerscorehtml","font","fillStyle","clearRect","fillText","resetBoard","winner","playerscore","dealerscore","DIM_X","animateGold","evaluatePoker","fillRect","cardback","trait","major","evaluate","sum","sorted","sortCards","every","hash","pair","trips","rank","tiebreaks","filter","majorSum","tiebreakSum","removeCard","index","count","MAXCARDS","XBUFFER","YBUFFER","xshift","updateCards","fontArray","fontSize","trickobj","style","display","backgroundColor","trickX","trickY","currentCard","TRICKDIMENSIONS","sorter","card1","pivot","left","ele","right","leftSorted","rightSorted","createPoints","box","windowWidth","window","innerWidth","windowHeight","innerHeight","canvasDimensions","game","gameCtx","allTricks","setupScreen","buildTricksCards","bindCanvas","cardSelected","resetCardLinks","tricksidx","cardsidx","tracePath","beginPath","moveTo","lineTo","addEventListener","handleCanvasClick","bind","e","xOffset","yOffset","mouseX","parseInt","clientX","mouseY","clientY","isPointInPath","moveCard","newTrickButton","newCardButton","newTrickButtonPoints","newCardButtonPoints","newScoreRoundButton","MAXROUNDS","playRound","owner","ownerid","animateScores","roundscore","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","ViewGame","gameCanvas","getContext","setAttribute","gameCanvasRect","getBoundingClientRect","gamepos","view","overlay","start","startbutton","continuebutton","gameover"],"sourceRoot":""}