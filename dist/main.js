/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/game_files/card.js":
/*!********************************!*\
  !*** ./src/game_files/card.js ***!
  \********************************/
/***/ (function(module) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nclass Card {\n  constructor(object) {\n    //#2-14\n    this.value = object.value;\n    // Suit needs to match the card save: Clubs, Diamond, Hearts, Spades\n    this.suit = object.suit;\n    // Code this in once ready to draw\n    this.sprite = new Image();\n    this.sprite.src = \"images/Cards/Medium/\" + this.suit + this.value + \".png\";\n    // console.log(this.sprite.src,\"Card Src\");\n    this.selected = false;\n    //Might need to know what trick we are inside, for event handling\n    this.trickid = 0;\n    this.pos = [0, 0];\n    this.points = [];\n  }\n  animate(ctx, spot) {\n    ctx.drawImage(this.sprite, spot[0], spot[1], Card.CARDWIDTH, Card.CARDHEIGHT);\n    if (this.selected) {\n      ctx.lineWidth = 3;\n      ;\n      ctx.strokeStyle = \"#FFFF00\";\n      ctx.strokeRect(spot[0], spot[1], Card.CARDWIDTH, Card.CARDHEIGHT);\n    }\n    this.sprite.onload = () => {\n      ctx.drawImage(this.sprite, spot[0], spot[1], Card.CARDWIDTH, Card.CARDHEIGHT);\n      if (this.selected) {\n        ctx.lineWidth = 3;\n        ctx.strokeStyle = \"#FFFF00\";\n        ctx.strokeRect(spot[0], spot[1], Card.CARDWIDTH, Card.CARDHEIGHT);\n      }\n    };\n  }\n  updatePoints(pos) {\n    this.pos = pos || this.pos;\n    this.points = [{\n      x: this.pos[0],\n      y: this.pos[1]\n    }, {\n      x: this.pos[0] + Card.CARDWIDTH,\n      y: this.pos[1]\n    }, {\n      x: this.pos[0] + Card.CARDWIDTH,\n      y: this.pos[1] + Card.CARDHEIGHT\n    }, {\n      x: this.pos[0],\n      y: this.pos[1] + Card.CARDHEIGHT\n    }];\n  }\n}\n_defineProperty(Card, \"CARDWIDTH\", 55);\n_defineProperty(Card, \"CARDHEIGHT\", 80);\nmodule.exports = Card;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZV9maWxlcy9jYXJkLmpzLmpzIiwibmFtZXMiOlsiQ2FyZCIsImNvbnN0cnVjdG9yIiwib2JqZWN0IiwidmFsdWUiLCJzdWl0Iiwic3ByaXRlIiwiSW1hZ2UiLCJzcmMiLCJzZWxlY3RlZCIsInRyaWNraWQiLCJwb3MiLCJwb2ludHMiLCJhbmltYXRlIiwiY3R4Iiwic3BvdCIsImRyYXdJbWFnZSIsIkNBUkRXSURUSCIsIkNBUkRIRUlHSFQiLCJsaW5lV2lkdGgiLCJzdHJva2VTdHlsZSIsInN0cm9rZVJlY3QiLCJvbmxvYWQiLCJ1cGRhdGVQb2ludHMiLCJ4IiwieSIsIl9kZWZpbmVQcm9wZXJ0eSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL2Nhcm5pdmFscG9rZXIvLi9zcmMvZ2FtZV9maWxlcy9jYXJkLmpzPzJmMTIiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQ2FyZCB7XHJcbiAgICBzdGF0aWMgQ0FSRFdJRFRIID0gNTU7XHJcbiAgICBzdGF0aWMgQ0FSREhFSUdIVCA9IDgwO1xyXG4gICAgY29uc3RydWN0b3Iob2JqZWN0KSB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8jMi0xNFxyXG4gICAgICAgIHRoaXMudmFsdWUgPSBvYmplY3QudmFsdWU7XHJcbiAgICAgICAgLy8gU3VpdCBuZWVkcyB0byBtYXRjaCB0aGUgY2FyZCBzYXZlOiBDbHVicywgRGlhbW9uZCwgSGVhcnRzLCBTcGFkZXNcclxuICAgICAgICB0aGlzLnN1aXQgPSBvYmplY3Quc3VpdDtcclxuICAgICAgICAvLyBDb2RlIHRoaXMgaW4gb25jZSByZWFkeSB0byBkcmF3XHJcbiAgICAgICAgdGhpcy5zcHJpdGUgPSBuZXcgSW1hZ2UoKTtcclxuICAgICAgICB0aGlzLnNwcml0ZS5zcmMgPSBcImltYWdlcy9DYXJkcy9NZWRpdW0vXCIrdGhpcy5zdWl0K3RoaXMudmFsdWUrXCIucG5nXCI7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5zcHJpdGUuc3JjLFwiQ2FyZCBTcmNcIik7XHJcbiAgICAgICAgdGhpcy5zZWxlY3RlZCA9IGZhbHNlO1xyXG4gICAgICAgIC8vTWlnaHQgbmVlZCB0byBrbm93IHdoYXQgdHJpY2sgd2UgYXJlIGluc2lkZSwgZm9yIGV2ZW50IGhhbmRsaW5nXHJcbiAgICAgICAgdGhpcy50cmlja2lkID0gMDtcclxuICAgICAgICB0aGlzLnBvcyA9IFswLDBdO1xyXG4gICAgICAgIHRoaXMucG9pbnRzID1bXTtcclxuICAgIH1cclxuICAgIGFuaW1hdGUoY3R4LHNwb3Qpe1xyXG4gICAgICAgIGN0eC5kcmF3SW1hZ2UodGhpcy5zcHJpdGUsc3BvdFswXSxzcG90WzFdLENhcmQuQ0FSRFdJRFRILENhcmQuQ0FSREhFSUdIVClcclxuICAgICAgICBpZih0aGlzLnNlbGVjdGVkKXtcclxuICAgICAgICBjdHgubGluZVdpZHRoID0gMzs7XHJcbiAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gXCIjRkZGRjAwXCI7XHJcbiAgICAgICAgY3R4LnN0cm9rZVJlY3Qoc3BvdFswXSxzcG90WzFdLENhcmQuQ0FSRFdJRFRILENhcmQuQ0FSREhFSUdIVCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuc3ByaXRlLm9ubG9hZCA9ICgpPT4geyAgIFxyXG4gICAgICAgICAgICBjdHguZHJhd0ltYWdlKHRoaXMuc3ByaXRlLHNwb3RbMF0sc3BvdFsxXSxDYXJkLkNBUkRXSURUSCxDYXJkLkNBUkRIRUlHSFQpO1xyXG4gICAgICAgICAgICBpZih0aGlzLnNlbGVjdGVkKXtcclxuICAgICAgICAgICAgICAgIGN0eC5saW5lV2lkdGggPSAzO1xyXG4gICAgICAgICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gXCIjRkZGRjAwXCI7XHJcbiAgICAgICAgICAgICAgICBjdHguc3Ryb2tlUmVjdChzcG90WzBdLHNwb3RbMV0sQ2FyZC5DQVJEV0lEVEgsQ2FyZC5DQVJESEVJR0hUKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgfVxyXG4gICAgdXBkYXRlUG9pbnRzKHBvcyl7XHJcbiAgICAgICAgdGhpcy5wb3MgPSBwb3MgfHwgdGhpcy5wb3M7XHJcbiAgICAgICAgdGhpcy5wb2ludHMgPVt7XHJcbiAgICAgICAgICAgIHg6IHRoaXMucG9zWzBdLFxyXG4gICAgICAgICAgICB5OiB0aGlzLnBvc1sxXVxyXG4gICAgICAgIH0se1xyXG4gICAgICAgICAgICB4OiB0aGlzLnBvc1swXStDYXJkLkNBUkRXSURUSCxcclxuICAgICAgICAgICAgeTogdGhpcy5wb3NbMV1cclxuICAgICAgICB9LHtcclxuICAgICAgICAgICAgeDogdGhpcy5wb3NbMF0rQ2FyZC5DQVJEV0lEVEgsXHJcbiAgICAgICAgICAgIHk6IHRoaXMucG9zWzFdK0NhcmQuQ0FSREhFSUdIVFxyXG4gICAgICAgIH0se1xyXG4gICAgICAgICAgICB4OiB0aGlzLnBvc1swXSxcclxuICAgICAgICAgICAgeTogdGhpcy5wb3NbMV0rQ2FyZC5DQVJESEVJR0hUXHJcbiAgICAgICAgfVxyXG4gICAgXTtcclxuICAgIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBDYXJkOyAiXSwibWFwcGluZ3MiOiI7OztBQUFBLE1BQU1BLElBQUksQ0FBQztFQUdQQyxXQUFXQSxDQUFDQyxNQUFNLEVBQUU7SUFFaEI7SUFDQSxJQUFJLENBQUNDLEtBQUssR0FBR0QsTUFBTSxDQUFDQyxLQUFLO0lBQ3pCO0lBQ0EsSUFBSSxDQUFDQyxJQUFJLEdBQUdGLE1BQU0sQ0FBQ0UsSUFBSTtJQUN2QjtJQUNBLElBQUksQ0FBQ0MsTUFBTSxHQUFHLElBQUlDLEtBQUssRUFBRTtJQUN6QixJQUFJLENBQUNELE1BQU0sQ0FBQ0UsR0FBRyxHQUFHLHNCQUFzQixHQUFDLElBQUksQ0FBQ0gsSUFBSSxHQUFDLElBQUksQ0FBQ0QsS0FBSyxHQUFDLE1BQU07SUFDcEU7SUFDQSxJQUFJLENBQUNLLFFBQVEsR0FBRyxLQUFLO0lBQ3JC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\n//# sourceURL=webpack-internal:///./src/game_files/card.js\n");

/***/ }),

/***/ "./src/game_files/dealer.js":
/*!**********************************!*\
  !*** ./src/game_files/dealer.js ***!
  \**********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Trick = __webpack_require__(/*! ./trick */ \"./src/game_files/trick.js\");\nconst Player = __webpack_require__(/*! ./player */ \"./src/game_files/player.js\");\nclass Dealer extends Player {\n  constructor(object) {\n    super(object);\n    this.dealerSet = [];\n    this.makeTricks();\n    this.makeDealerSet();\n  }\n  addCardBoard(card) {\n    for (let i = 0; i < this.tricks.length; i++) {\n      if (this.tricks[i].active && this.tricks[i].addCard(card)) {\n        return true;\n      } else if (!this.tricks[i].active) {\n        this.activateNextTrick();\n        this.addCardBoard(card);\n        break;\n      }\n    }\n    return false;\n  }\n  makeTricks() {\n    let trickArray = [];\n    let trick1 = new Trick({\n      pos: [this.pos[0], this.pos[1] + Trick.HEIGHT],\n      trickid: 5,\n      active: true\n    });\n    trickArray.push(trick1);\n    let trick2 = new Trick({\n      pos: [this.pos[0] + Trick.WIDTH, this.pos[1] + Trick.HEIGHT],\n      color: \"#00CC33\",\n      trickid: 6,\n      active: true\n    });\n    trickArray.push(trick2);\n    let trick3 = new Trick({\n      pos: this.pos,\n      color: \"#800080\",\n      trickid: 7,\n      active: true\n    });\n    trickArray.push(trick3);\n    let trick4 = new Trick({\n      pos: [this.pos[0] + Trick.WIDTH, this.pos[1]],\n      color: \"#0099FF\",\n      trickid: 8,\n      active: true\n    });\n    trickArray.push(trick4);\n    this.tricks = trickArray;\n  }\n  makeDealerSet() {\n    //This makes the dealer array\n    //This.tricks\n    //Dealer set is an array of tricks.\n  }\n  newTrickSet() {\n    // Makes 4 empty tricks of the appropriate colors and positions\n    // Returns an array of these tricks. \n    let trickArray = [];\n    let tempPos = this.pos;\n    let trick1 = new Trick({\n      pos: this.pos,\n      trickid: 1\n    });\n    trickArray.push(trick1);\n    let trick2 = new Trick({\n      pos: [this.pos[0] + 400, this.pos[1]],\n      color: \"#00FF00\",\n      trickid: 2\n    });\n    trickArray.push(trick2);\n    let trick3 = new Trick({\n      pos: [this.pos[0], this.pos[1] + 150],\n      color: \"#FF0000\",\n      trickid: 3\n    });\n    trickArray.push(trick3);\n    let trick4 = new Trick({\n      pos: [this.pos[0] + 400, this.pos[1] + 150],\n      color: \"#0000FF\",\n      trickid: 4\n    });\n    trickArray.push(trick4);\n    return trickArray;\n  }\n  nextDealerCard() {}\n}\nmodule.exports = Dealer;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUMsSUFBSSxDQUFDQSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUMsR0FBRyxDQUFDO01BQUVNLEtBQUssRUFBRSxTQUFTO01BQUVKLE9BQU8sRUFBRTtJQUFDLENBQUMsQ0FBQztJQUM5RkosVUFBVSxDQUFDSyxJQUFJLENBQUNLLE1BQU0sQ0FBQztJQUN2QixPQUFPVixVQUFVO0VBQ3JCO0VBR0FhLGNBQWNBLENBQUEsRUFBRSxDQUVoQjtBQUVKO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHN0IsTUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2Nhcm5pdmFscG9rZXIvLi9zcmMvZ2FtZV9maWxlcy9kZWFsZXIuanM/NjNkNCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBUcmljayA9IHJlcXVpcmUoXCIuL3RyaWNrXCIpXHJcbmNvbnN0IFBsYXllciA9IHJlcXVpcmUoXCIuL3BsYXllclwiKVxyXG5cclxuY2xhc3MgRGVhbGVyIGV4dGVuZHMgUGxheWVye1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG9iamVjdCl7XHJcbiAgICAgICAgc3VwZXIob2JqZWN0KTtcclxuICAgICAgICB0aGlzLmRlYWxlclNldCA9IFtdO1xyXG4gICAgICAgIHRoaXMubWFrZVRyaWNrcygpO1xyXG4gICAgICAgIHRoaXMubWFrZURlYWxlclNldCgpO1xyXG4gICAgfVxyXG4gICAgYWRkQ2FyZEJvYXJkKGNhcmQpe1xyXG4gICAgICAgIGZvcihsZXQgaSA9IDA7aSA8dGhpcy50cmlja3MubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgICAgIGlmKHRoaXMudHJpY2tzW2ldLmFjdGl2ZSAmJiB0aGlzLnRyaWNrc1tpXS5hZGRDYXJkKGNhcmQpKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICB9ZWxzZSBpZighdGhpcy50cmlja3NbaV0uYWN0aXZlKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuYWN0aXZhdGVOZXh0VHJpY2soKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuYWRkQ2FyZEJvYXJkKGNhcmQpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIG1ha2VUcmlja3MoKXtcclxuICAgICAgICBsZXQgdHJpY2tBcnJheSA9IFtdO1xyXG4gICAgICAgIGxldCB0cmljazEgPSBuZXcgVHJpY2soe3BvczogW3RoaXMucG9zWzBdLHRoaXMucG9zWzFdK1RyaWNrLkhFSUdIVF0sIHRyaWNraWQ6IDUsIGFjdGl2ZTogdHJ1ZX0pO1xyXG4gICAgICAgIHRyaWNrQXJyYXkucHVzaCh0cmljazEpO1xyXG4gICAgICAgIGxldCB0cmljazIgPSBuZXcgVHJpY2soe3BvczogW3RoaXMucG9zWzBdK1RyaWNrLldJRFRILHRoaXMucG9zWzFdK1RyaWNrLkhFSUdIVF0sIGNvbG9yOiBcIiMwMENDMzNcIiwgdHJpY2tpZDogNiwgYWN0aXZlOiB0cnVlfSk7XHJcbiAgICAgICAgdHJpY2tBcnJheS5wdXNoKHRyaWNrMik7XHJcbiAgICAgICAgbGV0IHRyaWNrMyA9IG5ldyBUcmljayh7cG9zOiB0aGlzLnBvcywgY29sb3I6IFwiIzgwMDA4MFwiLCB0cmlja2lkOiA3LCBhY3RpdmU6IHRydWV9KTtcclxuICAgICAgICB0cmlja0FycmF5LnB1c2godHJpY2szKTtcclxuICAgICAgICBsZXQgdHJpY2s0ID0gbmV3IFRyaWNrKHtwb3M6IFt0aGlzLnBvc1swXStUcmljay5XSURUSCx0aGlzLnBvc1sxXV0sIGNvbG9yOiBcIiMwMDk5RkZcIiwgdHJpY2tpZDogOCwgYWN0aXZlOiB0cnVlfSk7XHJcbiAgICAgICAgdHJpY2tBcnJheS5wdXNoKHRyaWNrNCk7XHJcbiAgICAgICAgdGhpcy50cmlja3MgPSB0cmlja0FycmF5O1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgbWFrZURlYWxlclNldCAoKXtcclxuICAgICAgICAvL1RoaXMgbWFrZXMgdGhlIGRlYWxlciBhcnJheVxyXG4gICAgICAgIC8vVGhpcy50cmlja3NcclxuICAgICAgICAvL0RlYWxlciBzZXQgaXMgYW4gYXJyYXkgb2YgdHJpY2tzLlxyXG5cclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbiAgICBuZXdUcmlja1NldCAoKXtcclxuICAgICAgICAvLyBNYWtlcyA0IGVtcHR5IHRyaWNrcyBvZiB0aGUgYXBwcm9wcmlhdGUgY29sb3JzIGFuZCBwb3NpdGlvbnNcclxuICAgICAgICAvLyBSZXR1cm5zIGFuIGFycmF5IG9mIHRoZXNlIHRyaWNrcy4gXHJcbiAgICAgICAgbGV0IHRyaWNrQXJyYXkgPSBbXTtcclxuICAgICAgICBsZXQgdGVtcFBvcyA9IHRoaXMucG9zO1xyXG4gICAgICAgIGxldCB0cmljazEgPSBuZXcgVHJpY2soe3BvczogdGhpcy5wb3MsIHRyaWNraWQ6IDF9KTtcclxuICAgICAgICB0cmlja0FycmF5LnB1c2godHJpY2sxKTtcclxuICAgICAgICBsZXQgdHJpY2syID0gbmV3IFRyaWNrKHtwb3M6IFt0aGlzLnBvc1swXSs0MDAsdGhpcy5wb3NbMV1dLCBjb2xvcjogXCIjMDBGRjAwXCIsIHRyaWNraWQ6IDJ9KTtcclxuICAgICAgICB0cmlja0FycmF5LnB1c2godHJpY2syKTtcclxuICAgICAgICBsZXQgdHJpY2szID0gbmV3IFRyaWNrKHtwb3M6IFt0aGlzLnBvc1swXSx0aGlzLnBvc1sxXSsxNTBdLCBjb2xvcjogXCIjRkYwMDAwXCIsIHRyaWNraWQ6IDN9KTtcclxuICAgICAgICB0cmlja0FycmF5LnB1c2godHJpY2szKTtcclxuICAgICAgICBsZXQgdHJpY2s0ID0gbmV3IFRyaWNrKHtwb3M6IFt0aGlzLnBvc1swXSs0MDAsdGhpcy5wb3NbMV0rMTUwXSwgY29sb3I6IFwiIzAwMDBGRlwiLCB0cmlja2lkOiA0fSk7XHJcbiAgICAgICAgdHJpY2tBcnJheS5wdXNoKHRyaWNrNCk7XHJcbiAgICAgICAgcmV0dXJuIHRyaWNrQXJyYXk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIG5leHREZWFsZXJDYXJkKCl7XHJcblxyXG4gICAgfVxyXG5cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBEZWFsZXI7Il0sIm5hbWVzIjpbIlRyaWNrIiwicmVxdWlyZSIsIlBsYXllciIsIkRlYWxlciIsImNvbnN0cnVjdG9yIiwib2JqZWN0IiwiZGVhbGVyU2V0IiwibWFrZVRyaWNrcyIsIm1ha2VEZWFsZXJTZXQiLCJhZGRDYXJkQm9hcmQiLCJjYXJkIiwiaSIsInRyaWNrcyIsImxlbmd0aCIsImFjdGl2ZSIsImFkZENhcmQiLCJhY3RpdmF0ZU5leHRUcmljayIsInRyaWNrQXJyYXkiLCJ0cmljazEiLCJwb3MiLCJIRUlHSFQiLCJ0cmlja2lkIiwicHVzaCIsInRyaWNrMiIsIldJRFRIIiwiY29sb3IiLCJ0cmljazMiLCJ0cmljazQiLCJuZXdUcmlja1NldCIsInRlbXBQb3MiLCJuZXh0RGVhbGVyQ2FyZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/game_files/dealer.js\n");

/***/ }),

/***/ "./src/game_files/deck.js":
/*!********************************!*\
  !*** ./src/game_files/deck.js ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Card = __webpack_require__(/*! ./card */ \"./src/game_files/card.js\");\nclass Deck {\n  constructor() {\n    this.cards = [];\n    this.makeCards();\n  }\n  makeCards() {\n    let allCards = [];\n    let values = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n    let suits = [\"Clubs\", \"Hearts\", \"Diamond\", \"Spades\"];\n    for (let i = 0; i < values.length; i++) {\n      for (let j = 0; j < suits.length; j++) {\n        let cardObject = {\n          suit: suits[j],\n          value: values[i]\n        };\n        let card = new Card(cardObject);\n        allCards.push(card);\n      }\n    }\n    this.cards = allCards;\n    return true;\n  }\n  drawCard() {\n    const scaler = this.cards.length;\n    const random = Math.random();\n    const pick = Math.floor(scaler * random);\n    const chosen = this.cards[pick];\n    return this.cards.splice(this.cards.indexOf(chosen), 1)[0];\n  }\n}\n\n// let deck = new Deck();\n// console.log(deck.cards.length);\n// console.log(deck.drawCard());\n// console.log(deck.cards.length);\nmodule.exports = Deck;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZV9maWxlcy9kZWNrLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsbUJBQU8sQ0FBQyx3Q0FBUSxDQUFDO0FBRTlCLE1BQU1DLElBQUksQ0FBQztFQUVIQyxXQUFXQSxDQUFBLEVBQUU7SUFDVCxJQUFJLENBQUNDLEtBQUssR0FBRyxFQUFFO0lBQ2YsSUFBSSxDQUFDQyxTQUFTLEVBQUU7RUFDcEI7RUFFSkEsU0FBU0EsQ0FBQSxFQUFHO0lBQ1IsSUFBSUMsUUFBUSxHQUFHLEVBQUU7SUFDakIsSUFBSUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDO0lBQzdDLElBQUlDLEtBQUssR0FBRyxDQUFDLE9BQU8sRUFBQyxRQUFRLEVBQUMsU0FBUyxFQUFDLFFBQVEsQ0FBQztJQUVqRCxLQUFJLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUNBLENBQUMsR0FBR0YsTUFBTSxDQUFDRyxNQUFNLEVBQUVELENBQUMsRUFBRSxFQUFDO01BQ2pDLEtBQUksSUFBSUUsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHSCxLQUFLLENBQUNFLE1BQU0sRUFBRUMsQ0FBQyxFQUFFLEVBQUM7UUFDakMsSUFBSUMsVUFBVSxHQUFHO1VBQ2JDLElBQUksRUFBRUwsS0FBSyxDQUFDRyxDQUFDLENBQUM7VUFDZEcsS0FBSyxFQUFFUCxNQUFNLENBQUNFLENBQUM7UUFDbkIsQ0FBQztRQUNELElBQUlNLElBQUksR0FBRyxJQUFJZixJQUFJLENBQUNZLFVBQVUsQ0FBQztRQUMvQk4sUUFBUSxDQUFDVSxJQUFJLENBQUNELElBQUksQ0FBQztNQUN2QjtJQUNKO0lBQ0EsSUFBSSxDQUFDWCxLQUFLLEdBQUdFLFFBQVE7SUFDckIsT0FBTyxJQUFJO0VBQ2Y7RUFFQVcsUUFBUUEsQ0FBQSxFQUFHO0lBQ1AsTUFBTUMsTUFBTSxHQUFHLElBQUksQ0FBQ2QsS0FBSyxDQUFDTSxNQUFNO0lBQ2hDLE1BQU1TLE1BQU0sR0FBR0MsSUFBSSxDQUFDRCxNQUFNLEVBQUU7SUFDNUIsTUFBTUUsSUFBSSxHQUFHRCxJQUFJLENBQUNFLEtBQUssQ0FBQ0osTUFBTSxHQUFHQyxNQUFNLENBQUM7SUFDeEMsTUFBTUksTUFBTSxHQUFHLElBQUksQ0FBQ25CLEtBQUssQ0FBQ2lCLElBQUksQ0FBQztJQUMvQixPQUFPLElBQUksQ0FBQ2pCLEtBQUssQ0FBQ29CLE1BQU0sQ0FBQyxJQUFJLENBQUNwQixLQUFLLENBQUNxQixPQUFPLENBQUNGLE1BQU0sQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUM3RDtBQUNKOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FHLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHekIsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL2Nhcm5pdmFscG9rZXIvLi9zcmMvZ2FtZV9maWxlcy9kZWNrLmpzPzc5NmEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQ2FyZCA9IHJlcXVpcmUoXCIuL2NhcmRcIilcclxuXHJcbmNsYXNzIERlY2sge1xyXG5cclxuICAgICAgICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgICAgICB0aGlzLmNhcmRzID0gW107XHJcbiAgICAgICAgICAgIHRoaXMubWFrZUNhcmRzKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIG1ha2VDYXJkcygpIHtcclxuICAgICAgICBsZXQgYWxsQ2FyZHMgPSBbXTtcclxuICAgICAgICBsZXQgdmFsdWVzID0gWzIsMyw0LDUsNiw3LDgsOSwxMCwxMSwxMiwxMywxNF07XHJcbiAgICAgICAgbGV0IHN1aXRzID0gW1wiQ2x1YnNcIixcIkhlYXJ0c1wiLFwiRGlhbW9uZFwiLFwiU3BhZGVzXCJdO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGZvcihsZXQgaSA9IDA7aSA8IHZhbHVlcy5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgIGZvcihsZXQgaiA9IDA7IGogPCBzdWl0cy5sZW5ndGg7IGorKyl7XHJcbiAgICAgICAgICAgICAgICBsZXQgY2FyZE9iamVjdCA9IHtcclxuICAgICAgICAgICAgICAgICAgICBzdWl0OiBzdWl0c1tqXSxcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWVzW2ldLFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgbGV0IGNhcmQgPSBuZXcgQ2FyZChjYXJkT2JqZWN0KTtcclxuICAgICAgICAgICAgICAgIGFsbENhcmRzLnB1c2goY2FyZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5jYXJkcyA9IGFsbENhcmRzO1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGRyYXdDYXJkKCkge1xyXG4gICAgICAgIGNvbnN0IHNjYWxlciA9IHRoaXMuY2FyZHMubGVuZ3RoO1xyXG4gICAgICAgIGNvbnN0IHJhbmRvbSA9IE1hdGgucmFuZG9tKCk7XHJcbiAgICAgICAgY29uc3QgcGljayA9IE1hdGguZmxvb3Ioc2NhbGVyICogcmFuZG9tKTtcclxuICAgICAgICBjb25zdCBjaG9zZW4gPSB0aGlzLmNhcmRzW3BpY2tdO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNhcmRzLnNwbGljZSh0aGlzLmNhcmRzLmluZGV4T2YoY2hvc2VuKSwxKVswXTtcclxuICAgIH1cclxufVxyXG5cclxuLy8gbGV0IGRlY2sgPSBuZXcgRGVjaygpO1xyXG4vLyBjb25zb2xlLmxvZyhkZWNrLmNhcmRzLmxlbmd0aCk7XHJcbi8vIGNvbnNvbGUubG9nKGRlY2suZHJhd0NhcmQoKSk7XHJcbi8vIGNvbnNvbGUubG9nKGRlY2suY2FyZHMubGVuZ3RoKTtcclxubW9kdWxlLmV4cG9ydHMgPSBEZWNrOyJdLCJuYW1lcyI6WyJDYXJkIiwicmVxdWlyZSIsIkRlY2siLCJjb25zdHJ1Y3RvciIsImNhcmRzIiwibWFrZUNhcmRzIiwiYWxsQ2FyZHMiLCJ2YWx1ZXMiLCJzdWl0cyIsImkiLCJsZW5ndGgiLCJqIiwiY2FyZE9iamVjdCIsInN1aXQiLCJ2YWx1ZSIsImNhcmQiLCJwdXNoIiwiZHJhd0NhcmQiLCJzY2FsZXIiLCJyYW5kb20iLCJNYXRoIiwicGljayIsImZsb29yIiwiY2hvc2VuIiwic3BsaWNlIiwiaW5kZXhPZiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/game_files/deck.js\n");

/***/ }),

/***/ "./src/game_files/game.js":
/*!********************************!*\
  !*** ./src/game_files/game.js ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst Player = __webpack_require__(/*! ./player */ \"./src/game_files/player.js\");\nconst Deck = __webpack_require__(/*! ./deck */ \"./src/game_files/deck.js\");\nconst Util = __webpack_require__(/*! ./util */ \"./src/game_files/util.js\");\nconst Dealer = __webpack_require__(/*! ./dealer */ \"./src/game_files/dealer.js\");\nclass Game {\n  constructor() {\n    this.dealer = new Dealer({\n      pos: [285, 200],\n      name: \"Dealer\",\n      color: \"#FFA500\"\n    });\n    this.player = new Player({\n      pos: [285, 560],\n      name: \"Player\",\n      color: \"#FFA500\"\n    });\n    this.deck = new Deck();\n    this.round = 0;\n    this.prep_game();\n  }\n  prep_game() {\n    for (let i = 0; i < Game.START_HAND; i++) {\n      this.drawPlayer();\n    }\n    for (let i = 0; i < Game.START_HAND; i++) {\n      this.drawDealer();\n    }\n    // console.log(this.player.tricks[0],\"starting hand\");\n    // console.log(this.dealer.tricks[0],\"starting hand\");\n    // this.dealer.tricks[2].active = false;\n    // this.dealer.tricks[3].active = false;\n    // this.player.tricks[2].active = false;\n    // this.player.tricks[3].active = false;\n    // const trick3 = document.getElementById(\"trick3\");\n    // const trick4 = document.getElementById(\"trick4\");\n    // const trick7 = document.getElementById(\"trick7\");\n    // const trick8 = document.getElementById(\"trick8\");\n    // trick3.style.display = \"none\";\n    // trick4.style.display = \"none\";\n    // trick7.style.display = \"none\";\n    // trick8.style.display = \"none\";\n  }\n\n  drawPlayer() {\n    let new_card = this.deck.drawCard();\n    this.player.addCardBoard(new_card);\n  }\n  drawDealer() {\n    let new_card = this.deck.drawCard();\n    this.dealer.addCardBoard(new_card);\n  }\n  nextRound() {\n    this.round += 1;\n    this.player.gold += 3;\n    this.compareBoards();\n    this.drawDealer();\n    // console.log(this.player.score,\"player score\");\n    // console.log(this.dealer.score,\"dealer score\");\n  }\n\n  compareBoards() {\n    // Will need refactor to compare for each trick\n    // Loop based on whichever board has the most tricks\n    // Include auto win if mismatch on trick count\n\n    let dealer_scores = this.dealer.evaluateBoard();\n    console.log(dealer_scores, \"Dealer Scores\");\n    let player_scores = this.player.evaluateBoard();\n    console.log(player_scores, \"Player Scores\");\n    let min = dealer_scores.length < player_scores.length ? dealer_scores.length : player_scores.length;\n    // console.log(min,\"min\");\n    for (let i = 0; i < min; i++) {\n      if (dealer_scores[i] > player_scores[i]) {\n        this.dealer.score += 1;\n      } else if (dealer_scores[i] < player_scores[i]) {\n        this.player.score += 1;\n      }\n    }\n  }\n  resetBoard() {}\n}\n// const g = new Game();\n// g.play();\n_defineProperty(Game, \"START_HAND\", 7);\n_defineProperty(Game, \"MAXROUNDS\", 10);\nmodule.exports = Game;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZV9maWxlcy9nYW1lLmpzLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBLE1BQU1BLE1BQU0sR0FBR0MsbUJBQU8sQ0FBQyw0Q0FBVSxDQUFDO0FBQ2xDLE1BQU1DLElBQUksR0FBR0QsbUJBQU8sQ0FBQyx3Q0FBUSxDQUFDO0FBQzlCLE1BQU1FLElBQUksR0FBR0YsbUJBQU8sQ0FBQyx3Q0FBUSxDQUFDO0FBQzlCLE1BQU1HLE1BQU0sR0FBR0gsbUJBQU8sQ0FBQyw0Q0FBVSxDQUFDO0FBRWxDLE1BQU1JLElBQUksQ0FBQztFQUdQQyxXQUFXQSxDQUFBLEVBQUU7SUFDVCxJQUFJLENBQUNDLE1BQU0sR0FBRyxJQUFJSCxNQUFNLENBQUM7TUFBQ0ksR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFDLEdBQUcsQ0FBQztNQUFFQyxJQUFJLEVBQUUsUUFBUTtNQUFFQyxLQUFLLEVBQUM7SUFBUyxDQUFDLENBQUM7SUFDM0UsSUFBSSxDQUFDQyxNQUFNLEdBQUcsSUFBSVgsTUFBTSxDQUFDO01BQUNRLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBQyxHQUFHLENBQUM7TUFBRUMsSUFBSSxFQUFFLFFBQVE7TUFBRUMsS0FBSyxFQUFDO0lBQVMsQ0FBQyxDQUFDO0lBQzNFLElBQUksQ0FBQ0UsSUFBSSxHQUFHLElBQUlWLElBQUksRUFBRTtJQUN0QixJQUFJLENBQUNXLEtBQUssR0FBRyxDQUFDO0lBQ2QsSUFBSSxDQUFDQyxTQUFTLEVBQUU7RUFDcEI7RUFDQUEsU0FBU0EsQ0FBQSxFQUFFO0lBQ1AsS0FBSSxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdWLElBQUksQ0FBQ1csVUFBVSxFQUFFRCxDQUFDLEVBQUUsRUFBQztNQUNwQyxJQUFJLENBQUNFLFVBQVUsRUFBRTtJQUNyQjtJQUNBLEtBQUksSUFBSUYsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHVixJQUFJLENBQUNXLFVBQVUsRUFBRUQsQ0FBQyxFQUFFLEVBQUM7TUFDcEMsSUFBSSxDQUFDRyxVQUFVLEVBQUU7SUFDckI7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0VBQ0o7O0VBRUFELFVBQVVBLENBQUEsRUFBRTtJQUNSLElBQUlFLFFBQVEsR0FBRyxJQUFJLENBQUNQLElBQUksQ0FBQ1EsUUFBUSxFQUFFO0lBQ25DLElBQUksQ0FBQ1QsTUFBTSxDQUFDVSxZQUFZLENBQUNGLFFBQVEsQ0FBQztFQUN0QztFQUNBRCxVQUFVQSxDQUFBLEVBQUU7SUFDUixJQUFJQyxRQUFRLEdBQUcsSUFBSSxDQUFDUCxJQUFJLENBQUNRLFFBQVEsRUFBRTtJQUNuQyxJQUFJLENBQUNiLE1BQU0sQ0FBQ2MsWUFBWSxDQUFDRixRQUFRLENBQUM7RUFDdEM7RUFFQUcsU0FBU0EsQ0FBQSxFQUFFO0lBQ1AsSUFBSSxDQUFDVCxLQUFLLElBQUksQ0FBQztJQUNmLElBQUksQ0FBQ0YsTUFBTSxDQUFDWSxJQUFJLElBQUksQ0FBQztJQUNyQixJQUFJLENBQUNDLGFBQWEsRUFBRTtJQUNwQixJQUFJLENBQUNOLFVBQVUsRUFBRTtJQUNqQjtJQUNBO0VBQ0o7O0VBRUFNLGFBQWFBLENBQUEsRUFBRTtJQUNYO0lBQ0E7SUFDQTs7SUFFQSxJQUFJQyxhQUFhLEdBQUcsSUFBSSxDQUFDbEIsTUFBTSxDQUFDbUIsYUFBYSxFQUFFO0lBQy9DQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0gsYUFBYSxFQUFDLGVBQWUsQ0FBQztJQUMxQyxJQUFJSSxhQUFhLEdBQUcsSUFBSSxDQUFDbEIsTUFBTSxDQUFDZSxhQUFhLEVBQUU7SUFDL0NDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxhQUFhLEVBQUMsZUFBZSxDQUFDO0lBQzFDLElBQUlDLEdBQUcsR0FBR0wsYUFBYSxDQUFDTSxNQUFNLEdBQUdGLGFBQWEsQ0FBQ0UsTUFBTSxHQUFHTixhQUFhLENBQUNNLE1BQU0sR0FBR0YsYUFBYSxDQUFDRSxNQUFNO0lBQ25HO0lBQ0EsS0FBSSxJQUFJaEIsQ0FBQyxHQUFHLENBQUMsRUFBQ0EsQ0FBQyxHQUFDZSxHQUFHLEVBQUNmLENBQUMsRUFBRSxFQUFDO01BQ3BCLElBQUdVLGFBQWEsQ0FBQ1YsQ0FBQyxDQUFDLEdBQUNjLGFBQWEsQ0FBQ2QsQ0FBQyxDQUFDLEVBQUM7UUFDakMsSUFBSSxDQUFDUixNQUFNLENBQUN5QixLQUFLLElBQUksQ0FBQztNQUMxQixDQUFDLE1BQUssSUFBR1AsYUFBYSxDQUFDVixDQUFDLENBQUMsR0FBQ2MsYUFBYSxDQUFDZCxDQUFDLENBQUMsRUFBQztRQUN2QyxJQUFJLENBQUNKLE1BQU0sQ0FBQ3FCLEtBQUssSUFBSSxDQUFDO01BQzFCO0lBQ0o7RUFFSjtFQUVBQyxVQUFVQSxDQUFBLEVBQUUsQ0FFWjtBQUVKO0FBQ0E7QUFDQTtBQUFBQyxlQUFBLENBOUVNN0IsSUFBSSxnQkFDYyxDQUFDO0FBQUE2QixlQUFBLENBRG5CN0IsSUFBSSxlQUVhLEVBQUU7QUE4RXpCOEIsTUFBTSxDQUFDQyxPQUFPLEdBQUcvQixJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2Fybml2YWxwb2tlci8uL3NyYy9nYW1lX2ZpbGVzL2dhbWUuanM/NGJjYSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQbGF5ZXIgPSByZXF1aXJlKFwiLi9wbGF5ZXJcIilcclxuY29uc3QgRGVjayA9IHJlcXVpcmUoXCIuL2RlY2tcIilcclxuY29uc3QgVXRpbCA9IHJlcXVpcmUoXCIuL3V0aWxcIilcclxuY29uc3QgRGVhbGVyID0gcmVxdWlyZShcIi4vZGVhbGVyXCIpXHJcblxyXG5jbGFzcyBHYW1lIHtcclxuICAgIHN0YXRpYyBTVEFSVF9IQU5EID0gNztcclxuICAgIHN0YXRpYyBNQVhST1VORFMgPSAxMDtcclxuICAgIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgICAgdGhpcy5kZWFsZXIgPSBuZXcgRGVhbGVyKHtwb3M6IFsyODUsMjAwXSwgbmFtZTogXCJEZWFsZXJcIiwgY29sb3I6XCIjRkZBNTAwXCJ9KVxyXG4gICAgICAgIHRoaXMucGxheWVyID0gbmV3IFBsYXllcih7cG9zOiBbMjg1LDU2MF0sIG5hbWU6IFwiUGxheWVyXCIsIGNvbG9yOlwiI0ZGQTUwMFwifSlcclxuICAgICAgICB0aGlzLmRlY2sgPSBuZXcgRGVjaygpO1xyXG4gICAgICAgIHRoaXMucm91bmQgPSAwO1xyXG4gICAgICAgIHRoaXMucHJlcF9nYW1lKCk7XHJcbiAgICB9XHJcbiAgICBwcmVwX2dhbWUoKXtcclxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgR2FtZS5TVEFSVF9IQU5EOyBpKyspe1xyXG4gICAgICAgICAgICB0aGlzLmRyYXdQbGF5ZXIoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IEdhbWUuU1RBUlRfSEFORDsgaSsrKXtcclxuICAgICAgICAgICAgdGhpcy5kcmF3RGVhbGVyKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMucGxheWVyLnRyaWNrc1swXSxcInN0YXJ0aW5nIGhhbmRcIik7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5kZWFsZXIudHJpY2tzWzBdLFwic3RhcnRpbmcgaGFuZFwiKTtcclxuICAgICAgICAvLyB0aGlzLmRlYWxlci50cmlja3NbMl0uYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgLy8gdGhpcy5kZWFsZXIudHJpY2tzWzNdLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIC8vIHRoaXMucGxheWVyLnRyaWNrc1syXS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICAvLyB0aGlzLnBsYXllci50cmlja3NbM10uYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgLy8gY29uc3QgdHJpY2szID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0cmljazNcIik7XHJcbiAgICAgICAgLy8gY29uc3QgdHJpY2s0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0cmljazRcIik7XHJcbiAgICAgICAgLy8gY29uc3QgdHJpY2s3ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0cmljazdcIik7XHJcbiAgICAgICAgLy8gY29uc3QgdHJpY2s4ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0cmljazhcIik7XHJcbiAgICAgICAgLy8gdHJpY2szLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgICAvLyB0cmljazQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICAgIC8vIHRyaWNrNy5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgLy8gdHJpY2s4LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgIH1cclxuXHJcbiAgICBkcmF3UGxheWVyKCl7XHJcbiAgICAgICAgbGV0IG5ld19jYXJkID0gdGhpcy5kZWNrLmRyYXdDYXJkKCk7XHJcbiAgICAgICAgdGhpcy5wbGF5ZXIuYWRkQ2FyZEJvYXJkKG5ld19jYXJkKTsgICAgIFxyXG4gICAgfVxyXG4gICAgZHJhd0RlYWxlcigpe1xyXG4gICAgICAgIGxldCBuZXdfY2FyZCA9IHRoaXMuZGVjay5kcmF3Q2FyZCgpO1xyXG4gICAgICAgIHRoaXMuZGVhbGVyLmFkZENhcmRCb2FyZChuZXdfY2FyZCk7XHJcbiAgICB9XHJcblxyXG4gICAgbmV4dFJvdW5kKCl7XHJcbiAgICAgICAgdGhpcy5yb3VuZCArPSAxO1xyXG4gICAgICAgIHRoaXMucGxheWVyLmdvbGQgKz0gMztcclxuICAgICAgICB0aGlzLmNvbXBhcmVCb2FyZHMoKTtcclxuICAgICAgICB0aGlzLmRyYXdEZWFsZXIoKTtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnBsYXllci5zY29yZSxcInBsYXllciBzY29yZVwiKTtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmRlYWxlci5zY29yZSxcImRlYWxlciBzY29yZVwiKTtcclxuICAgIH1cclxuXHJcbiAgICBjb21wYXJlQm9hcmRzKCl7XHJcbiAgICAgICAgLy8gV2lsbCBuZWVkIHJlZmFjdG9yIHRvIGNvbXBhcmUgZm9yIGVhY2ggdHJpY2tcclxuICAgICAgICAvLyBMb29wIGJhc2VkIG9uIHdoaWNoZXZlciBib2FyZCBoYXMgdGhlIG1vc3QgdHJpY2tzXHJcbiAgICAgICAgLy8gSW5jbHVkZSBhdXRvIHdpbiBpZiBtaXNtYXRjaCBvbiB0cmljayBjb3VudFxyXG5cclxuICAgICAgICBsZXQgZGVhbGVyX3Njb3JlcyA9IHRoaXMuZGVhbGVyLmV2YWx1YXRlQm9hcmQoKTsgIFxyXG4gICAgICAgIGNvbnNvbGUubG9nKGRlYWxlcl9zY29yZXMsXCJEZWFsZXIgU2NvcmVzXCIpXHJcbiAgICAgICAgbGV0IHBsYXllcl9zY29yZXMgPSB0aGlzLnBsYXllci5ldmFsdWF0ZUJvYXJkKCk7XHJcbiAgICAgICAgY29uc29sZS5sb2cocGxheWVyX3Njb3JlcyxcIlBsYXllciBTY29yZXNcIilcclxuICAgICAgICBsZXQgbWluID0gZGVhbGVyX3Njb3Jlcy5sZW5ndGggPCBwbGF5ZXJfc2NvcmVzLmxlbmd0aCA/IGRlYWxlcl9zY29yZXMubGVuZ3RoIDogcGxheWVyX3Njb3Jlcy5sZW5ndGg7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2cobWluLFwibWluXCIpO1xyXG4gICAgICAgIGZvcihsZXQgaSA9IDA7aTxtaW47aSsrKXtcclxuICAgICAgICAgICAgaWYoZGVhbGVyX3Njb3Jlc1tpXT5wbGF5ZXJfc2NvcmVzW2ldKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuZGVhbGVyLnNjb3JlICs9IDFcclxuICAgICAgICAgICAgfWVsc2UgaWYoZGVhbGVyX3Njb3Jlc1tpXTxwbGF5ZXJfc2NvcmVzW2ldKXtcclxuICAgICAgICAgICAgICAgIHRoaXMucGxheWVyLnNjb3JlICs9IDFcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbiAgICByZXNldEJvYXJkKCl7XHJcblxyXG4gICAgfVxyXG5cclxufVxyXG4vLyBjb25zdCBnID0gbmV3IEdhbWUoKTtcclxuLy8gZy5wbGF5KCk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEdhbWU7ICJdLCJuYW1lcyI6WyJQbGF5ZXIiLCJyZXF1aXJlIiwiRGVjayIsIlV0aWwiLCJEZWFsZXIiLCJHYW1lIiwiY29uc3RydWN0b3IiLCJkZWFsZXIiLCJwb3MiLCJuYW1lIiwiY29sb3IiLCJwbGF5ZXIiLCJkZWNrIiwicm91bmQiLCJwcmVwX2dhbWUiLCJpIiwiU1RBUlRfSEFORCIsImRyYXdQbGF5ZXIiLCJkcmF3RGVhbGVyIiwibmV3X2NhcmQiLCJkcmF3Q2FyZCIsImFkZENhcmRCb2FyZCIsIm5leHRSb3VuZCIsImdvbGQiLCJjb21wYXJlQm9hcmRzIiwiZGVhbGVyX3Njb3JlcyIsImV2YWx1YXRlQm9hcmQiLCJjb25zb2xlIiwibG9nIiwicGxheWVyX3Njb3JlcyIsIm1pbiIsImxlbmd0aCIsInNjb3JlIiwicmVzZXRCb2FyZCIsIl9kZWZpbmVQcm9wZXJ0eSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/game_files/game.js\n");

/***/ }),

/***/ "./src/game_files/player.js":
/*!**********************************!*\
  !*** ./src/game_files/player.js ***!
  \**********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst Trick = __webpack_require__(/*! ./trick */ \"./src/game_files/trick.js\");\nclass Player {\n  constructor(object) {\n    this.pos = object.pos;\n    this.name = object.name;\n    this.score = 0;\n    this.gold = 0;\n    this.color = object.color;\n    //Probably want an array of trick pos.\n    //Probably want to prefill each board with 4 tricks, 3 of which are empty.\n    this.tricks = [];\n    this.makeTricks();\n  }\n  addCardBoard(card) {\n    for (let i = 0; i < this.tricks.length; i++) {\n      if (this.tricks[i].addCard(card)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  activateNextTrick() {\n    for (let i = 0; i < this.tricks.length; i++) {\n      let trick = this.tricks[i];\n      if (trick.active === false) {\n        trick.active = true;\n        break;\n      }\n    }\n  }\n  makeTricks() {\n    let trickArray = [];\n    let tempPos = this.pos;\n    let trick1 = new Trick({\n      pos: this.pos,\n      trickid: 1,\n      active: true\n    });\n    trickArray.push(trick1);\n    let trick2 = new Trick({\n      pos: [this.pos[0] + Trick.WIDTH, this.pos[1]],\n      color: \"#00CC33\",\n      trickid: 2,\n      active: true\n    });\n    trickArray.push(trick2);\n    let trick3 = new Trick({\n      pos: [this.pos[0], this.pos[1] + Trick.HEIGHT],\n      color: \"#800080\",\n      trickid: 3,\n      active: true\n    });\n    trickArray.push(trick3);\n    let trick4 = new Trick({\n      pos: [this.pos[0] + Trick.WIDTH, this.pos[1] + Trick.HEIGHT],\n      color: \"#0099FF\",\n      trickid: 4,\n      active: true\n    });\n    trickArray.push(trick4);\n    this.tricks = trickArray;\n  }\n  animate(ctx) {\n    // ctx.clearRect(0,0,900,200)\n    ctx.fillStyle = this.color;\n    this.tricks.forEach(trick => {\n      trick.animate(ctx);\n    });\n    this.animateGold(ctx);\n  }\n  evaluateBoard() {\n    let scores = [];\n    for (let i = 0; i < this.tricks.length; i++) {\n      let trick = this.tricks[i];\n      let sum = trick.evaluatePoker();\n      for (let j = 0; j < trick.cards.length; j++) {\n        sum += trick.cards[j].value;\n      }\n      scores.push(sum);\n    }\n    return scores.sort();\n  }\n  animateGold(ctx) {\n    // Might move this to the game class\n    if (this.name === \"Player\") {\n      //Dealer Score \n      ctx.fillStyle = \"#003399\";\n      ctx.fillRect(980, 370, 130, 260);\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = \"#FFFFFF\";\n      ctx.strokeRect(980, 370, 130, 260);\n      ctx.font = \"30px Arial\";\n      ctx.fillStyle = \"#FFFFFF\";\n      ctx.fillText(`Gold: ${this.gold}`, 995, 400);\n      // Button for new card\n      const cardback = new Image();\n      cardback.src = \"images/Cards/Medium/BackRed1.png\";\n      ctx.drawImage(cardback, 1020, 405, 55, 80);\n      ctx.font = \"20px Arial\";\n      ctx.fillStyle = \"#FFFFFF\";\n      ctx.fillText(`New Card`, 995, 507);\n      ctx.fillText(`2`, 1090, 507);\n      /// Five in a row for the new hand\n      ctx.drawImage(cardback, 995, 515, 55, 80);\n      ctx.drawImage(cardback, 1001, 515, 55, 80);\n      ctx.drawImage(cardback, 1007, 515, 55, 80);\n      ctx.drawImage(cardback, 1013, 515, 55, 80);\n      ctx.drawImage(cardback, 1019, 515, 55, 80);\n      ctx.font = \"20px Arial\";\n      ctx.fillStyle = \"#FFFFFF\";\n      ctx.fillText(`New Trick`, 995, 620);\n      ctx.fillText(`6`, 1092, 620);\n      //This is a box 1020 to 1100 or 80 by 80\n      //The points are [1020,100],[1100,100],[1020,180],[1100,180]\n      cardback.onload = () => {\n        ctx.drawImage(cardback, 1020, 405, 55, 80);\n        ctx.drawImage(cardback, 995, 515, 55, 80);\n        ctx.drawImage(cardback, 1001, 515, 55, 80);\n        ctx.drawImage(cardback, 1007, 515, 55, 80);\n        ctx.drawImage(cardback, 1013, 515, 55, 80);\n        ctx.drawImage(cardback, 1019, 515, 55, 80);\n      };\n    }\n  }\n}\n_defineProperty(Player, \"DIM_X\", Trick.WIDTH * 2);\n_defineProperty(Player, \"DIM_Y\", Trick.HEIGHT * 2);\nmodule.exports = Player;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game_files/player.js\n");

/***/ }),

/***/ "./src/game_files/trick.js":
/*!*********************************!*\
  !*** ./src/game_files/trick.js ***!
  \*********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst Player = __webpack_require__(/*! ./player */ \"./src/game_files/player.js\");\nconst Card = __webpack_require__(/*! ./card */ \"./src/game_files/card.js\");\nconst Util = __webpack_require__(/*! ./util */ \"./src/game_files/util.js\");\nclass Trick {\n  constructor(object) {\n    this.pos = object.pos;\n    this.cards = [];\n    this.value = 0;\n    this.values = [];\n    this.trait = \"High Card\";\n    this.major = 0;\n    this.color = object.color;\n    this.trickid = object.trickid;\n    this.active = object.active;\n    this.points = [];\n    this.updatePoints();\n  }\n  updatePoints(pos) {\n    this.pos = pos || this.pos;\n    this.points = [{\n      x: this.pos[0],\n      y: this.pos[1]\n    }, {\n      x: this.pos[0] + Trick.WIDTH,\n      y: this.pos[1]\n    }, {\n      x: this.pos[0] + Trick.WIDTH,\n      y: this.pos[1] + Trick.HEIGHT\n    }, {\n      x: this.pos[0],\n      y: this.pos[1] + Trick.HEIGHT\n    }];\n  }\n  evaluate() {\n    let sum = 0;\n    this.cards.forEach(card => {\n      sum += card.value;\n    });\n    return sum;\n  }\n  evaluatePoker() {\n    let sorted = Util.sortCards(this.cards);\n    this.cards = sorted;\n    this.value = 0;\n    this.major = 0;\n    let values = [];\n    this.trait = \"High Card\";\n    let traitList = [\"High Card\", \"One Pair\", \"Two Pair\", \"Three of a Kind\", \"Straight\", \"Flush\", \"Full House\", \"Four of a Kind\", \"Straight-Flush\"];\n    let suits = [\"Clubs\", \"Hearts\", \"Diamond\", \"Spades\"];\n    let base = 14;\n    for (let i = 0; i < this.cards.length; i++) {\n      values.push(this.cards[i].value);\n    }\n    this.values = values;\n    if (this.cards.length === 5) {\n      // Check flush\n      let flushCheck = false;\n      let straightCheck = true;\n      for (let i = 0; i < suits.length; i++) {\n        let suit = suits[i];\n        if (this.cards.every(card => card.suit === suit)) {\n          flushCheck = true;\n        }\n      }\n      // Check straight\n      for (let i = 0; i < values.length - 1; i++) {\n        if (values[i] !== values[i + 1] + 1) {\n          // console.log(values,\"straigh check\");\n          // console.log([values[i],values[i+1]],\"straight check\");\n          straightCheck = false;\n        }\n      }\n      if (flushCheck && straightCheck) {\n        this.trait = \"Straight-Flush\";\n      } else if (flushCheck) {\n        this.trait = \"Flush\";\n      } else if (straightCheck) {\n        this.trait = \"Straight\";\n      }\n    }\n    let hash = {};\n    for (let i = 0; i < values.length; i++) {\n      if (hash[values[i]] === undefined) {\n        hash[values[i]] = 1;\n      } else {\n        hash[values[i]] += 1;\n      }\n    }\n    let pair = false;\n    let trips = false;\n    for (let i = 0; i < values.length; i++) {\n      if (hash[values[i]] === 4) {\n        this.trait = \"Four of a Kind\";\n        this.major = values[i];\n      }\n      if (hash[values[i]] === 2 && pair === false) {\n        pair = true;\n        this.trait = \"One Pair\";\n        this.major = values[i];\n      } else if (hash[values[i]] === 2 && pair === true && values[i] !== values[i - 1]) {\n        this.trait = \"Two Pair\";\n        this.major = values[i] > this.major ? values[i] : this.major;\n      } else if (hash[values[i]] === 3) {\n        trips = true;\n        this.trait = \"Three of a Kind\";\n        this.major = values[i];\n      }\n    }\n    if (trips && pair) {\n      this.trait = \"Full House\";\n    }\n    this.major = this.major || values[0];\n    let rank = traitList.indexOf(this.trait) + 1;\n    let tiebreaks = values.filter(num => num !== this.major);\n    console.log(this.major, \"major\");\n    let majorSum = this.major * base ** rank * 2;\n    let tiebreakSum = 0;\n    for (let i = 1; i < tiebreaks.length + 1; i++) {\n      tiebreakSum += tiebreaks[i - 1] * base ** rank / base ** i;\n    }\n    console.log(majorSum, \"major sum\");\n    console.log(tiebreakSum, \"tibreak sum\");\n    this.value = majorSum + tiebreakSum;\n    return this.value;\n  }\n  removeCard(card) {\n    let index = this.cards.indexOf(card);\n    return this.cards.splice(index, 1)[0];\n  }\n  addCard(card) {\n    // Need to refactor this to check if the trick has 5 cards\n    let count = this.cards.length;\n    if (count < Trick.MAXCARDS) {\n      let pos = this.pos;\n      pos = [pos[0] + Trick.XBUFFER, pos[1] + Trick.YBUFFER];\n      let xshift = count * Card.CARDWIDTH + count * 3;\n      pos = [pos[0] + xshift, pos[1]];\n      card.pos = pos;\n      card.trickid = this.trickid;\n      card.updatePoints();\n      this.cards.push(card);\n      return true;\n    } else {\n      return false;\n    }\n  }\n  updateCards() {\n    let count = this.cards.length;\n    for (let i = 0; i < count; i++) {\n      let card = this.cards[i];\n      let pos = this.pos;\n      pos = [pos[0] + Trick.XBUFFER, pos[1] + Trick.YBUFFER];\n      let xshift = i * Card.CARDWIDTH + i * 3;\n      pos = [pos[0] + xshift, pos[1]];\n      card.pos = pos;\n      card.updatePoints();\n    }\n  }\n  animate(ctx) {\n    if (this.active) {\n      const trickobj = document.getElementById(`trick${this.trickid}`);\n      trickobj.style.display = \"flex\";\n      trickobj.style.backgroundColor = this.color;\n      let sorted = Util.sortCards(this.cards);\n      this.cards = sorted;\n      this.updateCards();\n      this.evaluatePoker();\n      ctx.fillStyle = this.active ? this.color : \"#000000\";\n      let trickX = this.pos[0];\n      let trickY = this.pos[1];\n      ctx.fillRect(trickX, trickY, Trick.WIDTH, Trick.HEIGHT);\n      ctx.fillStyle = \"#FFFFFF\";\n      ctx.font = \"20px Arial\";\n      //${this.values} ${this.value} \n      ctx.fillText(`${this.trait}`, trickX + 115, trickY + 115);\n      for (let i = 0; i < this.cards.length; i++) {\n        let currentCard = this.cards[i];\n        currentCard.animate(ctx, currentCard.pos);\n        let cardobj = document.getElementById(`${this.trickid}-${i}`);\n        cardobj.src = currentCard.sprite.src;\n      }\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = \"#FFFFFF\";\n      ctx.strokeRect(this.pos[0], this.pos[1], Trick.WIDTH, Trick.HEIGHT);\n    }\n  }\n}\n\n// let t = new Trick({pos: [0,0]});\n// t.addCard(\"A\");\n// console.log(t,\"t\");\n_defineProperty(Trick, \"WIDTH\", 310);\n_defineProperty(Trick, \"HEIGHT\", 120);\n_defineProperty(Trick, \"YBUFFER\", 10);\n_defineProperty(Trick, \"XBUFFER\", 10);\n_defineProperty(Trick, \"MAXCARDS\", 5);\nmodule.exports = Trick;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game_files/trick.js\n");

/***/ }),

/***/ "./src/game_files/util.js":
/*!********************************!*\
  !*** ./src/game_files/util.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createPoints\": function() { return /* binding */ createPoints; },\n/* harmony export */   \"sortCards\": function() { return /* binding */ sortCards; }\n/* harmony export */ });\nfunction sortCards(array) {\n  function sorter(card1, card2) {\n    //Return 1 if card 1 > card 2\n    //Return -1 if card 1 < card 2\n    const suits = [\"Spades\", \"Hearts\", \"Diamond\", \"Clubs\"];\n    if (card1.value > card2.value) {\n      return 1;\n    } else if (card1.value < card2.value) {\n      return -1;\n    } else {\n      if (suits.indexOf(card1.suit) < suits.indexOf(card2.suit)) {\n        return 1;\n      } else {\n        return -1;\n      }\n    }\n  }\n  let pivot = array[0];\n  if (array.length < 2) return array;\n  let left = array.slice(1).filter(ele => sorter(pivot, ele) === -1);\n  let right = array.slice(1).filter(ele => sorter(pivot, ele) === 1);\n  let leftSorted = sortCards(left);\n  let rightSorted = sortCards(right);\n  return leftSorted.concat([pivot]).concat(rightSorted);\n}\nfunction createPoints(pos, box) {\n  const points = [{\n    x: pos[0],\n    y: pos[1]\n  }, {\n    x: pos[0] + box[0],\n    y: pos[1]\n  }, {\n    x: pos[0] + box[0],\n    y: pos[1] + box[1]\n  }, {\n    x: pos[0],\n    y: pos[1] + box[1]\n  }];\n  return points;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZV9maWxlcy91dGlsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQ08sU0FBU0EsU0FBU0EsQ0FBQ0MsS0FBSyxFQUFDO0VBQ3hCLFNBQVNDLE1BQU1BLENBQUNDLEtBQUssRUFBQ0MsS0FBSyxFQUFDO0lBQ3hCO0lBQ0E7SUFDQSxNQUFNQyxLQUFLLEdBQUcsQ0FBQyxRQUFRLEVBQUMsUUFBUSxFQUFDLFNBQVMsRUFBQyxPQUFPLENBQUM7SUFDbkQsSUFBR0YsS0FBSyxDQUFDRyxLQUFLLEdBQUNGLEtBQUssQ0FBQ0UsS0FBSyxFQUFDO01BQ3ZCLE9BQU8sQ0FBQztJQUNaLENBQUMsTUFBSyxJQUFHSCxLQUFLLENBQUNHLEtBQUssR0FBQ0YsS0FBSyxDQUFDRSxLQUFLLEVBQUM7TUFDN0IsT0FBTyxDQUFDLENBQUM7SUFDYixDQUFDLE1BQUk7TUFDRCxJQUFHRCxLQUFLLENBQUNFLE9BQU8sQ0FBQ0osS0FBSyxDQUFDSyxJQUFJLENBQUMsR0FBQ0gsS0FBSyxDQUFDRSxPQUFPLENBQUNILEtBQUssQ0FBQ0ksSUFBSSxDQUFDLEVBQUM7UUFDbkQsT0FBTyxDQUFDO01BQ1osQ0FBQyxNQUFJO1FBQ0QsT0FBTyxDQUFDLENBQUM7TUFDYjtJQUNKO0VBQ0o7RUFDQSxJQUFJQyxLQUFLLEdBQUdSLEtBQUssQ0FBQyxDQUFDLENBQUM7RUFDcEIsSUFBR0EsS0FBSyxDQUFDUyxNQUFNLEdBQUcsQ0FBQyxFQUFFLE9BQU9ULEtBQUs7RUFDakMsSUFBSVUsSUFBSSxHQUFHVixLQUFLLENBQUNXLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsTUFBTSxDQUFFQyxHQUFHLElBQUtaLE1BQU0sQ0FBQ08sS0FBSyxFQUFDSyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztFQUNuRSxJQUFJQyxLQUFLLEdBQUdkLEtBQUssQ0FBQ1csS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDQyxNQUFNLENBQUVDLEdBQUcsSUFBS1osTUFBTSxDQUFDTyxLQUFLLEVBQUNLLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztFQUNuRSxJQUFJRSxVQUFVLEdBQUdoQixTQUFTLENBQUNXLElBQUksQ0FBQztFQUNoQyxJQUFJTSxXQUFXLEdBQUdqQixTQUFTLENBQUNlLEtBQUssQ0FBQztFQUNsQyxPQUFPQyxVQUFVLENBQUNFLE1BQU0sQ0FBQyxDQUFDVCxLQUFLLENBQUMsQ0FBQyxDQUFDUyxNQUFNLENBQUNELFdBQVcsQ0FBQztBQUN6RDtBQUNHLFNBQVNFLFlBQVlBLENBQUNDLEdBQUcsRUFBQ0MsR0FBRyxFQUFDO0VBQzdCLE1BQU1DLE1BQU0sR0FBRSxDQUFDO0lBQ1hDLENBQUMsRUFBRUgsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNUSSxDQUFDLEVBQUVKLEdBQUcsQ0FBQyxDQUFDO0VBQ1osQ0FBQyxFQUFDO0lBQ0VHLENBQUMsRUFBRUgsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFDQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hCRyxDQUFDLEVBQUVKLEdBQUcsQ0FBQyxDQUFDO0VBQ1osQ0FBQyxFQUFDO0lBQ0VHLENBQUMsRUFBRUgsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFDQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hCRyxDQUFDLEVBQUVKLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBQ0MsR0FBRyxDQUFDLENBQUM7RUFDbkIsQ0FBQyxFQUFDO0lBQ0VFLENBQUMsRUFBRUgsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNUSSxDQUFDLEVBQUVKLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBQ0MsR0FBRyxDQUFDLENBQUM7RUFDbkIsQ0FBQyxDQUNKO0VBQ0QsT0FBT0MsTUFBTTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2Fybml2YWxwb2tlci8uL3NyYy9nYW1lX2ZpbGVzL3V0aWwuanM/YWRiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcclxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRDYXJkcyhhcnJheSl7XHJcbiAgICAgICAgZnVuY3Rpb24gc29ydGVyKGNhcmQxLGNhcmQyKXtcclxuICAgICAgICAgICAgLy9SZXR1cm4gMSBpZiBjYXJkIDEgPiBjYXJkIDJcclxuICAgICAgICAgICAgLy9SZXR1cm4gLTEgaWYgY2FyZCAxIDwgY2FyZCAyXHJcbiAgICAgICAgICAgIGNvbnN0IHN1aXRzID0gW1wiU3BhZGVzXCIsXCJIZWFydHNcIixcIkRpYW1vbmRcIixcIkNsdWJzXCJdXHJcbiAgICAgICAgICAgIGlmKGNhcmQxLnZhbHVlPmNhcmQyLnZhbHVlKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiAxXHJcbiAgICAgICAgICAgIH1lbHNlIGlmKGNhcmQxLnZhbHVlPGNhcmQyLnZhbHVlKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiAtMSBcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICBpZihzdWl0cy5pbmRleE9mKGNhcmQxLnN1aXQpPHN1aXRzLmluZGV4T2YoY2FyZDIuc3VpdCkpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAxXHJcbiAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gLTEgXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IHBpdm90ID0gYXJyYXlbMF07XHJcbiAgICAgICAgaWYoYXJyYXkubGVuZ3RoIDwgMikgcmV0dXJuIGFycmF5O1xyXG4gICAgICAgIGxldCBsZWZ0ID0gYXJyYXkuc2xpY2UoMSkuZmlsdGVyKChlbGUpID0+IHNvcnRlcihwaXZvdCxlbGUpID09PSAtMSk7XHJcbiAgICAgICAgbGV0IHJpZ2h0ID0gYXJyYXkuc2xpY2UoMSkuZmlsdGVyKChlbGUpID0+IHNvcnRlcihwaXZvdCxlbGUpID09PSAxKTtcclxuICAgICAgICBsZXQgbGVmdFNvcnRlZCA9IHNvcnRDYXJkcyhsZWZ0KTtcclxuICAgICAgICBsZXQgcmlnaHRTb3J0ZWQgPSBzb3J0Q2FyZHMocmlnaHQpO1xyXG4gICAgICAgIHJldHVybiBsZWZ0U29ydGVkLmNvbmNhdChbcGl2b3RdKS5jb25jYXQocmlnaHRTb3J0ZWQpO1xyXG4gICAgfVxyXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUG9pbnRzKHBvcyxib3gpe1xyXG4gICAgICAgIGNvbnN0IHBvaW50cyA9W3tcclxuICAgICAgICAgICAgeDogcG9zWzBdLFxyXG4gICAgICAgICAgICB5OiBwb3NbMV1cclxuICAgICAgICB9LHtcclxuICAgICAgICAgICAgeDogcG9zWzBdK2JveFswXSxcclxuICAgICAgICAgICAgeTogcG9zWzFdXHJcbiAgICAgICAgfSx7XHJcbiAgICAgICAgICAgIHg6IHBvc1swXStib3hbMF0sXHJcbiAgICAgICAgICAgIHk6IHBvc1sxXStib3hbMV1cclxuICAgICAgICB9LHtcclxuICAgICAgICAgICAgeDogcG9zWzBdLFxyXG4gICAgICAgICAgICB5OiBwb3NbMV0rYm94WzFdXHJcbiAgICAgICAgfVxyXG4gICAgXTtcclxuICAgIHJldHVybiBwb2ludHM7XHJcbiAgICB9Il0sIm5hbWVzIjpbInNvcnRDYXJkcyIsImFycmF5Iiwic29ydGVyIiwiY2FyZDEiLCJjYXJkMiIsInN1aXRzIiwidmFsdWUiLCJpbmRleE9mIiwic3VpdCIsInBpdm90IiwibGVuZ3RoIiwibGVmdCIsInNsaWNlIiwiZmlsdGVyIiwiZWxlIiwicmlnaHQiLCJsZWZ0U29ydGVkIiwicmlnaHRTb3J0ZWQiLCJjb25jYXQiLCJjcmVhdGVQb2ludHMiLCJwb3MiLCJib3giLCJwb2ludHMiLCJ4IiwieSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/game_files/util.js\n");

/***/ }),

/***/ "./src/game_files/view_game.js":
/*!*************************************!*\
  !*** ./src/game_files/view_game.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Util = __webpack_require__(/*! ./util */ \"./src/game_files/util.js\");\nclass ViewGame {\n  constructor(game, ctx, pos) {\n    this.game = game;\n    this.gameCtx = ctx;\n    this.allCards = [];\n    this.allTricks = [];\n    this.setupScreen();\n    this.buildTricksCards();\n    this.bindCanvas();\n    this.cardSelected = false;\n    this.pos = pos;\n  }\n  resetCardLinks() {\n    let tricksidx = [1, 2, 3, 4, 5, 6, 7, 8];\n    let cardsidx = [0, 1, 2, 3, 4];\n    for (let i = 1; i < tricksidx.length; i++) {\n      for (let j = 0; j < cardsidx.length; j++) {\n        let cardobj = document.getElementById(`${i}-${j}`);\n        console.log(`${i}-${j}`, \"id\");\n        console.log(cardobj, \"cardobj\");\n        cardobj.src = \"./images/transparent.png\";\n      }\n    }\n  }\n  buildTricksCards() {\n    // 2D array, first item is the shape array. second item is the card.\n    // Loop through player tricks and build each card. \n    let tricks = this.game.player.tricks;\n    let allCards = [];\n    let allTricks = [];\n    // console.log(tricks,\"player tricks\");\n    for (let i = 0; i < tricks.length; i++) {\n      let trick = tricks[i];\n      allTricks.push(trick);\n      // console.log(trick,\"a grabbed trick\");\n      for (let j = 0; j < trick.cards.length; j++) {\n        let card = trick.cards[j];\n        // console.log(card,\"a grabbed card\");\n        allCards.push(card);\n      }\n    }\n    this.allCards = allCards;\n    this.allTricks = allTricks;\n  }\n  tracePath(object, ctx) {\n    let points = object.points;\n    ctx.beginPath();\n    ctx.moveTo(points[0].x, points[0].y);\n    for (let i = 1; i < points.length; i++) {\n      ctx.lineTo(points[i].x, points[i].y);\n    }\n  }\n  bindCanvas() {\n    let canvas = document.getElementById(\"game\");\n    // console.log(canvas,\"canvasgrabbed\");\n    canvas.addEventListener('click', this.handleCanvasClick.bind(this));\n  }\n  // bindDealer(){\n  //     let canvas = document.getElementById(\"game\");\n  //     // console.log(canvas,\"canvasgrabbed\");\n  //     canvas.addEventListener('click',this.handleDealerCanvasClick.bind(this))\n  // }\n  // handleDealerCanvasClick(e) {\n  //     e.preventDefault();\n  //     console.log(\"Click detected\")\n\n  //     let xOffset = this.pos[0];\n  //     let yOffset = this.pos[1];\n  //     let mouseX = parseInt(e.clientX - xOffset);\n  //     let mouseY = parseInt(e.clientY - yOffset);\n  //     console.log([e.clientX,e.clientY],\"Event Mouse Click Array\")\n  //     console.log([mouseX,mouseY],\"Mouse Click Pos After Offsets\")\n  //     const newScoreRoundButton = [[1000,345],[160,80]];\n  //     const newScoreRoundButtonPoints = Util.createPoints(newScoreRoundButton[0],newScoreRoundButton[1]);\n  //     let points = {points: newScoreRoundButtonPoints}\n  //     this.tracePath(points,this.gameCtx)\n  //     if(this.gameCtx.isPointInPath(mouseX,mouseY)){\n  //         console.log(\"Click on Score Round\");\n  //         this.playRound();\n  //     }\n\n  // }\n\n  handleCanvasClick(e) {\n    e.preventDefault();\n    console.log(\"Click detected\");\n    // console.log(this.cardSelected,\"Card Selected?\")\n    let xOffset = this.pos[0];\n    let yOffset = this.pos[1];\n    let mouseX = parseInt(e.clientX - xOffset);\n    let mouseY = parseInt(e.clientY - yOffset);\n    console.log([e.clientX, e.clientY], \"Event Mouse Click Array\");\n    console.log([mouseX, mouseY], \"Mouse Click Pos After Offsets\");\n    // console.log([this.allCards.length],\"Card Array Length\");\n    // console.log([this.allTricks.length],\"Trick Array Length\");\n    // see if a card has been clicked on\n    if (this.cardSelected === false) {\n      for (let i = 0; i < this.allCards.length; i++) {\n        let card = this.allCards[i];\n        // console.log(card.pos,\"Card Pos\");\n        this.tracePath(card, this.gameCtx);\n        if (this.gameCtx.isPointInPath(mouseX, mouseY)) {\n          this.cardSelected = card;\n          card.selected = true;\n          console.log(card, \"grabbed card\");\n          this.game.player.animate(this.gameCtx);\n          this.buildTricksCards();\n          break;\n        }\n      }\n    } else if (this.cardSelected) {\n      for (let i = 0; i < this.allTricks.length; i++) {\n        let trick = this.allTricks[i];\n        // console.log(trick.pos,\"Trick Pos\");\n        this.tracePath(trick, this.gameCtx);\n        if (this.gameCtx.isPointInPath(mouseX, mouseY)) {\n          console.log(trick, \"grabbed trick\");\n          this.moveCard(this.cardSelected, trick);\n          this.game.player.animate(this.gameCtx);\n          this.buildTricksCards();\n        }\n      }\n    }\n    const newTrickButton = [[995, 515], [80, 80]];\n    const newCardButton = [[1020, 405], [55, 80]];\n    const newTrickButtonPoints = Util.createPoints(newTrickButton[0], newTrickButton[1]);\n    const newCardButtonPoints = Util.createPoints(newCardButton[0], newCardButton[1]);\n    // Eventually need to error handle if there isnt enough gold\n    if (this.game.player.gold >= 6) {\n      let points = {\n        points: newTrickButtonPoints\n      };\n      this.tracePath(points, this.gameCtx);\n      if (this.gameCtx.isPointInPath(mouseX, mouseY)) {\n        console.log(\"Clicked on Trick Button\");\n        this.game.player.activateNextTrick();\n        this.game.player.gold -= 6;\n        this.game.player.animate(this.gameCtx);\n        this.buildTricksCards();\n      }\n    }\n    // Eventually error handle not enough gold\n    if (this.game.player.gold >= 2) {\n      let points = {\n        points: newCardButtonPoints\n      };\n      this.tracePath(points, this.gameCtx);\n      if (this.gameCtx.isPointInPath(mouseX, mouseY)) {\n        console.log(\"Clicked on Card Button\");\n        this.game.drawPlayer();\n        this.game.player.gold -= 2;\n        this.game.player.animate(this.gameCtx);\n        this.buildTricksCards();\n      }\n    }\n    // New Round button\n    //525,470,140,50\n    const newScoreRoundButton = [[525, 470], [140, 50]];\n    const newScoreRoundButtonPoints = Util.createPoints(newScoreRoundButton[0], newScoreRoundButton[1]);\n    let points = {\n      points: newScoreRoundButtonPoints\n    };\n    this.tracePath(points, this.gameCtx);\n    if (this.gameCtx.isPointInPath(mouseX, mouseY)) {\n      console.log(\"Click on Score Round\");\n      this.playRound();\n    }\n  }\n  moveCard(card, trick) {\n    let ownerid = card.trickid;\n    let owner;\n    this.allTricks.forEach(trick => {\n      if (trick.trickid === ownerid) {\n        owner = trick;\n        owner.removeCard(card);\n        owner.updateCards();\n        owner.evaluatePoker();\n      }\n    });\n    if (trick.addCard(card)) {\n      trick.updateCards();\n      trick.evaluatePoker();\n      this.cardSelected.selected = false;\n      this.cardSelected = false;\n    } else {\n      owner.addCard(card);\n      owner.updateCards();\n      owner.evaluatePoker();\n      this.cardSelected.selected = false;\n      this.cardSelected = false;\n    }\n  }\n  setupScreen() {\n    this.game.dealer.animate(this.gameCtx);\n    this.game.player.animate(this.gameCtx);\n    this.animateRounds();\n  }\n  animateRounds() {\n    this.gameCtx.font = \"40px Arial\";\n    this.gameCtx.fillStyle = \"#FFFFFF\";\n    this.gameCtx.clearRect(350, 0, 300, 198);\n    this.gameCtx.onload = () => {\n      this.gameCtx.clearRect(350, 195, 100, 50);\n      this.gameCtx.fillText(`Dealer Hands`, 350, 195);\n    };\n    this.gameCtx.fillText(`Dealer Hands`, 350, 195);\n\n    //Draw Score Button\n    this.gameCtx.font = \"24px Arial Bold\";\n    this.gameCtx.fillStyle = \"#003399\";\n    this.gameCtx.fillRect(525, 470, 140, 50);\n    this.gameCtx.fillStyle = \"#FFFFFF\";\n    this.gameCtx.fillText(`Score Round`, 532, 500);\n    this.gameCtx.lineWidth = 3;\n    this.gameCtx.strokeStyle = \"#FFFFFF\";\n    this.gameCtx.strokeRect(525, 470, 140, 50);\n    //Player Score \n    this.gameCtx.fillStyle = \"#003399\";\n    this.gameCtx.fillRect(285, 470, 170, 50);\n    this.gameCtx.fillStyle = \"#FFFFFF\";\n    this.gameCtx.fillText(`Player Score: ${this.game.player.score}`, 292, 500);\n    this.gameCtx.lineWidth = 3;\n    this.gameCtx.strokeStyle = \"#FFFFFF\";\n    this.gameCtx.strokeRect(285, 470, 170, 50);\n    //Dealer Score \n    this.gameCtx.fillStyle = \"#003399\";\n    this.gameCtx.fillRect(746, 470, 170, 50);\n    this.gameCtx.fillStyle = \"#FFFFFF\";\n    this.gameCtx.fillText(`Dealer Score: ${this.game.player.score}`, 752, 500);\n    this.gameCtx.lineWidth = 3;\n    this.gameCtx.strokeStyle = \"#FFFFFF\";\n    this.gameCtx.strokeRect(746, 470, 170, 50);\n  }\n  playRound() {\n    this.game.nextRound();\n    this.resetCardLinks();\n    this.game.dealer.animate(this.gameCtx);\n    this.game.player.animate(this.gameCtx);\n    this.animateRounds();\n    this.buildTricksCards();\n    const roundscore = document.getElementById(\"roundscore\");\n    const overlay = document.getElementById(\"overlay\");\n    overlay.style.display = \"block\";\n    roundscore.style.display = \"flex\";\n  }\n}\nmodule.exports = ViewGame;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUFDcEIsSUFBSSxDQUFDbEUsZ0JBQWdCLEVBQUU7SUFDdkIsTUFBTThFLFVBQVUsR0FBR3BFLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLFlBQVksQ0FBQztJQUN4RCxNQUFNb0UsT0FBTyxHQUFHckUsUUFBUSxDQUFDQyxjQUFjLENBQUMsU0FBUyxDQUFDO0lBQ2xEb0UsT0FBTyxDQUFDQyxLQUFLLENBQUNDLE9BQU8sR0FBRyxPQUFPO0lBQy9CSCxVQUFVLENBQUNFLEtBQUssQ0FBQ0MsT0FBTyxHQUFHLE1BQU07RUFDckM7QUFHSjtBQUVBQyxNQUFNLENBQUNDLE9BQU8sR0FBRzVGLFFBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYXJuaXZhbHBva2VyLy4vc3JjL2dhbWVfZmlsZXMvdmlld19nYW1lLmpzPzAzYjEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVXRpbCA9IHJlcXVpcmUoXCIuL3V0aWxcIilcclxuXHJcbmNsYXNzIFZpZXdHYW1lIHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihnYW1lLGN0eCxwb3Mpe1xyXG4gICAgICAgIHRoaXMuZ2FtZSA9IGdhbWU7XHJcbiAgICAgICAgdGhpcy5nYW1lQ3R4ID0gY3R4O1xyXG4gICAgICAgIHRoaXMuYWxsQ2FyZHMgPSBbXTtcclxuICAgICAgICB0aGlzLmFsbFRyaWNrcyA9IFtdO1xyXG4gICAgICAgIHRoaXMuc2V0dXBTY3JlZW4oKTtcclxuICAgICAgICB0aGlzLmJ1aWxkVHJpY2tzQ2FyZHMoKTtcclxuICAgICAgICB0aGlzLmJpbmRDYW52YXMoKTtcclxuICAgICAgICB0aGlzLmNhcmRTZWxlY3RlZCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMucG9zID0gcG9zO1xyXG4gICAgfVxyXG5cclxuICAgIHJlc2V0Q2FyZExpbmtzKCl7XHJcbiAgICAgICAgbGV0IHRyaWNrc2lkeCA9IFsxLDIsMyw0LDUsNiw3LDhdXHJcbiAgICAgICAgbGV0IGNhcmRzaWR4ID0gWzAsMSwyLDMsNF1cclxuXHJcbiAgICAgICAgZm9yKGxldCBpID0gMTtpPHRyaWNrc2lkeC5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgZm9yKGxldCBqID0gMDtqPGNhcmRzaWR4Lmxlbmd0aDtqKyspe1xyXG4gICAgICAgICAgICAgICAgbGV0IGNhcmRvYmogPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgJHtpfS0ke2p9YCk7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgJHtpfS0ke2p9YCxcImlkXCIpXHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhjYXJkb2JqLFwiY2FyZG9ialwiKVxyXG4gICAgICAgICAgICAgICAgY2FyZG9iai5zcmMgPSBcIi4vaW1hZ2VzL3RyYW5zcGFyZW50LnBuZ1wiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGJ1aWxkVHJpY2tzQ2FyZHMoKXtcclxuICAgICAgICAvLyAyRCBhcnJheSwgZmlyc3QgaXRlbSBpcyB0aGUgc2hhcGUgYXJyYXkuIHNlY29uZCBpdGVtIGlzIHRoZSBjYXJkLlxyXG4gICAgICAgIC8vIExvb3AgdGhyb3VnaCBwbGF5ZXIgdHJpY2tzIGFuZCBidWlsZCBlYWNoIGNhcmQuIFxyXG4gICAgICAgIGxldCB0cmlja3MgPSB0aGlzLmdhbWUucGxheWVyLnRyaWNrcztcclxuICAgICAgICBsZXQgYWxsQ2FyZHMgPSBbXTtcclxuICAgICAgICBsZXQgYWxsVHJpY2tzID0gW107XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2codHJpY2tzLFwicGxheWVyIHRyaWNrc1wiKTtcclxuICAgICAgICBmb3IobGV0IGkgPSAwO2kgPCB0cmlja3MubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgICAgIGxldCB0cmljayA9IHRyaWNrc1tpXTtcclxuICAgICAgICAgICAgYWxsVHJpY2tzLnB1c2godHJpY2spO1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0cmljayxcImEgZ3JhYmJlZCB0cmlja1wiKTtcclxuICAgICAgICAgICAgZm9yKGxldCBqID0gMDsgaiA8IHRyaWNrLmNhcmRzLmxlbmd0aCA7IGorKyl7XHJcbiAgICAgICAgICAgICAgICBsZXQgY2FyZCA9IHRyaWNrLmNhcmRzW2pdO1xyXG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coY2FyZCxcImEgZ3JhYmJlZCBjYXJkXCIpO1xyXG4gICAgICAgICAgICAgICAgYWxsQ2FyZHMucHVzaChjYXJkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmFsbENhcmRzID0gYWxsQ2FyZHM7XHJcbiAgICAgICAgdGhpcy5hbGxUcmlja3MgPSBhbGxUcmlja3M7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHRyYWNlUGF0aChvYmplY3QsY3R4KXtcclxuICAgICAgICBsZXQgcG9pbnRzID0gb2JqZWN0LnBvaW50cztcclxuICAgICAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgY3R4Lm1vdmVUbyhwb2ludHNbMF0ueCxwb2ludHNbMF0ueSk7XHJcbiAgICAgICAgZm9yKGxldCBpID0gMTsgaSA8IHBvaW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjdHgubGluZVRvKHBvaW50c1tpXS54LHBvaW50c1tpXS55KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgYmluZENhbnZhcygpe1xyXG4gICAgICAgIGxldCBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImdhbWVcIik7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coY2FudmFzLFwiY2FudmFzZ3JhYmJlZFwiKTtcclxuICAgICAgICBjYW52YXMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLHRoaXMuaGFuZGxlQ2FudmFzQ2xpY2suYmluZCh0aGlzKSlcclxuICAgIH1cclxuICAgIC8vIGJpbmREZWFsZXIoKXtcclxuICAgIC8vICAgICBsZXQgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJnYW1lXCIpO1xyXG4gICAgLy8gICAgIC8vIGNvbnNvbGUubG9nKGNhbnZhcyxcImNhbnZhc2dyYWJiZWRcIik7XHJcbiAgICAvLyAgICAgY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJyx0aGlzLmhhbmRsZURlYWxlckNhbnZhc0NsaWNrLmJpbmQodGhpcykpXHJcbiAgICAvLyB9XHJcbiAgICAvLyBoYW5kbGVEZWFsZXJDYW52YXNDbGljayhlKSB7XHJcbiAgICAvLyAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgLy8gICAgIGNvbnNvbGUubG9nKFwiQ2xpY2sgZGV0ZWN0ZWRcIilcclxuICAgICBcclxuICAgIC8vICAgICBsZXQgeE9mZnNldCA9IHRoaXMucG9zWzBdO1xyXG4gICAgLy8gICAgIGxldCB5T2Zmc2V0ID0gdGhpcy5wb3NbMV07XHJcbiAgICAvLyAgICAgbGV0IG1vdXNlWCA9IHBhcnNlSW50KGUuY2xpZW50WCAtIHhPZmZzZXQpO1xyXG4gICAgLy8gICAgIGxldCBtb3VzZVkgPSBwYXJzZUludChlLmNsaWVudFkgLSB5T2Zmc2V0KTtcclxuICAgIC8vICAgICBjb25zb2xlLmxvZyhbZS5jbGllbnRYLGUuY2xpZW50WV0sXCJFdmVudCBNb3VzZSBDbGljayBBcnJheVwiKVxyXG4gICAgLy8gICAgIGNvbnNvbGUubG9nKFttb3VzZVgsbW91c2VZXSxcIk1vdXNlIENsaWNrIFBvcyBBZnRlciBPZmZzZXRzXCIpXHJcbiAgICAvLyAgICAgY29uc3QgbmV3U2NvcmVSb3VuZEJ1dHRvbiA9IFtbMTAwMCwzNDVdLFsxNjAsODBdXTtcclxuICAgIC8vICAgICBjb25zdCBuZXdTY29yZVJvdW5kQnV0dG9uUG9pbnRzID0gVXRpbC5jcmVhdGVQb2ludHMobmV3U2NvcmVSb3VuZEJ1dHRvblswXSxuZXdTY29yZVJvdW5kQnV0dG9uWzFdKTtcclxuICAgIC8vICAgICBsZXQgcG9pbnRzID0ge3BvaW50czogbmV3U2NvcmVSb3VuZEJ1dHRvblBvaW50c31cclxuICAgIC8vICAgICB0aGlzLnRyYWNlUGF0aChwb2ludHMsdGhpcy5nYW1lQ3R4KVxyXG4gICAgLy8gICAgIGlmKHRoaXMuZ2FtZUN0eC5pc1BvaW50SW5QYXRoKG1vdXNlWCxtb3VzZVkpKXtcclxuICAgIC8vICAgICAgICAgY29uc29sZS5sb2coXCJDbGljayBvbiBTY29yZSBSb3VuZFwiKTtcclxuICAgIC8vICAgICAgICAgdGhpcy5wbGF5Um91bmQoKTtcclxuICAgIC8vICAgICB9XHJcblxyXG4gICAgLy8gfVxyXG5cclxuICAgIGhhbmRsZUNhbnZhc0NsaWNrKGUpIHtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJDbGljayBkZXRlY3RlZFwiKVxyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuY2FyZFNlbGVjdGVkLFwiQ2FyZCBTZWxlY3RlZD9cIilcclxuICAgICAgICBsZXQgeE9mZnNldCA9IHRoaXMucG9zWzBdO1xyXG4gICAgICAgIGxldCB5T2Zmc2V0ID0gdGhpcy5wb3NbMV07XHJcbiAgICAgICAgbGV0IG1vdXNlWCA9IHBhcnNlSW50KGUuY2xpZW50WCAtIHhPZmZzZXQpO1xyXG4gICAgICAgIGxldCBtb3VzZVkgPSBwYXJzZUludChlLmNsaWVudFkgLSB5T2Zmc2V0KTtcclxuICAgICAgICBjb25zb2xlLmxvZyhbZS5jbGllbnRYLGUuY2xpZW50WV0sXCJFdmVudCBNb3VzZSBDbGljayBBcnJheVwiKVxyXG4gICAgICAgIGNvbnNvbGUubG9nKFttb3VzZVgsbW91c2VZXSxcIk1vdXNlIENsaWNrIFBvcyBBZnRlciBPZmZzZXRzXCIpXHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coW3RoaXMuYWxsQ2FyZHMubGVuZ3RoXSxcIkNhcmQgQXJyYXkgTGVuZ3RoXCIpO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFt0aGlzLmFsbFRyaWNrcy5sZW5ndGhdLFwiVHJpY2sgQXJyYXkgTGVuZ3RoXCIpO1xyXG4gICAgICAgIC8vIHNlZSBpZiBhIGNhcmQgaGFzIGJlZW4gY2xpY2tlZCBvblxyXG4gICAgICAgIGlmKHRoaXMuY2FyZFNlbGVjdGVkID09PSBmYWxzZSl7XHJcbiAgICAgICAgICAgIGZvcihsZXQgaSA9MDsgaTwgdGhpcy5hbGxDYXJkcy5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgICAgIGxldCBjYXJkID0gdGhpcy5hbGxDYXJkc1tpXTtcclxuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGNhcmQucG9zLFwiQ2FyZCBQb3NcIik7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRyYWNlUGF0aChjYXJkLHRoaXMuZ2FtZUN0eCk7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5nYW1lQ3R4LmlzUG9pbnRJblBhdGgobW91c2VYLG1vdXNlWSkpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2FyZFNlbGVjdGVkID0gY2FyZDtcclxuICAgICAgICAgICAgICAgICAgICBjYXJkLnNlbGVjdGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhjYXJkLFwiZ3JhYmJlZCBjYXJkXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2FtZS5wbGF5ZXIuYW5pbWF0ZSh0aGlzLmdhbWVDdHgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYnVpbGRUcmlja3NDYXJkcygpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYodGhpcy5jYXJkU2VsZWN0ZWQpe1xyXG4gICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgdGhpcy5hbGxUcmlja3MubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgICAgICAgICBsZXQgdHJpY2sgPSB0aGlzLmFsbFRyaWNrc1tpXTtcclxuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHRyaWNrLnBvcyxcIlRyaWNrIFBvc1wiKTtcclxuICAgICAgICAgICAgICAgIHRoaXMudHJhY2VQYXRoKHRyaWNrLHRoaXMuZ2FtZUN0eCk7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5nYW1lQ3R4LmlzUG9pbnRJblBhdGgobW91c2VYLG1vdXNlWSkpe1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRyaWNrLFwiZ3JhYmJlZCB0cmlja1wiKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm1vdmVDYXJkKHRoaXMuY2FyZFNlbGVjdGVkLHRyaWNrKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmdhbWUucGxheWVyLmFuaW1hdGUodGhpcy5nYW1lQ3R4KTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1aWxkVHJpY2tzQ2FyZHMoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBuZXdUcmlja0J1dHRvbiA9IFtbOTk1LDUxNV0sWzgwLDgwXV07XHJcbiAgICAgICAgY29uc3QgbmV3Q2FyZEJ1dHRvbiA9IFtbMTAyMCw0MDVdLFs1NSw4MF1dO1xyXG4gICAgICAgIGNvbnN0IG5ld1RyaWNrQnV0dG9uUG9pbnRzID0gVXRpbC5jcmVhdGVQb2ludHMobmV3VHJpY2tCdXR0b25bMF0sbmV3VHJpY2tCdXR0b25bMV0pO1xyXG4gICAgICAgIGNvbnN0IG5ld0NhcmRCdXR0b25Qb2ludHMgPSBVdGlsLmNyZWF0ZVBvaW50cyhuZXdDYXJkQnV0dG9uWzBdLG5ld0NhcmRCdXR0b25bMV0pO1xyXG4gICAgICAgIC8vIEV2ZW50dWFsbHkgbmVlZCB0byBlcnJvciBoYW5kbGUgaWYgdGhlcmUgaXNudCBlbm91Z2ggZ29sZFxyXG4gICAgICAgIGlmKHRoaXMuZ2FtZS5wbGF5ZXIuZ29sZCA+PSA2KXtcclxuICAgICAgICAgICAgbGV0IHBvaW50cyA9IHtwb2ludHM6IG5ld1RyaWNrQnV0dG9uUG9pbnRzfVxyXG4gICAgICAgICAgICB0aGlzLnRyYWNlUGF0aChwb2ludHMsdGhpcy5nYW1lQ3R4KVxyXG4gICAgICAgICAgICBpZih0aGlzLmdhbWVDdHguaXNQb2ludEluUGF0aChtb3VzZVgsbW91c2VZKSl7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkNsaWNrZWQgb24gVHJpY2sgQnV0dG9uXCIpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5nYW1lLnBsYXllci5hY3RpdmF0ZU5leHRUcmljaygpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5nYW1lLnBsYXllci5nb2xkIC09IDY7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmdhbWUucGxheWVyLmFuaW1hdGUodGhpcy5nYW1lQ3R4KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuYnVpbGRUcmlja3NDYXJkcygpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIEV2ZW50dWFsbHkgZXJyb3IgaGFuZGxlIG5vdCBlbm91Z2ggZ29sZFxyXG4gICAgICAgIGlmKHRoaXMuZ2FtZS5wbGF5ZXIuZ29sZCA+PSAyKXtcclxuICAgICAgICAgICAgbGV0IHBvaW50cyA9IHtwb2ludHM6IG5ld0NhcmRCdXR0b25Qb2ludHN9XHJcbiAgICAgICAgICAgIHRoaXMudHJhY2VQYXRoKHBvaW50cyx0aGlzLmdhbWVDdHgpXHJcbiAgICAgICAgICAgIGlmKHRoaXMuZ2FtZUN0eC5pc1BvaW50SW5QYXRoKG1vdXNlWCxtb3VzZVkpKXtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQ2xpY2tlZCBvbiBDYXJkIEJ1dHRvblwiKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2FtZS5kcmF3UGxheWVyKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmdhbWUucGxheWVyLmdvbGQgLT0gMjtcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2FtZS5wbGF5ZXIuYW5pbWF0ZSh0aGlzLmdhbWVDdHgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5idWlsZFRyaWNrc0NhcmRzKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gTmV3IFJvdW5kIGJ1dHRvblxyXG4gICAgICAgIC8vNTI1LDQ3MCwxNDAsNTBcclxuICAgICAgICBjb25zdCBuZXdTY29yZVJvdW5kQnV0dG9uID0gW1s1MjUsNDcwXSxbMTQwLDUwXV07XHJcbiAgICAgICAgY29uc3QgbmV3U2NvcmVSb3VuZEJ1dHRvblBvaW50cyA9IFV0aWwuY3JlYXRlUG9pbnRzKG5ld1Njb3JlUm91bmRCdXR0b25bMF0sbmV3U2NvcmVSb3VuZEJ1dHRvblsxXSk7XHJcbiAgICAgICAgbGV0IHBvaW50cyA9IHtwb2ludHM6IG5ld1Njb3JlUm91bmRCdXR0b25Qb2ludHN9XHJcbiAgICAgICAgdGhpcy50cmFjZVBhdGgocG9pbnRzLHRoaXMuZ2FtZUN0eClcclxuICAgICAgICBpZih0aGlzLmdhbWVDdHguaXNQb2ludEluUGF0aChtb3VzZVgsbW91c2VZKSl7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQ2xpY2sgb24gU2NvcmUgUm91bmRcIik7XHJcbiAgICAgICAgICAgIHRoaXMucGxheVJvdW5kKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBcclxuXHJcbiAgICB9XHJcblxyXG4gICAgbW92ZUNhcmQoY2FyZCx0cmljayl7XHJcbiAgICAgICAgbGV0IG93bmVyaWQgPSBjYXJkLnRyaWNraWQ7XHJcbiAgICAgICAgbGV0IG93bmVyO1xyXG4gICAgICAgIHRoaXMuYWxsVHJpY2tzLmZvckVhY2goKHRyaWNrKSA9PntcclxuICAgICAgICAgICAgaWYodHJpY2sudHJpY2tpZCA9PT0gb3duZXJpZCl7XHJcbiAgICAgICAgICAgICAgICBvd25lciA9IHRyaWNrO1xyXG4gICAgICAgICAgICAgICAgb3duZXIucmVtb3ZlQ2FyZChjYXJkKTtcclxuICAgICAgICAgICAgICAgIG93bmVyLnVwZGF0ZUNhcmRzKCk7XHJcbiAgICAgICAgICAgICAgICBvd25lci5ldmFsdWF0ZVBva2VyKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgICAgIGlmKHRyaWNrLmFkZENhcmQoY2FyZCkpe1xyXG4gICAgICAgIHRyaWNrLnVwZGF0ZUNhcmRzKCk7XHJcbiAgICAgICAgdHJpY2suZXZhbHVhdGVQb2tlcigpO1xyXG4gICAgICAgIHRoaXMuY2FyZFNlbGVjdGVkLnNlbGVjdGVkID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5jYXJkU2VsZWN0ZWQgPSBmYWxzZTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgb3duZXIuYWRkQ2FyZChjYXJkKVxyXG4gICAgICAgICAgICBvd25lci51cGRhdGVDYXJkcygpO1xyXG4gICAgICAgICAgICBvd25lci5ldmFsdWF0ZVBva2VyKCk7XHJcbiAgICAgICAgICAgIHRoaXMuY2FyZFNlbGVjdGVkLnNlbGVjdGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuY2FyZFNlbGVjdGVkID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICBzZXR1cFNjcmVlbigpe1xyXG4gICAgICAgIHRoaXMuZ2FtZS5kZWFsZXIuYW5pbWF0ZSh0aGlzLmdhbWVDdHgpO1xyXG4gICAgICAgIHRoaXMuZ2FtZS5wbGF5ZXIuYW5pbWF0ZSh0aGlzLmdhbWVDdHgpO1xyXG4gICAgICAgIHRoaXMuYW5pbWF0ZVJvdW5kcygpO1xyXG4gICAgfVxyXG5cclxuICAgIGFuaW1hdGVSb3VuZHMoKXtcclxuICAgICAgICB0aGlzLmdhbWVDdHguZm9udCA9IFwiNDBweCBBcmlhbFwiO1xyXG4gICAgICAgIHRoaXMuZ2FtZUN0eC5maWxsU3R5bGUgPSBcIiNGRkZGRkZcIjtcclxuICAgICAgICB0aGlzLmdhbWVDdHguY2xlYXJSZWN0KDM1MCwwLDMwMCwxOTgpXHJcbiAgICAgICAgdGhpcy5nYW1lQ3R4Lm9ubG9hZCA9ICgpPT4ge1xyXG4gICAgICAgIHRoaXMuZ2FtZUN0eC5jbGVhclJlY3QoMzUwLDE5NSwxMDAsNTApXHJcbiAgICAgICAgdGhpcy5nYW1lQ3R4LmZpbGxUZXh0KGBEZWFsZXIgSGFuZHNgLDM1MCwxOTUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmdhbWVDdHguZmlsbFRleHQoYERlYWxlciBIYW5kc2AsMzUwLDE5NSk7XHJcblxyXG4gICAgICAgIC8vRHJhdyBTY29yZSBCdXR0b25cclxuICAgICAgICB0aGlzLmdhbWVDdHguZm9udCA9IFwiMjRweCBBcmlhbCBCb2xkXCI7XHJcbiAgICAgICAgdGhpcy5nYW1lQ3R4LmZpbGxTdHlsZSA9IFwiIzAwMzM5OVwiXHJcbiAgICAgICAgdGhpcy5nYW1lQ3R4LmZpbGxSZWN0KDUyNSw0NzAsMTQwLDUwKVxyXG4gICAgICAgIHRoaXMuZ2FtZUN0eC5maWxsU3R5bGUgPSBcIiNGRkZGRkZcIjtcclxuICAgICAgICB0aGlzLmdhbWVDdHguZmlsbFRleHQoYFNjb3JlIFJvdW5kYCw1MzIsNTAwKTtcclxuICAgICAgICB0aGlzLmdhbWVDdHgubGluZVdpZHRoID0gMztcclxuICAgICAgICB0aGlzLmdhbWVDdHguc3Ryb2tlU3R5bGUgPSBcIiNGRkZGRkZcIjtcclxuICAgICAgICB0aGlzLmdhbWVDdHguc3Ryb2tlUmVjdCg1MjUsNDcwLDE0MCw1MCk7XHJcbiAgICAgICAgLy9QbGF5ZXIgU2NvcmUgXHJcbiAgICAgICAgdGhpcy5nYW1lQ3R4LmZpbGxTdHlsZSA9IFwiIzAwMzM5OVwiXHJcbiAgICAgICAgdGhpcy5nYW1lQ3R4LmZpbGxSZWN0KDI4NSw0NzAsMTcwLDUwKVxyXG4gICAgICAgIHRoaXMuZ2FtZUN0eC5maWxsU3R5bGUgPSBcIiNGRkZGRkZcIjtcclxuICAgICAgICB0aGlzLmdhbWVDdHguZmlsbFRleHQoYFBsYXllciBTY29yZTogJHt0aGlzLmdhbWUucGxheWVyLnNjb3JlfWAsMjkyLDUwMCk7XHJcbiAgICAgICAgdGhpcy5nYW1lQ3R4LmxpbmVXaWR0aCA9IDM7XHJcbiAgICAgICAgdGhpcy5nYW1lQ3R4LnN0cm9rZVN0eWxlID0gXCIjRkZGRkZGXCI7XHJcbiAgICAgICAgdGhpcy5nYW1lQ3R4LnN0cm9rZVJlY3QoMjg1LDQ3MCwxNzAsNTApO1xyXG4gICAgICAgIC8vRGVhbGVyIFNjb3JlIFxyXG4gICAgICAgIHRoaXMuZ2FtZUN0eC5maWxsU3R5bGUgPSBcIiMwMDMzOTlcIlxyXG4gICAgICAgIHRoaXMuZ2FtZUN0eC5maWxsUmVjdCg3NDYsNDcwLDE3MCw1MClcclxuICAgICAgICB0aGlzLmdhbWVDdHguZmlsbFN0eWxlID0gXCIjRkZGRkZGXCI7XHJcbiAgICAgICAgdGhpcy5nYW1lQ3R4LmZpbGxUZXh0KGBEZWFsZXIgU2NvcmU6ICR7dGhpcy5nYW1lLnBsYXllci5zY29yZX1gLDc1Miw1MDApO1xyXG4gICAgICAgIHRoaXMuZ2FtZUN0eC5saW5lV2lkdGggPSAzO1xyXG4gICAgICAgIHRoaXMuZ2FtZUN0eC5zdHJva2VTdHlsZSA9IFwiI0ZGRkZGRlwiO1xyXG4gICAgICAgIHRoaXMuZ2FtZUN0eC5zdHJva2VSZWN0KDc0Niw0NzAsMTcwLDUwKTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgcGxheVJvdW5kKCl7XHJcbiAgICAgICAgdGhpcy5nYW1lLm5leHRSb3VuZCgpO1xyXG4gICAgICAgIHRoaXMucmVzZXRDYXJkTGlua3MoKTtcclxuICAgICAgICB0aGlzLmdhbWUuZGVhbGVyLmFuaW1hdGUodGhpcy5nYW1lQ3R4KTtcclxuICAgICAgICB0aGlzLmdhbWUucGxheWVyLmFuaW1hdGUodGhpcy5nYW1lQ3R4KTtcclxuICAgICAgICB0aGlzLmFuaW1hdGVSb3VuZHMoKTtcclxuICAgICAgICB0aGlzLmJ1aWxkVHJpY2tzQ2FyZHMoKTtcclxuICAgICAgICBjb25zdCByb3VuZHNjb3JlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyb3VuZHNjb3JlXCIpO1xyXG4gICAgICAgIGNvbnN0IG92ZXJsYXkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm92ZXJsYXlcIik7XHJcbiAgICAgICAgb3ZlcmxheS5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xyXG4gICAgICAgIHJvdW5kc2NvcmUuc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xyXG4gICAgfVxyXG5cclxuXHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gVmlld0dhbWU7Il0sIm5hbWVzIjpbIlV0aWwiLCJyZXF1aXJlIiwiVmlld0dhbWUiLCJjb25zdHJ1Y3RvciIsImdhbWUiLCJjdHgiLCJwb3MiLCJnYW1lQ3R4IiwiYWxsQ2FyZHMiLCJhbGxUcmlja3MiLCJzZXR1cFNjcmVlbiIsImJ1aWxkVHJpY2tzQ2FyZHMiLCJiaW5kQ2FudmFzIiwiY2FyZFNlbGVjdGVkIiwicmVzZXRDYXJkTGlua3MiLCJ0cmlja3NpZHgiLCJjYXJkc2lkeCIsImkiLCJsZW5ndGgiLCJqIiwiY2FyZG9iaiIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJjb25zb2xlIiwibG9nIiwic3JjIiwidHJpY2tzIiwicGxheWVyIiwidHJpY2siLCJwdXNoIiwiY2FyZHMiLCJjYXJkIiwidHJhY2VQYXRoIiwib2JqZWN0IiwicG9pbnRzIiwiYmVnaW5QYXRoIiwibW92ZVRvIiwieCIsInkiLCJsaW5lVG8iLCJjYW52YXMiLCJhZGRFdmVudExpc3RlbmVyIiwiaGFuZGxlQ2FudmFzQ2xpY2siLCJiaW5kIiwiZSIsInByZXZlbnREZWZhdWx0IiwieE9mZnNldCIsInlPZmZzZXQiLCJtb3VzZVgiLCJwYXJzZUludCIsImNsaWVudFgiLCJtb3VzZVkiLCJjbGllbnRZIiwiaXNQb2ludEluUGF0aCIsInNlbGVjdGVkIiwiYW5pbWF0ZSIsIm1vdmVDYXJkIiwibmV3VHJpY2tCdXR0b24iLCJuZXdDYXJkQnV0dG9uIiwibmV3VHJpY2tCdXR0b25Qb2ludHMiLCJjcmVhdGVQb2ludHMiLCJuZXdDYXJkQnV0dG9uUG9pbnRzIiwiZ29sZCIsImFjdGl2YXRlTmV4dFRyaWNrIiwiZHJhd1BsYXllciIsIm5ld1Njb3JlUm91bmRCdXR0b24iLCJuZXdTY29yZVJvdW5kQnV0dG9uUG9pbnRzIiwicGxheVJvdW5kIiwib3duZXJpZCIsInRyaWNraWQiLCJvd25lciIsImZvckVhY2giLCJyZW1vdmVDYXJkIiwidXBkYXRlQ2FyZHMiLCJldmFsdWF0ZVBva2VyIiwiYWRkQ2FyZCIsImRlYWxlciIsImFuaW1hdGVSb3VuZHMiLCJmb250IiwiZmlsbFN0eWxlIiwiY2xlYXJSZWN0Iiwib25sb2FkIiwiZmlsbFRleHQiLCJmaWxsUmVjdCIsImxpbmVXaWR0aCIsInN0cm9rZVN0eWxlIiwic3Ryb2tlUmVjdCIsInNjb3JlIiwibmV4dFJvdW5kIiwicm91bmRzY29yZSIsIm92ZXJsYXkiLCJzdHlsZSIsImRpc3BsYXkiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/game_files/view_game.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("const Game = __webpack_require__(/*! ./game_files/game */ \"./src/game_files/game.js\");\nconst ViewGame = __webpack_require__(/*! ./game_files/view_game */ \"./src/game_files/view_game.js\");\n\n//Questions:\n// Ask about event handelers and what should own them\n// \n\nconst gameCanvas = document.getElementById(\"canvas\");\nconst gameCtx = gameCanvas.getContext(\"2d\");\nconst game = new Game();\nconst gameCanvasRect = gameCanvas.getBoundingClientRect();\nconst gamepos = [gameCanvasRect.x, gameCanvasRect.y];\nconst view = new ViewGame(game, gameCtx, gamepos);\nconst overlay = document.getElementById(\"overlay\");\nconst start = document.getElementById(\"start\");\nconst startbutton = document.getElementById(\"start-button\");\nconst roundscore = document.getElementById(\"roundscore\");\nconst continuebutton = document.getElementById(\"continuebutton\");\nstartbutton.addEventListener('click', () => {\n  overlay.style.display = \"none\";\n  start.style.display = \"none\";\n});\ncontinuebutton.addEventListener('click', () => {\n  overlay.style.display = \"none\";\n  roundscore.style.display = \"none\";\n});\nwindow.game = game;\nwindow.view = view;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxtQkFBTyxDQUFDLG1EQUFtQixDQUFDO0FBQ3pDLE1BQU1DLFFBQVEsR0FBR0QsbUJBQU8sQ0FBQyw2REFBd0IsQ0FBQzs7QUFFbEQ7QUFDQTtBQUNBOztBQUVBLE1BQU1FLFVBQVUsR0FBR0MsUUFBUSxDQUFDQyxjQUFjLENBQUMsUUFBUSxDQUFDO0FBQ3BELE1BQU1DLE9BQU8sR0FBR0gsVUFBVSxDQUFDSSxVQUFVLENBQUMsSUFBSSxDQUFDO0FBQzNDLE1BQU1DLElBQUksR0FBRyxJQUFJUixJQUFJLEVBQUc7QUFDeEIsTUFBTVMsY0FBYyxHQUFHTixVQUFVLENBQUNPLHFCQUFxQixFQUFFO0FBQ3pELE1BQU1DLE9BQU8sR0FBRyxDQUFDRixjQUFjLENBQUNHLENBQUMsRUFBQ0gsY0FBYyxDQUFDSSxDQUFDLENBQUM7QUFDbkQsTUFBTUMsSUFBSSxHQUFHLElBQUlaLFFBQVEsQ0FBQ00sSUFBSSxFQUFDRixPQUFPLEVBQUNLLE9BQU8sQ0FBQztBQUMvQyxNQUFNSSxPQUFPLEdBQUdYLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLFNBQVMsQ0FBQztBQUNsRCxNQUFNVyxLQUFLLEdBQUdaLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLE9BQU8sQ0FBQztBQUM5QyxNQUFNWSxXQUFXLEdBQUdiLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLGNBQWMsQ0FBQztBQUMzRCxNQUFNYSxVQUFVLEdBQUdkLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLFlBQVksQ0FBQztBQUN4RCxNQUFNYyxjQUFjLEdBQUdmLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLGdCQUFnQixDQUFDO0FBRWhFWSxXQUFXLENBQUNHLGdCQUFnQixDQUFDLE9BQU8sRUFBQyxNQUFJO0VBQ3JDTCxPQUFPLENBQUNNLEtBQUssQ0FBQ0MsT0FBTyxHQUFHLE1BQU07RUFDOUJOLEtBQUssQ0FBQ0ssS0FBSyxDQUFDQyxPQUFPLEdBQUcsTUFBTTtBQUNoQyxDQUFDLENBQUM7QUFFRkgsY0FBYyxDQUFDQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUMsTUFBSTtFQUN4Q0wsT0FBTyxDQUFDTSxLQUFLLENBQUNDLE9BQU8sR0FBRyxNQUFNO0VBQzlCSixVQUFVLENBQUNHLEtBQUssQ0FBQ0MsT0FBTyxHQUFHLE1BQU07QUFDckMsQ0FBQyxDQUFDO0FBR0ZDLE1BQU0sQ0FBQ2YsSUFBSSxHQUFHQSxJQUFJO0FBQ2xCZSxNQUFNLENBQUNULElBQUksR0FBR0EsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL2Nhcm5pdmFscG9rZXIvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBHYW1lID0gcmVxdWlyZShcIi4vZ2FtZV9maWxlcy9nYW1lXCIpXHJcbmNvbnN0IFZpZXdHYW1lID0gcmVxdWlyZShcIi4vZ2FtZV9maWxlcy92aWV3X2dhbWVcIilcclxuXHJcbi8vUXVlc3Rpb25zOlxyXG4vLyBBc2sgYWJvdXQgZXZlbnQgaGFuZGVsZXJzIGFuZCB3aGF0IHNob3VsZCBvd24gdGhlbVxyXG4vLyBcclxuXHJcbmNvbnN0IGdhbWVDYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKTtcclxuY29uc3QgZ2FtZUN0eCA9IGdhbWVDYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG5jb25zdCBnYW1lID0gbmV3IEdhbWUgKCk7XHJcbmNvbnN0IGdhbWVDYW52YXNSZWN0ID0gZ2FtZUNhbnZhcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuY29uc3QgZ2FtZXBvcyA9IFtnYW1lQ2FudmFzUmVjdC54LGdhbWVDYW52YXNSZWN0LnldO1xyXG5jb25zdCB2aWV3ID0gbmV3IFZpZXdHYW1lKGdhbWUsZ2FtZUN0eCxnYW1lcG9zKTtcclxuY29uc3Qgb3ZlcmxheSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwib3ZlcmxheVwiKTtcclxuY29uc3Qgc3RhcnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN0YXJ0XCIpO1xyXG5jb25zdCBzdGFydGJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3RhcnQtYnV0dG9uXCIpO1xyXG5jb25zdCByb3VuZHNjb3JlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyb3VuZHNjb3JlXCIpO1xyXG5jb25zdCBjb250aW51ZWJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29udGludWVidXR0b25cIik7XHJcblxyXG5zdGFydGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKCk9PntcclxuICAgIG92ZXJsYXkuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgc3RhcnQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG59KVxyXG5cclxuY29udGludWVidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCgpPT57XHJcbiAgICBvdmVybGF5LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgIHJvdW5kc2NvcmUuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG59KVxyXG5cclxuXHJcbndpbmRvdy5nYW1lID0gZ2FtZTtcclxud2luZG93LnZpZXcgPSB2aWV3O1xyXG4iXSwibmFtZXMiOlsiR2FtZSIsInJlcXVpcmUiLCJWaWV3R2FtZSIsImdhbWVDYW52YXMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiZ2FtZUN0eCIsImdldENvbnRleHQiLCJnYW1lIiwiZ2FtZUNhbnZhc1JlY3QiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJnYW1lcG9zIiwieCIsInkiLCJ2aWV3Iiwib3ZlcmxheSIsInN0YXJ0Iiwic3RhcnRidXR0b24iLCJyb3VuZHNjb3JlIiwiY29udGludWVidXR0b24iLCJhZGRFdmVudExpc3RlbmVyIiwic3R5bGUiLCJkaXNwbGF5Iiwid2luZG93Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYXJuaXZhbHBva2VyLy4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;