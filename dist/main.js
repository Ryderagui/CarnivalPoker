/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/game_files/card.js":
/*!********************************!*\
  !*** ./src/game_files/card.js ***!
  \********************************/
/***/ (function(module) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nclass Card {\n  constructor(object) {\n    //#2-14\n    this.value = object.value;\n    // Suit needs to match the card save: Clubs, Diamond, Hearts, Spades\n    this.suit = object.suit;\n    // Code this in once ready to draw\n    this.sprite = new Image();\n    this.sprite.src = \"images/Cards/Medium/\" + this.suit + this.value + \".png\";\n    // console.log(this.sprite.src,\"Card Src\");\n    this.selected = false;\n    //Might need to know what trick we are inside, for event handling\n    this.trickid = 0;\n    this.pos = [0, 0];\n    this.points = [];\n  }\n  animate(ctx, spot) {\n    ctx.drawImage(this.sprite, spot[0], spot[1], Card.CARDWIDTH, Card.CARDHEIGHT);\n    if (this.selected) {\n      ctx.lineWidth = 3;\n      ;\n      ctx.strokeStyle = \"#FFFF00\";\n      ctx.strokeRect(spot[0], spot[1], Card.CARDWIDTH, Card.CARDHEIGHT);\n    }\n    this.sprite.onload = () => {\n      ctx.drawImage(this.sprite, spot[0], spot[1], Card.CARDWIDTH, Card.CARDHEIGHT);\n      if (this.selected) {\n        ctx.lineWidth = 3;\n        ;\n        ctx.strokeStyle = \"#FFFF00\";\n        ctx.strokeRect(spot[0], spot[1], Card.CARDWIDTH, Card.CARDHEIGHT);\n      }\n    };\n  }\n  updatePoints(pos) {\n    this.pos = pos || this.pos;\n    this.points = [{\n      x: this.pos[0],\n      y: this.pos[1]\n    }, {\n      x: this.pos[0] + Card.CARDWIDTH,\n      y: this.pos[1]\n    }, {\n      x: this.pos[0] + Card.CARDWIDTH,\n      y: this.pos[1] + Card.CARDHEIGHT\n    }, {\n      x: this.pos[0],\n      y: this.pos[1] + Card.CARDHEIGHT\n    }];\n  }\n}\n_defineProperty(Card, \"CARDWIDTH\", 55);\n_defineProperty(Card, \"CARDHEIGHT\", 80);\nmodule.exports = Card;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZV9maWxlcy9jYXJkLmpzLmpzIiwibmFtZXMiOlsiQ2FyZCIsImNvbnN0cnVjdG9yIiwib2JqZWN0IiwidmFsdWUiLCJzdWl0Iiwic3ByaXRlIiwiSW1hZ2UiLCJzcmMiLCJzZWxlY3RlZCIsInRyaWNraWQiLCJwb3MiLCJwb2ludHMiLCJhbmltYXRlIiwiY3R4Iiwic3BvdCIsImRyYXdJbWFnZSIsIkNBUkRXSURUSCIsIkNBUkRIRUlHSFQiLCJsaW5lV2lkdGgiLCJzdHJva2VTdHlsZSIsInN0cm9rZVJlY3QiLCJvbmxvYWQiLCJ1cGRhdGVQb2ludHMiLCJ4IiwieSIsIl9kZWZpbmVQcm9wZXJ0eSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL2Nhcm5pdmFscG9rZXIvLi9zcmMvZ2FtZV9maWxlcy9jYXJkLmpzPzJmMTIiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQ2FyZCB7XHJcbiAgICBzdGF0aWMgQ0FSRFdJRFRIID0gNTU7XHJcbiAgICBzdGF0aWMgQ0FSREhFSUdIVCA9IDgwO1xyXG4gICAgY29uc3RydWN0b3Iob2JqZWN0KSB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8jMi0xNFxyXG4gICAgICAgIHRoaXMudmFsdWUgPSBvYmplY3QudmFsdWU7XHJcbiAgICAgICAgLy8gU3VpdCBuZWVkcyB0byBtYXRjaCB0aGUgY2FyZCBzYXZlOiBDbHVicywgRGlhbW9uZCwgSGVhcnRzLCBTcGFkZXNcclxuICAgICAgICB0aGlzLnN1aXQgPSBvYmplY3Quc3VpdDtcclxuICAgICAgICAvLyBDb2RlIHRoaXMgaW4gb25jZSByZWFkeSB0byBkcmF3XHJcbiAgICAgICAgdGhpcy5zcHJpdGUgPSBuZXcgSW1hZ2UoKTtcclxuICAgICAgICB0aGlzLnNwcml0ZS5zcmMgPSBcImltYWdlcy9DYXJkcy9NZWRpdW0vXCIrdGhpcy5zdWl0K3RoaXMudmFsdWUrXCIucG5nXCI7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5zcHJpdGUuc3JjLFwiQ2FyZCBTcmNcIik7XHJcbiAgICAgICAgdGhpcy5zZWxlY3RlZCA9IGZhbHNlO1xyXG4gICAgICAgIC8vTWlnaHQgbmVlZCB0byBrbm93IHdoYXQgdHJpY2sgd2UgYXJlIGluc2lkZSwgZm9yIGV2ZW50IGhhbmRsaW5nXHJcbiAgICAgICAgdGhpcy50cmlja2lkID0gMDtcclxuICAgICAgICB0aGlzLnBvcyA9IFswLDBdO1xyXG4gICAgICAgIHRoaXMucG9pbnRzID1bXTtcclxuICAgIH1cclxuICAgIGFuaW1hdGUoY3R4LHNwb3Qpe1xyXG4gICAgICAgIGN0eC5kcmF3SW1hZ2UodGhpcy5zcHJpdGUsc3BvdFswXSxzcG90WzFdLENhcmQuQ0FSRFdJRFRILENhcmQuQ0FSREhFSUdIVClcclxuICAgICAgICBpZih0aGlzLnNlbGVjdGVkKXtcclxuICAgICAgICBjdHgubGluZVdpZHRoID0gMzs7XHJcbiAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gXCIjRkZGRjAwXCI7XHJcbiAgICAgICAgY3R4LnN0cm9rZVJlY3Qoc3BvdFswXSxzcG90WzFdLENhcmQuQ0FSRFdJRFRILENhcmQuQ0FSREhFSUdIVCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuc3ByaXRlLm9ubG9hZCA9ICgpPT4geyAgIFxyXG4gICAgICAgICAgICBjdHguZHJhd0ltYWdlKHRoaXMuc3ByaXRlLHNwb3RbMF0sc3BvdFsxXSxDYXJkLkNBUkRXSURUSCxDYXJkLkNBUkRIRUlHSFQpO1xyXG4gICAgICAgICAgICBpZih0aGlzLnNlbGVjdGVkKXtcclxuICAgICAgICAgICAgICAgIGN0eC5saW5lV2lkdGggPSAzOztcclxuICAgICAgICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IFwiI0ZGRkYwMFwiO1xyXG4gICAgICAgICAgICAgICAgY3R4LnN0cm9rZVJlY3Qoc3BvdFswXSxzcG90WzFdLENhcmQuQ0FSRFdJRFRILENhcmQuQ0FSREhFSUdIVCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG5cclxuICAgIH1cclxuICAgIHVwZGF0ZVBvaW50cyhwb3Mpe1xyXG4gICAgICAgIHRoaXMucG9zID0gcG9zIHx8IHRoaXMucG9zO1xyXG4gICAgICAgIHRoaXMucG9pbnRzID1be1xyXG4gICAgICAgICAgICB4OiB0aGlzLnBvc1swXSxcclxuICAgICAgICAgICAgeTogdGhpcy5wb3NbMV1cclxuICAgICAgICB9LHtcclxuICAgICAgICAgICAgeDogdGhpcy5wb3NbMF0rQ2FyZC5DQVJEV0lEVEgsXHJcbiAgICAgICAgICAgIHk6IHRoaXMucG9zWzFdXHJcbiAgICAgICAgfSx7XHJcbiAgICAgICAgICAgIHg6IHRoaXMucG9zWzBdK0NhcmQuQ0FSRFdJRFRILFxyXG4gICAgICAgICAgICB5OiB0aGlzLnBvc1sxXStDYXJkLkNBUkRIRUlHSFRcclxuICAgICAgICB9LHtcclxuICAgICAgICAgICAgeDogdGhpcy5wb3NbMF0sXHJcbiAgICAgICAgICAgIHk6IHRoaXMucG9zWzFdK0NhcmQuQ0FSREhFSUdIVFxyXG4gICAgICAgIH1cclxuICAgIF07XHJcbiAgICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gQ2FyZDsgIl0sIm1hcHBpbmdzIjoiOzs7QUFBQSxNQUFNQSxJQUFJLENBQUM7RUFHUEMsV0FBV0EsQ0FBQ0MsTUFBTSxFQUFFO0lBRWhCO0lBQ0EsSUFBSSxDQUFDQyxLQUFLLEdBQUdELE1BQU0sQ0FBQ0MsS0FBSztJQUN6QjtJQUNBLElBQUksQ0FBQ0MsSUFBSSxHQUFHRixNQUFNLENBQUNFLElBQUk7SUFDdkI7SUFDQSxJQUFJLENBQUNDLE1BQU0sR0FBRyxJQUFJQyxLQUFLLEVBQUU7SUFDekIsSUFBSSxDQUFDRCxNQUFNLENBQUNFLEdBQUcsR0FBRyxzQkFBc0IsR0FBQyxJQUFJLENBQUNILElBQUksR0FBQyxJQUFJLENBQUNELEtBQUssR0FBQyxNQUFNO0lBQ3BFO0lBQ0EsSUFBSSxDQUFDSyxRQUFRLEdBQUcsS0FBSztJQUNy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\n//# sourceURL=webpack-internal:///./src/game_files/card.js\n");

/***/ }),

/***/ "./src/game_files/deck.js":
/*!********************************!*\
  !*** ./src/game_files/deck.js ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Card = __webpack_require__(/*! ./card */ \"./src/game_files/card.js\");\nclass Deck {\n  constructor() {\n    this.cards = [];\n    this.makeCards();\n  }\n  makeCards() {\n    let allCards = [];\n    let values = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n    let suits = [\"Clubs\", \"Hearts\", \"Diamond\", \"Spades\"];\n    for (let i = 0; i < values.length; i++) {\n      for (let j = 0; j < suits.length; j++) {\n        let cardObject = {\n          suit: suits[j],\n          value: values[i]\n        };\n        let card = new Card(cardObject);\n        allCards.push(card);\n      }\n    }\n    this.cards = allCards;\n    return true;\n  }\n  drawCard() {\n    const scaler = this.cards.length;\n    const random = Math.random();\n    const pick = Math.floor(scaler * random);\n    const chosen = this.cards[pick];\n    return this.cards.splice(this.cards.indexOf(chosen), 1)[0];\n  }\n}\n\n// let deck = new Deck();\n// console.log(deck.cards.length);\n// console.log(deck.drawCard());\n// console.log(deck.cards.length);\nmodule.exports = Deck;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZV9maWxlcy9kZWNrLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsbUJBQU8sQ0FBQyx3Q0FBUSxDQUFDO0FBRTlCLE1BQU1DLElBQUksQ0FBQztFQUVIQyxXQUFXQSxDQUFBLEVBQUU7SUFDVCxJQUFJLENBQUNDLEtBQUssR0FBRyxFQUFFO0lBQ2YsSUFBSSxDQUFDQyxTQUFTLEVBQUU7RUFDcEI7RUFFSkEsU0FBU0EsQ0FBQSxFQUFHO0lBQ1IsSUFBSUMsUUFBUSxHQUFHLEVBQUU7SUFDakIsSUFBSUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDO0lBQzdDLElBQUlDLEtBQUssR0FBRyxDQUFDLE9BQU8sRUFBQyxRQUFRLEVBQUMsU0FBUyxFQUFDLFFBQVEsQ0FBQztJQUVqRCxLQUFJLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUNBLENBQUMsR0FBR0YsTUFBTSxDQUFDRyxNQUFNLEVBQUVELENBQUMsRUFBRSxFQUFDO01BQ2pDLEtBQUksSUFBSUUsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHSCxLQUFLLENBQUNFLE1BQU0sRUFBRUMsQ0FBQyxFQUFFLEVBQUM7UUFDakMsSUFBSUMsVUFBVSxHQUFHO1VBQ2JDLElBQUksRUFBRUwsS0FBSyxDQUFDRyxDQUFDLENBQUM7VUFDZEcsS0FBSyxFQUFFUCxNQUFNLENBQUNFLENBQUM7UUFDbkIsQ0FBQztRQUNELElBQUlNLElBQUksR0FBRyxJQUFJZixJQUFJLENBQUNZLFVBQVUsQ0FBQztRQUMvQk4sUUFBUSxDQUFDVSxJQUFJLENBQUNELElBQUksQ0FBQztNQUN2QjtJQUNKO0lBQ0EsSUFBSSxDQUFDWCxLQUFLLEdBQUdFLFFBQVE7SUFDckIsT0FBTyxJQUFJO0VBQ2Y7RUFFQVcsUUFBUUEsQ0FBQSxFQUFHO0lBQ1AsTUFBTUMsTUFBTSxHQUFHLElBQUksQ0FBQ2QsS0FBSyxDQUFDTSxNQUFNO0lBQ2hDLE1BQU1TLE1BQU0sR0FBR0MsSUFBSSxDQUFDRCxNQUFNLEVBQUU7SUFDNUIsTUFBTUUsSUFBSSxHQUFHRCxJQUFJLENBQUNFLEtBQUssQ0FBQ0osTUFBTSxHQUFHQyxNQUFNLENBQUM7SUFDeEMsTUFBTUksTUFBTSxHQUFHLElBQUksQ0FBQ25CLEtBQUssQ0FBQ2lCLElBQUksQ0FBQztJQUMvQixPQUFPLElBQUksQ0FBQ2pCLEtBQUssQ0FBQ29CLE1BQU0sQ0FBQyxJQUFJLENBQUNwQixLQUFLLENBQUNxQixPQUFPLENBQUNGLE1BQU0sQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUM3RDtBQUNKOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FHLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHekIsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL2Nhcm5pdmFscG9rZXIvLi9zcmMvZ2FtZV9maWxlcy9kZWNrLmpzPzc5NmEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQ2FyZCA9IHJlcXVpcmUoXCIuL2NhcmRcIilcclxuXHJcbmNsYXNzIERlY2sge1xyXG5cclxuICAgICAgICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgICAgICB0aGlzLmNhcmRzID0gW107XHJcbiAgICAgICAgICAgIHRoaXMubWFrZUNhcmRzKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIG1ha2VDYXJkcygpIHtcclxuICAgICAgICBsZXQgYWxsQ2FyZHMgPSBbXTtcclxuICAgICAgICBsZXQgdmFsdWVzID0gWzIsMyw0LDUsNiw3LDgsOSwxMCwxMSwxMiwxMywxNF07XHJcbiAgICAgICAgbGV0IHN1aXRzID0gW1wiQ2x1YnNcIixcIkhlYXJ0c1wiLFwiRGlhbW9uZFwiLFwiU3BhZGVzXCJdO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGZvcihsZXQgaSA9IDA7aSA8IHZhbHVlcy5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgIGZvcihsZXQgaiA9IDA7IGogPCBzdWl0cy5sZW5ndGg7IGorKyl7XHJcbiAgICAgICAgICAgICAgICBsZXQgY2FyZE9iamVjdCA9IHtcclxuICAgICAgICAgICAgICAgICAgICBzdWl0OiBzdWl0c1tqXSxcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWVzW2ldLFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgbGV0IGNhcmQgPSBuZXcgQ2FyZChjYXJkT2JqZWN0KTtcclxuICAgICAgICAgICAgICAgIGFsbENhcmRzLnB1c2goY2FyZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5jYXJkcyA9IGFsbENhcmRzO1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGRyYXdDYXJkKCkge1xyXG4gICAgICAgIGNvbnN0IHNjYWxlciA9IHRoaXMuY2FyZHMubGVuZ3RoO1xyXG4gICAgICAgIGNvbnN0IHJhbmRvbSA9IE1hdGgucmFuZG9tKCk7XHJcbiAgICAgICAgY29uc3QgcGljayA9IE1hdGguZmxvb3Ioc2NhbGVyICogcmFuZG9tKTtcclxuICAgICAgICBjb25zdCBjaG9zZW4gPSB0aGlzLmNhcmRzW3BpY2tdO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNhcmRzLnNwbGljZSh0aGlzLmNhcmRzLmluZGV4T2YoY2hvc2VuKSwxKVswXTtcclxuICAgIH1cclxufVxyXG5cclxuLy8gbGV0IGRlY2sgPSBuZXcgRGVjaygpO1xyXG4vLyBjb25zb2xlLmxvZyhkZWNrLmNhcmRzLmxlbmd0aCk7XHJcbi8vIGNvbnNvbGUubG9nKGRlY2suZHJhd0NhcmQoKSk7XHJcbi8vIGNvbnNvbGUubG9nKGRlY2suY2FyZHMubGVuZ3RoKTtcclxubW9kdWxlLmV4cG9ydHMgPSBEZWNrOyJdLCJuYW1lcyI6WyJDYXJkIiwicmVxdWlyZSIsIkRlY2siLCJjb25zdHJ1Y3RvciIsImNhcmRzIiwibWFrZUNhcmRzIiwiYWxsQ2FyZHMiLCJ2YWx1ZXMiLCJzdWl0cyIsImkiLCJsZW5ndGgiLCJqIiwiY2FyZE9iamVjdCIsInN1aXQiLCJ2YWx1ZSIsImNhcmQiLCJwdXNoIiwiZHJhd0NhcmQiLCJzY2FsZXIiLCJyYW5kb20iLCJNYXRoIiwicGljayIsImZsb29yIiwiY2hvc2VuIiwic3BsaWNlIiwiaW5kZXhPZiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/game_files/deck.js\n");

/***/ }),

/***/ "./src/game_files/game.js":
/*!********************************!*\
  !*** ./src/game_files/game.js ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst Player = __webpack_require__(/*! ./player */ \"./src/game_files/player.js\");\nconst Deck = __webpack_require__(/*! ./deck */ \"./src/game_files/deck.js\");\nconst Util = __webpack_require__(/*! ./util */ \"./src/game_files/util.js\");\nclass Game {\n  constructor() {\n    this.dealer = new Player({\n      pos: [200, 0],\n      name: \"Dealer\",\n      color: \"#800080\"\n    });\n    this.player = new Player({\n      pos: [200, 0],\n      name: \"Player\",\n      color: \"#FFA500\"\n    });\n    this.deck = new Deck();\n    this.round = 0;\n    this.prep_game();\n  }\n  prep_game() {\n    for (let i = 0; i < Game.START_HAND; i++) {\n      this.drawPlayer();\n    }\n    for (let i = 0; i < Game.START_HAND; i++) {\n      this.drawDealer();\n    }\n    // console.log(this.player.tricks[0],\"starting hand\");\n    // console.log(this.dealer.tricks[0],\"starting hand\");\n    // this.dealer.tricks[2].active = false;\n    // this.dealer.tricks[3].active = false;\n    // this.player.tricks[2].active = false;\n    // this.player.tricks[3].active = false;\n  }\n\n  drawPlayer() {\n    let new_card = this.deck.drawCard();\n    this.player.addCardBoard(new_card);\n  }\n  drawDealer() {\n    let new_card = this.deck.drawCard();\n    this.dealer.addCardBoard(new_card);\n  }\n  nextRound() {\n    this.round += 1;\n    this.player.gold += 3;\n    this.compareBoards();\n    this.drawDealer();\n    console.log(this.player.score, \"player score\");\n    console.log(this.dealer.score, \"dealer score\");\n  }\n  compareBoards() {\n    // Will need refactor to compare for each trick\n    // Loop based on whichever board has the most tricks\n    // Include auto win if mismatch on trick count\n\n    let dealer_scores = this.dealer.evaluateBoard();\n    console.log(dealer_scores, \"Dealer Scores\");\n    let player_scores = this.player.evaluateBoard();\n    console.log(player_scores, \"Player Scores\");\n    let min = dealer_scores.length < player_scores.length ? dealer_scores.length : player_scores.length;\n    console.log(min, \"min\");\n    for (let i = 0; i < min; i++) {\n      if (dealer_scores[i] > player_scores[i]) {\n        this.dealer.score += 1;\n      } else if (dealer_scores[i] < player_scores[i]) {\n        this.player.score += 1;\n      }\n    }\n  }\n  resetBoard() {}\n}\n// const g = new Game();\n// g.play();\n_defineProperty(Game, \"START_HAND\", 7);\n_defineProperty(Game, \"MAXROUNDS\", 10);\nmodule.exports = Game;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZV9maWxlcy9nYW1lLmpzLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBLE1BQU1BLE1BQU0sR0FBR0MsbUJBQU8sQ0FBQyw0Q0FBVSxDQUFDO0FBQ2xDLE1BQU1DLElBQUksR0FBR0QsbUJBQU8sQ0FBQyx3Q0FBUSxDQUFDO0FBQzlCLE1BQU1FLElBQUksR0FBR0YsbUJBQU8sQ0FBQyx3Q0FBUSxDQUFDO0FBRTlCLE1BQU1HLElBQUksQ0FBQztFQUdQQyxXQUFXQSxDQUFBLEVBQUU7SUFDVCxJQUFJLENBQUNDLE1BQU0sR0FBRyxJQUFJTixNQUFNLENBQUM7TUFBQ08sR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFDLENBQUMsQ0FBQztNQUFFQyxJQUFJLEVBQUUsUUFBUTtNQUFFQyxLQUFLLEVBQUM7SUFBUyxDQUFDLENBQUM7SUFDekUsSUFBSSxDQUFDQyxNQUFNLEdBQUcsSUFBSVYsTUFBTSxDQUFDO01BQUNPLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBQyxDQUFDLENBQUM7TUFBRUMsSUFBSSxFQUFFLFFBQVE7TUFBRUMsS0FBSyxFQUFDO0lBQVMsQ0FBQyxDQUFDO0lBQ3pFLElBQUksQ0FBQ0UsSUFBSSxHQUFHLElBQUlULElBQUksRUFBRTtJQUN0QixJQUFJLENBQUNVLEtBQUssR0FBRyxDQUFDO0lBQ2QsSUFBSSxDQUFDQyxTQUFTLEVBQUU7RUFDcEI7RUFDQUEsU0FBU0EsQ0FBQSxFQUFFO0lBQ1AsS0FBSSxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdWLElBQUksQ0FBQ1csVUFBVSxFQUFFRCxDQUFDLEVBQUUsRUFBQztNQUNwQyxJQUFJLENBQUNFLFVBQVUsRUFBRTtJQUNyQjtJQUNBLEtBQUksSUFBSUYsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHVixJQUFJLENBQUNXLFVBQVUsRUFBRUQsQ0FBQyxFQUFFLEVBQUM7TUFDcEMsSUFBSSxDQUFDRyxVQUFVLEVBQUU7SUFDckI7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7RUFDSjs7RUFFQUQsVUFBVUEsQ0FBQSxFQUFFO0lBQ1IsSUFBSUUsUUFBUSxHQUFHLElBQUksQ0FBQ1AsSUFBSSxDQUFDUSxRQUFRLEVBQUU7SUFDbkMsSUFBSSxDQUFDVCxNQUFNLENBQUNVLFlBQVksQ0FBQ0YsUUFBUSxDQUFDO0VBQ3RDO0VBQ0FELFVBQVVBLENBQUEsRUFBRTtJQUNSLElBQUlDLFFBQVEsR0FBRyxJQUFJLENBQUNQLElBQUksQ0FBQ1EsUUFBUSxFQUFFO0lBQ25DLElBQUksQ0FBQ2IsTUFBTSxDQUFDYyxZQUFZLENBQUNGLFFBQVEsQ0FBQztFQUN0QztFQUVBRyxTQUFTQSxDQUFBLEVBQUU7SUFDUCxJQUFJLENBQUNULEtBQUssSUFBSSxDQUFDO0lBQ2YsSUFBSSxDQUFDRixNQUFNLENBQUNZLElBQUksSUFBSSxDQUFDO0lBQ3JCLElBQUksQ0FBQ0MsYUFBYSxFQUFFO0lBQ3BCLElBQUksQ0FBQ04sVUFBVSxFQUFFO0lBQ2pCTyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxJQUFJLENBQUNmLE1BQU0sQ0FBQ2dCLEtBQUssRUFBQyxjQUFjLENBQUM7SUFDN0NGLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLElBQUksQ0FBQ25CLE1BQU0sQ0FBQ29CLEtBQUssRUFBQyxjQUFjLENBQUM7RUFDakQ7RUFFQUgsYUFBYUEsQ0FBQSxFQUFFO0lBQ1g7SUFDQTtJQUNBOztJQUVBLElBQUlJLGFBQWEsR0FBRyxJQUFJLENBQUNyQixNQUFNLENBQUNzQixhQUFhLEVBQUU7SUFDL0NKLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRSxhQUFhLEVBQUMsZUFBZSxDQUFDO0lBQzFDLElBQUlFLGFBQWEsR0FBRyxJQUFJLENBQUNuQixNQUFNLENBQUNrQixhQUFhLEVBQUU7SUFDL0NKLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSSxhQUFhLEVBQUMsZUFBZSxDQUFDO0lBQzFDLElBQUlDLEdBQUcsR0FBR0gsYUFBYSxDQUFDSSxNQUFNLEdBQUdGLGFBQWEsQ0FBQ0UsTUFBTSxHQUFHSixhQUFhLENBQUNJLE1BQU0sR0FBR0YsYUFBYSxDQUFDRSxNQUFNO0lBQ25HUCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0ssR0FBRyxFQUFDLEtBQUssQ0FBQztJQUN0QixLQUFJLElBQUloQixDQUFDLEdBQUcsQ0FBQyxFQUFDQSxDQUFDLEdBQUNnQixHQUFHLEVBQUNoQixDQUFDLEVBQUUsRUFBQztNQUNwQixJQUFHYSxhQUFhLENBQUNiLENBQUMsQ0FBQyxHQUFDZSxhQUFhLENBQUNmLENBQUMsQ0FBQyxFQUFDO1FBQ2pDLElBQUksQ0FBQ1IsTUFBTSxDQUFDb0IsS0FBSyxJQUFJLENBQUM7TUFDMUIsQ0FBQyxNQUFLLElBQUdDLGFBQWEsQ0FBQ2IsQ0FBQyxDQUFDLEdBQUNlLGFBQWEsQ0FBQ2YsQ0FBQyxDQUFDLEVBQUM7UUFDdkMsSUFBSSxDQUFDSixNQUFNLENBQUNnQixLQUFLLElBQUksQ0FBQztNQUMxQjtJQUNKO0VBRUo7RUFFQU0sVUFBVUEsQ0FBQSxFQUFFLENBRVo7QUFFSjtBQUNBO0FBQ0E7QUFBQUMsZUFBQSxDQXRFTTdCLElBQUksZ0JBQ2MsQ0FBQztBQUFBNkIsZUFBQSxDQURuQjdCLElBQUksZUFFYSxFQUFFO0FBc0V6QjhCLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHL0IsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL2Nhcm5pdmFscG9rZXIvLi9zcmMvZ2FtZV9maWxlcy9nYW1lLmpzPzRiY2EiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUGxheWVyID0gcmVxdWlyZShcIi4vcGxheWVyXCIpXHJcbmNvbnN0IERlY2sgPSByZXF1aXJlKFwiLi9kZWNrXCIpXHJcbmNvbnN0IFV0aWwgPSByZXF1aXJlKFwiLi91dGlsXCIpXHJcblxyXG5jbGFzcyBHYW1lIHtcclxuICAgIHN0YXRpYyBTVEFSVF9IQU5EID0gNztcclxuICAgIHN0YXRpYyBNQVhST1VORFMgPSAxMDtcclxuICAgIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgICAgdGhpcy5kZWFsZXIgPSBuZXcgUGxheWVyKHtwb3M6IFsyMDAsMF0sIG5hbWU6IFwiRGVhbGVyXCIsIGNvbG9yOlwiIzgwMDA4MFwifSlcclxuICAgICAgICB0aGlzLnBsYXllciA9IG5ldyBQbGF5ZXIoe3BvczogWzIwMCwwXSwgbmFtZTogXCJQbGF5ZXJcIiwgY29sb3I6XCIjRkZBNTAwXCJ9KVxyXG4gICAgICAgIHRoaXMuZGVjayA9IG5ldyBEZWNrKCk7XHJcbiAgICAgICAgdGhpcy5yb3VuZCA9IDA7XHJcbiAgICAgICAgdGhpcy5wcmVwX2dhbWUoKTtcclxuICAgIH1cclxuICAgIHByZXBfZ2FtZSgpe1xyXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBHYW1lLlNUQVJUX0hBTkQ7IGkrKyl7XHJcbiAgICAgICAgICAgIHRoaXMuZHJhd1BsYXllcigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgR2FtZS5TVEFSVF9IQU5EOyBpKyspe1xyXG4gICAgICAgICAgICB0aGlzLmRyYXdEZWFsZXIoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5wbGF5ZXIudHJpY2tzWzBdLFwic3RhcnRpbmcgaGFuZFwiKTtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmRlYWxlci50cmlja3NbMF0sXCJzdGFydGluZyBoYW5kXCIpO1xyXG4gICAgICAgIC8vIHRoaXMuZGVhbGVyLnRyaWNrc1syXS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICAvLyB0aGlzLmRlYWxlci50cmlja3NbM10uYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgLy8gdGhpcy5wbGF5ZXIudHJpY2tzWzJdLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIC8vIHRoaXMucGxheWVyLnRyaWNrc1szXS5hY3RpdmUgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBkcmF3UGxheWVyKCl7XHJcbiAgICAgICAgbGV0IG5ld19jYXJkID0gdGhpcy5kZWNrLmRyYXdDYXJkKCk7XHJcbiAgICAgICAgdGhpcy5wbGF5ZXIuYWRkQ2FyZEJvYXJkKG5ld19jYXJkKTsgICAgIFxyXG4gICAgfVxyXG4gICAgZHJhd0RlYWxlcigpe1xyXG4gICAgICAgIGxldCBuZXdfY2FyZCA9IHRoaXMuZGVjay5kcmF3Q2FyZCgpO1xyXG4gICAgICAgIHRoaXMuZGVhbGVyLmFkZENhcmRCb2FyZChuZXdfY2FyZCk7XHJcbiAgICB9XHJcblxyXG4gICAgbmV4dFJvdW5kKCl7XHJcbiAgICAgICAgdGhpcy5yb3VuZCArPSAxO1xyXG4gICAgICAgIHRoaXMucGxheWVyLmdvbGQgKz0gMztcclxuICAgICAgICB0aGlzLmNvbXBhcmVCb2FyZHMoKTtcclxuICAgICAgICB0aGlzLmRyYXdEZWFsZXIoKTtcclxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnBsYXllci5zY29yZSxcInBsYXllciBzY29yZVwiKTtcclxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmRlYWxlci5zY29yZSxcImRlYWxlciBzY29yZVwiKTtcclxuICAgIH1cclxuXHJcbiAgICBjb21wYXJlQm9hcmRzKCl7XHJcbiAgICAgICAgLy8gV2lsbCBuZWVkIHJlZmFjdG9yIHRvIGNvbXBhcmUgZm9yIGVhY2ggdHJpY2tcclxuICAgICAgICAvLyBMb29wIGJhc2VkIG9uIHdoaWNoZXZlciBib2FyZCBoYXMgdGhlIG1vc3QgdHJpY2tzXHJcbiAgICAgICAgLy8gSW5jbHVkZSBhdXRvIHdpbiBpZiBtaXNtYXRjaCBvbiB0cmljayBjb3VudFxyXG5cclxuICAgICAgICBsZXQgZGVhbGVyX3Njb3JlcyA9IHRoaXMuZGVhbGVyLmV2YWx1YXRlQm9hcmQoKTsgIFxyXG4gICAgICAgIGNvbnNvbGUubG9nKGRlYWxlcl9zY29yZXMsXCJEZWFsZXIgU2NvcmVzXCIpXHJcbiAgICAgICAgbGV0IHBsYXllcl9zY29yZXMgPSB0aGlzLnBsYXllci5ldmFsdWF0ZUJvYXJkKCk7XHJcbiAgICAgICAgY29uc29sZS5sb2cocGxheWVyX3Njb3JlcyxcIlBsYXllciBTY29yZXNcIilcclxuICAgICAgICBsZXQgbWluID0gZGVhbGVyX3Njb3Jlcy5sZW5ndGggPCBwbGF5ZXJfc2NvcmVzLmxlbmd0aCA/IGRlYWxlcl9zY29yZXMubGVuZ3RoIDogcGxheWVyX3Njb3Jlcy5sZW5ndGg7XHJcbiAgICAgICAgY29uc29sZS5sb2cobWluLFwibWluXCIpO1xyXG4gICAgICAgIGZvcihsZXQgaSA9IDA7aTxtaW47aSsrKXtcclxuICAgICAgICAgICAgaWYoZGVhbGVyX3Njb3Jlc1tpXT5wbGF5ZXJfc2NvcmVzW2ldKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuZGVhbGVyLnNjb3JlICs9IDFcclxuICAgICAgICAgICAgfWVsc2UgaWYoZGVhbGVyX3Njb3Jlc1tpXTxwbGF5ZXJfc2NvcmVzW2ldKXtcclxuICAgICAgICAgICAgICAgIHRoaXMucGxheWVyLnNjb3JlICs9IDFcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbiAgICByZXNldEJvYXJkKCl7XHJcblxyXG4gICAgfVxyXG5cclxufVxyXG4vLyBjb25zdCBnID0gbmV3IEdhbWUoKTtcclxuLy8gZy5wbGF5KCk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEdhbWU7ICJdLCJuYW1lcyI6WyJQbGF5ZXIiLCJyZXF1aXJlIiwiRGVjayIsIlV0aWwiLCJHYW1lIiwiY29uc3RydWN0b3IiLCJkZWFsZXIiLCJwb3MiLCJuYW1lIiwiY29sb3IiLCJwbGF5ZXIiLCJkZWNrIiwicm91bmQiLCJwcmVwX2dhbWUiLCJpIiwiU1RBUlRfSEFORCIsImRyYXdQbGF5ZXIiLCJkcmF3RGVhbGVyIiwibmV3X2NhcmQiLCJkcmF3Q2FyZCIsImFkZENhcmRCb2FyZCIsIm5leHRSb3VuZCIsImdvbGQiLCJjb21wYXJlQm9hcmRzIiwiY29uc29sZSIsImxvZyIsInNjb3JlIiwiZGVhbGVyX3Njb3JlcyIsImV2YWx1YXRlQm9hcmQiLCJwbGF5ZXJfc2NvcmVzIiwibWluIiwibGVuZ3RoIiwicmVzZXRCb2FyZCIsIl9kZWZpbmVQcm9wZXJ0eSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/game_files/game.js\n");

/***/ }),

/***/ "./src/game_files/player.js":
/*!**********************************!*\
  !*** ./src/game_files/player.js ***!
  \**********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst Trick = __webpack_require__(/*! ./trick */ \"./src/game_files/trick.js\");\nclass Player {\n  constructor(object) {\n    this.pos = object.pos;\n    this.name = object.name;\n    this.score = 0;\n    this.gold = 0;\n    this.color = object.color;\n    //Probably want an array of trick pos.\n    //Probably want to prefill each board with 4 tricks, 3 of which are empty.\n    this.tricks = [];\n    this.makeTricks();\n  }\n  addCardBoard(card) {\n    for (let i = 0; i < this.tricks.length; i++) {\n      if (this.tricks[i].addCard(card)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  makeTricks() {\n    let trickArray = [];\n    let tempPos = this.pos;\n    let trick1 = new Trick({\n      pos: this.pos,\n      trickid: 1,\n      active: true\n    });\n    trickArray.push(trick1);\n    let trick2 = new Trick({\n      pos: [this.pos[0] + 400, this.pos[1]],\n      color: \"#00FF00\",\n      trickid: 2,\n      active: true\n    });\n    trickArray.push(trick2);\n    let trick3 = new Trick({\n      pos: [this.pos[0], this.pos[1] + 150],\n      color: \"#FF0000\",\n      trickid: 3,\n      active: true\n    });\n    trickArray.push(trick3);\n    let trick4 = new Trick({\n      pos: [this.pos[0] + 400, this.pos[1] + 150],\n      color: \"#0000FF\",\n      trickid: 4,\n      active: true\n    });\n    trickArray.push(trick4);\n    this.tricks = trickArray;\n  }\n  animate(ctx) {\n    ctx.clearRect(0, 0, Player.DIM_X + 400, Player.DIM_Y);\n    ctx.fillStyle = this.color;\n    ctx.fillRect(this.pos[0], this.pos[1], Player.DIM_X, Player.DIM_Y);\n    this.tricks.forEach(trick => {\n      trick.animate(ctx);\n    });\n    ctx.font = \"50px Arial\";\n    ctx.fillStyle = this.color;\n    ctx.fillText(`${this.name}`, 40, 100);\n    ctx.fillText(`${this.score}`, 90, 150);\n    this.animateGold(ctx);\n  }\n  evaluateBoard() {\n    let scores = [];\n    for (let i = 0; i < this.tricks.length; i++) {\n      let trick = this.tricks[i];\n      let sum = trick.evaluatePoker();\n      for (let j = 0; j < trick.cards.length; j++) {\n        sum += trick.cards[j].value;\n      }\n      scores.push(sum);\n    }\n    return scores.sort();\n  }\n  animateGold(ctx) {\n    // Might move this to the game class\n    if (this.name === \"Player\") {\n      ctx.font = \"40px Arial\";\n      ctx.fillStyle = \"black\";\n      ctx.fillText(`Gold ${this.gold}`, 1030, 60);\n      // Button for new card\n      const cardback = new Image();\n      cardback.src = \"images/Cards/Medium/BackRed1.png\";\n      ctx.drawImage(cardback, 1020, 200, 55, 80);\n      ctx.font = \"20px Arial\";\n      ctx.fillStyle = \"black\";\n      ctx.fillText(`New Card`, 1090, 240);\n      ctx.fillText(`2`, 1125, 265);\n      /// Five in a row for the new hand\n      ctx.drawImage(cardback, 1020, 100, 55, 80);\n      ctx.drawImage(cardback, 1026, 100, 55, 80);\n      ctx.drawImage(cardback, 1032, 100, 55, 80);\n      ctx.drawImage(cardback, 1038, 100, 55, 80);\n      ctx.drawImage(cardback, 1044, 100, 55, 80);\n      ctx.font = \"20px Arial\";\n      ctx.fillStyle = \"black\";\n      ctx.fillText(`New Trick`, 1110, 140);\n      ctx.fillText(`6`, 1145, 160);\n      //This is a box 1020 to 1100 or 80 by 80\n      //The points are [1020,100],[1100,100],[1020,180],[1100,180]\n      cardback.onload = () => {\n        ctx.drawImage(cardback, 1020, 200, 55, 80);\n        ctx.drawImage(cardback, 1020, 100, 55, 80);\n        ctx.drawImage(cardback, 1026, 100, 55, 80);\n        ctx.drawImage(cardback, 1032, 100, 55, 80);\n        ctx.drawImage(cardback, 1038, 100, 55, 80);\n        ctx.drawImage(cardback, 1044, 100, 55, 80);\n      };\n    }\n  }\n}\n_defineProperty(Player, \"DIM_X\", 800);\n_defineProperty(Player, \"DIM_Y\", 300);\nmodule.exports = Player;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game_files/player.js\n");

/***/ }),

/***/ "./src/game_files/trick.js":
/*!*********************************!*\
  !*** ./src/game_files/trick.js ***!
  \*********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst Player = __webpack_require__(/*! ./player */ \"./src/game_files/player.js\");\nconst Card = __webpack_require__(/*! ./card */ \"./src/game_files/card.js\");\nconst Util = __webpack_require__(/*! ./util */ \"./src/game_files/util.js\");\nclass Trick {\n  constructor(object) {\n    this.pos = object.pos;\n    this.cards = [];\n    this.value = 0;\n    this.values = [];\n    this.trait = \"High Card\";\n    this.major = 0;\n    this.color = object.color;\n    this.trickid = object.trickid;\n    this.active = object.active;\n    this.points = [];\n    this.updatePoints();\n  }\n  updatePoints(pos) {\n    this.pos = pos || this.pos;\n    this.points = [{\n      x: this.pos[0],\n      y: this.pos[1]\n    }, {\n      x: this.pos[0] + Trick.WIDTH,\n      y: this.pos[1]\n    }, {\n      x: this.pos[0] + Trick.WIDTH,\n      y: this.pos[1] + Trick.HEIGHT\n    }, {\n      x: this.pos[0],\n      y: this.pos[1] + Trick.HEIGHT\n    }];\n  }\n  evaluate() {\n    let sum = 0;\n    this.cards.forEach(card => {\n      sum += card.value;\n    });\n    return sum;\n  }\n  evaluatePoker() {\n    let sorted = Util.sortCards(this.cards);\n    this.cards = sorted;\n    let values = [];\n    this.trait = \"High Card\";\n    let traitList = [\"High Card\", \"One Pair\", \"Two Pair\", \"Three of a Kind\", \"Straight\", \"Flush\", \"Full House\", \"Four of a Kind\", \"Straight-Flush\"];\n    let suits = [\"Clubs\", \"Hearts\", \"Diamond\", \"Spades\"];\n    let base = 14;\n    for (let i = 0; i < this.cards.length; i++) {\n      values.push(this.cards[i].value);\n    }\n    this.values = values;\n    if (this.cards.length === 5) {\n      // Check flush\n      let flushCheck = false;\n      let straightCheck = true;\n      for (let i = 0; i < suits.length; i++) {\n        let suit = suits[i];\n        if (this.cards.every(card => card.suit === suit)) {\n          flushCheck = true;\n        }\n      }\n      // Check straight\n      for (let i = 0; i < values.length - 1; i++) {\n        if (values[i] !== values[i + 1] + 1) {\n          // console.log(values,\"straigh check\");\n          // console.log([values[i],values[i+1]],\"straight check\");\n          straightCheck = false;\n        }\n      }\n      if (flushCheck && straightCheck) {\n        this.trait = \"Straight-Flush\";\n      } else if (flushCheck) {\n        this.trait = \"Flush\";\n      } else if (straightCheck) {\n        this.trait = \"Straight\";\n      }\n    }\n    let hash = {};\n    for (let i = 0; i < values.length; i++) {\n      if (hash[values[i]] === undefined) {\n        hash[values[i]] = 1;\n      } else {\n        hash[values[i]] += 1;\n      }\n    }\n    let pair = false;\n    let trips = false;\n    for (let i = 0; i < values.length; i++) {\n      if (hash[values[i]] === 4) {\n        this.trait = \"Four of a Kind\";\n        this.major = values[i];\n      }\n      if (hash[values[i]] === 2 && pair === false) {\n        pair = true;\n        this.trait = \"One Pair\";\n        this.major = values[i];\n      } else if (hash[values[i]] === 2 && pair === true && values[i] !== values[i - 1]) {\n        this.trait = \"Two Pair\";\n        this.major = values[i] > this.major ? values[i] : this.major;\n      } else if (hash[values[i]] === 3) {\n        trips = true;\n        this.trait = \"Three of a Kind\";\n        this.major = values[i];\n      }\n    }\n    if (trips && pair) {\n      this.trait = \"Full House\";\n    }\n    this.major = this.major || values[0];\n    let rank = traitList.indexOf(this.trait) + 1;\n    let tiebreaks = values.filter(num => num !== this.major);\n    let majorSum = this.major * base ** rank * 2;\n    let tiebreakSum = 0;\n    for (let i = 1; i < tiebreaks.length + 1; i++) {\n      tiebreakSum += tiebreaks[i - 1] * base ** rank / base ** i;\n    }\n    this.value = majorSum + tiebreakSum;\n    return this.value;\n  }\n  removeCard(card) {\n    let index = this.cards.indexOf(card);\n    return this.cards.splice(index, 1)[0];\n  }\n  addCard(card) {\n    // Need to refactor this to check if the trick has 5 cards\n    let count = this.cards.length;\n    if (count < Trick.MAXCARDS) {\n      let pos = this.pos;\n      let buffer = 35;\n      let xbuffer = 20;\n      pos = [pos[0] + buffer + xbuffer, pos[1] + buffer];\n      let xshift = count * Card.CARDWIDTH + count * 3;\n      pos = [pos[0] + xshift, pos[1]];\n      card.pos = pos;\n      card.trickid = this.trickid;\n      card.updatePoints();\n      this.cards.push(card);\n      return true;\n    } else {\n      return false;\n    }\n  }\n  updateCards() {\n    let count = this.cards.length;\n    for (let i = 0; i < count; i++) {\n      let card = this.cards[i];\n      let pos = this.pos;\n      pos = [pos[0] + Trick.XBUFFER, pos[1] + Trick.YBUFFER];\n      let xshift = i * Card.CARDWIDTH + i * 3;\n      pos = [pos[0] + xshift, pos[1]];\n      card.pos = pos;\n      card.updatePoints();\n    }\n  }\n  animate(ctx) {\n    let sorted = Util.sortCards(this.cards);\n    this.cards = sorted;\n    this.updateCards();\n    this.evaluatePoker();\n    ctx.fillStyle = this.active ? this.color : \"#000000\";\n    let trickX = this.pos[0];\n    let trickY = this.pos[1];\n    ctx.fillRect(trickX, trickY, 400, 150);\n    ctx.fillStyle = \"#000000\";\n    ctx.font = \"20px Arial\";\n    //${this.values} ${this.value} \n    ctx.fillText(`${this.trait}`, trickX + 175, trickY + 125);\n    for (let i = 0; i < this.cards.length; i++) {\n      let currentCard = this.cards[i];\n      currentCard.animate(ctx, currentCard.pos);\n    }\n  }\n}\n\n// let t = new Trick({pos: [0,0]});\n// t.addCard(\"A\");\n// console.log(t,\"t\");\n_defineProperty(Trick, \"WIDTH\", 400);\n_defineProperty(Trick, \"HEIGHT\", 150);\n_defineProperty(Trick, \"YBUFFER\", 20);\n_defineProperty(Trick, \"XBUFFER\", 55);\n_defineProperty(Trick, \"MAXCARDS\", 5);\nmodule.exports = Trick;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUNPLFdBQVcsQ0FBQ2hFLEdBQUcsQ0FBQztJQUM1QztFQUNKO0FBQ0o7O0FBRUE7QUFDQTtBQUNBO0FBQUFpRSxlQUFBLENBOUxNcEUsS0FBSyxXQUNRLEdBQUc7QUFBQW9FLGVBQUEsQ0FEaEJwRSxLQUFLLFlBRVMsR0FBRztBQUFBb0UsZUFBQSxDQUZqQnBFLEtBQUssYUFHVSxFQUFFO0FBQUFvRSxlQUFBLENBSGpCcEUsS0FBSyxhQUlVLEVBQUU7QUFBQW9FLGVBQUEsQ0FKakJwRSxLQUFLLGNBS1csQ0FBQztBQTRMdkJxRSxNQUFNLENBQUNDLE9BQU8sR0FBR3RFLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYXJuaXZhbHBva2VyLy4vc3JjL2dhbWVfZmlsZXMvdHJpY2suanM/OTVjMyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQbGF5ZXIgPSByZXF1aXJlKFwiLi9wbGF5ZXJcIilcclxuY29uc3QgQ2FyZCA9IHJlcXVpcmUoXCIuL2NhcmRcIilcclxuY29uc3QgVXRpbCA9IHJlcXVpcmUoXCIuL3V0aWxcIilcclxuXHJcbmNsYXNzIFRyaWNrIHtcclxuICAgIHN0YXRpYyBXSURUSCA9IDQwMDtcclxuICAgIHN0YXRpYyBIRUlHSFQgPSAxNTA7XHJcbiAgICBzdGF0aWMgWUJVRkZFUiA9IDIwO1xyXG4gICAgc3RhdGljIFhCVUZGRVIgPSA1NTtcclxuICAgIHN0YXRpYyBNQVhDQVJEUyA9IDU7XHJcbiAgICBjb25zdHJ1Y3RvcihvYmplY3Qpe1xyXG4gICAgICAgIHRoaXMucG9zID0gb2JqZWN0LnBvcztcclxuICAgICAgICB0aGlzLmNhcmRzID0gW107XHJcbiAgICAgICAgdGhpcy52YWx1ZSA9IDA7XHJcbiAgICAgICAgdGhpcy52YWx1ZXMgPSBbXTtcclxuICAgICAgICB0aGlzLnRyYWl0ID0gXCJIaWdoIENhcmRcIjtcclxuICAgICAgICB0aGlzLm1ham9yID0gMDtcclxuICAgICAgICB0aGlzLmNvbG9yID0gb2JqZWN0LmNvbG9yO1xyXG4gICAgICAgIHRoaXMudHJpY2tpZCA9IG9iamVjdC50cmlja2lkO1xyXG4gICAgICAgIHRoaXMuYWN0aXZlID0gb2JqZWN0LmFjdGl2ZTtcclxuICAgICAgICB0aGlzLnBvaW50cyA9IFtdO1xyXG4gICAgICAgIHRoaXMudXBkYXRlUG9pbnRzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlUG9pbnRzKHBvcyl7XHJcbiAgICAgICAgdGhpcy5wb3MgPSBwb3MgfHwgdGhpcy5wb3M7XHJcbiAgICAgICAgdGhpcy5wb2ludHMgPVt7XHJcbiAgICAgICAgICAgIHg6IHRoaXMucG9zWzBdLFxyXG4gICAgICAgICAgICB5OiB0aGlzLnBvc1sxXVxyXG4gICAgICAgIH0se1xyXG4gICAgICAgICAgICB4OiB0aGlzLnBvc1swXStUcmljay5XSURUSCxcclxuICAgICAgICAgICAgeTogdGhpcy5wb3NbMV1cclxuICAgICAgICB9LHtcclxuICAgICAgICAgICAgeDogdGhpcy5wb3NbMF0rVHJpY2suV0lEVEgsXHJcbiAgICAgICAgICAgIHk6IHRoaXMucG9zWzFdK1RyaWNrLkhFSUdIVFxyXG4gICAgICAgIH0se1xyXG4gICAgICAgICAgICB4OiB0aGlzLnBvc1swXSxcclxuICAgICAgICAgICAgeTogdGhpcy5wb3NbMV0rVHJpY2suSEVJR0hUXHJcbiAgICAgICAgfVxyXG4gICAgXTtcclxuICAgIH1cclxuXHJcbiAgICBldmFsdWF0ZSgpIHtcclxuICAgICAgICBsZXQgc3VtID0gMDtcclxuICAgICAgICB0aGlzLmNhcmRzLmZvckVhY2goKGNhcmQpPT57XHJcbiAgICAgICAgICAgIHN1bSArPSBjYXJkLnZhbHVlO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgcmV0dXJuIHN1bTsgXHJcbiAgICB9XHJcblxyXG4gICAgZXZhbHVhdGVQb2tlcigpe1xyXG4gICAgICAgIGxldCBzb3J0ZWQgPSBVdGlsLnNvcnRDYXJkcyh0aGlzLmNhcmRzKTtcclxuICAgICAgICB0aGlzLmNhcmRzID0gc29ydGVkO1xyXG4gICAgICAgIGxldCB2YWx1ZXMgPSBbXTtcclxuICAgICAgICB0aGlzLnRyYWl0ID0gXCJIaWdoIENhcmRcIjtcclxuICAgICAgICBsZXQgdHJhaXRMaXN0ID0gW1wiSGlnaCBDYXJkXCIsXCJPbmUgUGFpclwiLFwiVHdvIFBhaXJcIixcIlRocmVlIG9mIGEgS2luZFwiLFxyXG4gICAgICAgIFwiU3RyYWlnaHRcIixcIkZsdXNoXCIsXCJGdWxsIEhvdXNlXCIsXCJGb3VyIG9mIGEgS2luZFwiLFwiU3RyYWlnaHQtRmx1c2hcIl07XHJcbiAgICAgICAgbGV0IHN1aXRzID0gW1wiQ2x1YnNcIixcIkhlYXJ0c1wiLFwiRGlhbW9uZFwiLFwiU3BhZGVzXCJdO1xyXG4gICAgICAgIGxldCBiYXNlID0gMTQ7XHJcbiAgICAgICAgZm9yKGxldCBpID0gMDtpPHRoaXMuY2FyZHMubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgICAgIHZhbHVlcy5wdXNoKHRoaXMuY2FyZHNbaV0udmFsdWUpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMudmFsdWVzID0gdmFsdWVzO1xyXG4gICAgICAgIGlmKHRoaXMuY2FyZHMubGVuZ3RoID09PSA1KXtcclxuICAgICAgICAgICAgLy8gQ2hlY2sgZmx1c2hcclxuICAgICAgICAgICAgbGV0IGZsdXNoQ2hlY2sgPSBmYWxzZTtcclxuICAgICAgICAgICAgbGV0IHN0cmFpZ2h0Q2hlY2sgPSB0cnVlO1xyXG4gICAgICAgICAgICBmb3IobGV0IGkgPSAwO2k8c3VpdHMubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgICAgICAgICBsZXQgc3VpdCA9IHN1aXRzW2ldO1xyXG4gICAgICAgICAgICAgICAgaWYodGhpcy5jYXJkcy5ldmVyeSgoY2FyZCk9PmNhcmQuc3VpdCA9PT0gc3VpdCkpe1xyXG4gICAgICAgICAgICAgICAgICAgIGZsdXNoQ2hlY2sgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIENoZWNrIHN0cmFpZ2h0XHJcbiAgICAgICAgICAgIGZvcihsZXQgaSA9IDA7aTwodmFsdWVzLmxlbmd0aC0xKTtpKyspe1xyXG4gICAgICAgICAgICAgICAgaWYodmFsdWVzW2ldICE9PSB2YWx1ZXNbaSsxXSsxKXtcclxuICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh2YWx1ZXMsXCJzdHJhaWdoIGNoZWNrXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFt2YWx1ZXNbaV0sdmFsdWVzW2krMV1dLFwic3RyYWlnaHQgY2hlY2tcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgc3RyYWlnaHRDaGVjayA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGZsdXNoQ2hlY2sgJiYgc3RyYWlnaHRDaGVjayl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRyYWl0ID0gXCJTdHJhaWdodC1GbHVzaFwiO1xyXG4gICAgICAgICAgICB9ZWxzZSBpZihmbHVzaENoZWNrKXtcclxuICAgICAgICAgICAgICAgIHRoaXMudHJhaXQgPSBcIkZsdXNoXCJcclxuICAgICAgICAgICAgfWVsc2UgaWYoc3RyYWlnaHRDaGVjayl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRyYWl0ID0gXCJTdHJhaWdodFwiXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGhhc2ggPSB7fTtcclxuICAgICAgICBmb3IobGV0IGkgPSAwO2k8dmFsdWVzLmxlbmd0aDtpKyspe1xyXG4gICAgICAgICAgICBpZihoYXNoW3ZhbHVlc1tpXV0gPT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAgICAgICBoYXNoW3ZhbHVlc1tpXV0gPSAxO1xyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIGhhc2hbdmFsdWVzW2ldXSArPSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBwYWlyID0gZmFsc2U7XHJcbiAgICAgICAgbGV0IHRyaXBzID0gZmFsc2U7XHJcbiAgICAgICAgZm9yKGxldCBpID0gMDtpPHZhbHVlcy5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgIGlmKGhhc2hbdmFsdWVzW2ldXT09PTQpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy50cmFpdCA9IFwiRm91ciBvZiBhIEtpbmRcIjtcclxuICAgICAgICAgICAgICAgIHRoaXMubWFqb3IgPSB2YWx1ZXNbaV07XHJcbiAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICBpZihoYXNoW3ZhbHVlc1tpXV09PT0yICYmIHBhaXIgPT09IGZhbHNlKXtcclxuICAgICAgICAgICAgICAgIHBhaXIgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy50cmFpdCA9IFwiT25lIFBhaXJcIlxyXG4gICAgICAgICAgICAgICAgdGhpcy5tYWpvciA9IHZhbHVlc1tpXTtcclxuICAgICAgICAgICAgIH1lbHNlIGlmKGhhc2hbdmFsdWVzW2ldXT09PTIgJiYgcGFpciA9PT0gdHJ1ZSAmJiB2YWx1ZXNbaV0gIT09IHZhbHVlc1tpLTFdKXtcclxuICAgICAgICAgICAgICAgIHRoaXMudHJhaXQgPSBcIlR3byBQYWlyXCJcclxuICAgICAgICAgICAgICAgIHRoaXMubWFqb3IgPSB2YWx1ZXNbaV0+dGhpcy5tYWpvciA/IHZhbHVlc1tpXSA6IHRoaXMubWFqb3I7XHJcbiAgICAgICAgICAgICB9ZWxzZSBpZihoYXNoW3ZhbHVlc1tpXV09PT0zKXtcclxuICAgICAgICAgICAgICAgIHRyaXBzID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMudHJhaXQgPSBcIlRocmVlIG9mIGEgS2luZFwiXHJcbiAgICAgICAgICAgICAgICB0aGlzLm1ham9yID0gdmFsdWVzW2ldO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHRyaXBzICYmIHBhaXIpe1xyXG4gICAgICAgICAgICB0aGlzLnRyYWl0ID0gXCJGdWxsIEhvdXNlXCJcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5tYWpvciA9IHRoaXMubWFqb3IgfHwgdmFsdWVzWzBdO1xyXG4gICAgICAgIGxldCByYW5rID0gdHJhaXRMaXN0LmluZGV4T2YodGhpcy50cmFpdCkrMTtcclxuICAgICAgICBsZXQgdGllYnJlYWtzID0gdmFsdWVzLmZpbHRlcigobnVtKT0+IG51bSAhPT0gdGhpcy5tYWpvcik7XHJcbiAgICAgICAgbGV0IG1ham9yU3VtID0gdGhpcy5tYWpvciooYmFzZSoqcmFuaykqMjtcclxuICAgICAgICBsZXQgdGllYnJlYWtTdW0gPSAwO1xyXG4gICAgICAgIGZvcihsZXQgaSA9IDE7aTx0aWVicmVha3MubGVuZ3RoKzE7aSsrKXtcclxuICAgICAgICAgICAgICAgIHRpZWJyZWFrU3VtICs9IHRpZWJyZWFrc1tpLTFdKihiYXNlKipyYW5rKS8oYmFzZSoqaSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMudmFsdWUgPSBtYWpvclN1bSArIHRpZWJyZWFrU3VtO1xyXG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbW92ZUNhcmQoY2FyZCkge1xyXG4gICAgICAgIGxldCBpbmRleCA9IHRoaXMuY2FyZHMuaW5kZXhPZihjYXJkKTtcclxuICAgICAgICByZXR1cm4gdGhpcy5jYXJkcy5zcGxpY2UoaW5kZXgsMSlbMF07XHJcbiAgICB9XHJcblxyXG4gICAgYWRkQ2FyZChjYXJkKXtcclxuICAgICAgICAvLyBOZWVkIHRvIHJlZmFjdG9yIHRoaXMgdG8gY2hlY2sgaWYgdGhlIHRyaWNrIGhhcyA1IGNhcmRzXHJcbiAgICAgICAgbGV0IGNvdW50ID0gdGhpcy5jYXJkcy5sZW5ndGg7XHJcbiAgICAgICAgaWYoY291bnQgPCBUcmljay5NQVhDQVJEUyl7XHJcbiAgICAgICAgICAgIGxldCBwb3MgPSB0aGlzLnBvcyBcclxuICAgICAgICAgICAgbGV0IGJ1ZmZlciA9IDM1O1xyXG4gICAgICAgICAgICBsZXQgeGJ1ZmZlciA9IDIwO1xyXG4gICAgICAgICAgICBwb3MgPSBbcG9zWzBdK2J1ZmZlcit4YnVmZmVyLHBvc1sxXStidWZmZXJdXHJcbiAgICAgICAgICAgIGxldCB4c2hpZnQgPSBjb3VudCpDYXJkLkNBUkRXSURUSCArIGNvdW50KjM7XHJcbiAgICAgICAgICAgIHBvcyA9IFtwb3NbMF0reHNoaWZ0LHBvc1sxXV07XHJcbiAgICAgICAgICAgIGNhcmQucG9zID0gcG9zO1xyXG4gICAgICAgICAgICBjYXJkLnRyaWNraWQgPSB0aGlzLnRyaWNraWQ7XHJcbiAgICAgICAgICAgIGNhcmQudXBkYXRlUG9pbnRzKCk7XHJcbiAgICAgICAgICAgIHRoaXMuY2FyZHMucHVzaChjYXJkKTtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlQ2FyZHMoKXtcclxuICAgICAgICBsZXQgY291bnQgPSB0aGlzLmNhcmRzLmxlbmd0aDtcclxuICAgICAgICBmb3IobGV0IGkgPSAwO2k8Y291bnQ7aSsrKXtcclxuICAgICAgICAgICAgbGV0IGNhcmQgPSB0aGlzLmNhcmRzW2ldO1xyXG4gICAgICAgICAgICBsZXQgcG9zID0gdGhpcy5wb3MgXHJcbiAgICAgICAgICAgIHBvcyA9IFtwb3NbMF0rVHJpY2suWEJVRkZFUixwb3NbMV0rVHJpY2suWUJVRkZFUl1cclxuICAgICAgICAgICAgbGV0IHhzaGlmdCA9IGkqQ2FyZC5DQVJEV0lEVEgraSozO1xyXG4gICAgICAgICAgICBwb3MgPSBbcG9zWzBdK3hzaGlmdCxwb3NbMV1dO1xyXG4gICAgICAgICAgICBjYXJkLnBvcyA9IHBvcztcclxuICAgICAgICAgICAgY2FyZC51cGRhdGVQb2ludHMoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGFuaW1hdGUoY3R4KXtcclxuICAgICAgICBsZXQgc29ydGVkID0gVXRpbC5zb3J0Q2FyZHModGhpcy5jYXJkcyk7XHJcbiAgICAgICAgdGhpcy5jYXJkcyA9IHNvcnRlZDtcclxuICAgICAgICB0aGlzLnVwZGF0ZUNhcmRzKCk7XHJcbiAgICAgICAgdGhpcy5ldmFsdWF0ZVBva2VyKCk7XHJcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IHRoaXMuYWN0aXZlID8gdGhpcy5jb2xvciA6IFwiIzAwMDAwMFwiO1xyXG4gICAgICAgIGxldCB0cmlja1ggPSB0aGlzLnBvc1swXTtcclxuICAgICAgICBsZXQgdHJpY2tZID0gdGhpcy5wb3NbMV07XHJcbiAgICAgICAgY3R4LmZpbGxSZWN0KHRyaWNrWCx0cmlja1ksNDAwLDE1MClcclxuICAgICAgICBjdHguZmlsbFN0eWxlID0gXCIjMDAwMDAwXCJcclxuICAgICAgICBjdHguZm9udCA9IFwiMjBweCBBcmlhbFwiO1xyXG4gICAgICAgIC8vJHt0aGlzLnZhbHVlc30gJHt0aGlzLnZhbHVlfSBcclxuICAgICAgICBjdHguZmlsbFRleHQoYCR7dGhpcy50cmFpdH1gLHRyaWNrWCsxNzUsdHJpY2tZKzEyNSlcclxuICAgICAgICBmb3IobGV0IGkgPSAwO2k8dGhpcy5jYXJkcy5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgbGV0IGN1cnJlbnRDYXJkID0gdGhpcy5jYXJkc1tpXTtcclxuICAgICAgICAgICAgY3VycmVudENhcmQuYW5pbWF0ZShjdHgsY3VycmVudENhcmQucG9zKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIGxldCB0ID0gbmV3IFRyaWNrKHtwb3M6IFswLDBdfSk7XHJcbi8vIHQuYWRkQ2FyZChcIkFcIik7XHJcbi8vIGNvbnNvbGUubG9nKHQsXCJ0XCIpO1xyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gVHJpY2s7ICJdLCJuYW1lcyI6WyJQbGF5ZXIiLCJyZXF1aXJlIiwiQ2FyZCIsIlV0aWwiLCJUcmljayIsImNvbnN0cnVjdG9yIiwib2JqZWN0IiwicG9zIiwiY2FyZHMiLCJ2YWx1ZSIsInZhbHVlcyIsInRyYWl0IiwibWFqb3IiLCJjb2xvciIsInRyaWNraWQiLCJhY3RpdmUiLCJwb2ludHMiLCJ1cGRhdGVQb2ludHMiLCJ4IiwieSIsIldJRFRIIiwiSEVJR0hUIiwiZXZhbHVhdGUiLCJzdW0iLCJmb3JFYWNoIiwiY2FyZCIsImV2YWx1YXRlUG9rZXIiLCJzb3J0ZWQiLCJzb3J0Q2FyZHMiLCJ0cmFpdExpc3QiLCJzdWl0cyIsImJhc2UiLCJpIiwibGVuZ3RoIiwicHVzaCIsImZsdXNoQ2hlY2siLCJzdHJhaWdodENoZWNrIiwic3VpdCIsImV2ZXJ5IiwiaGFzaCIsInVuZGVmaW5lZCIsInBhaXIiLCJ0cmlwcyIsInJhbmsiLCJpbmRleE9mIiwidGllYnJlYWtzIiwiZmlsdGVyIiwibnVtIiwibWFqb3JTdW0iLCJ0aWVicmVha1N1bSIsInJlbW92ZUNhcmQiLCJpbmRleCIsInNwbGljZSIsImFkZENhcmQiLCJjb3VudCIsIk1BWENBUkRTIiwiYnVmZmVyIiwieGJ1ZmZlciIsInhzaGlmdCIsIkNBUkRXSURUSCIsInVwZGF0ZUNhcmRzIiwiWEJVRkZFUiIsIllCVUZGRVIiLCJhbmltYXRlIiwiY3R4IiwiZmlsbFN0eWxlIiwidHJpY2tYIiwidHJpY2tZIiwiZmlsbFJlY3QiLCJmb250IiwiZmlsbFRleHQiLCJjdXJyZW50Q2FyZCIsIl9kZWZpbmVQcm9wZXJ0eSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/game_files/trick.js\n");

/***/ }),

/***/ "./src/game_files/util.js":
/*!********************************!*\
  !*** ./src/game_files/util.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createPoints\": function() { return /* binding */ createPoints; },\n/* harmony export */   \"sortCards\": function() { return /* binding */ sortCards; }\n/* harmony export */ });\nfunction sortCards(array) {\n  function sorter(card1, card2) {\n    //Return 1 if card 1 > card 2\n    //Return -1 if card 1 < card 2\n    const suits = [\"Spades\", \"Hearts\", \"Diamond\", \"Clubs\"];\n    if (card1.value > card2.value) {\n      return 1;\n    } else if (card1.value < card2.value) {\n      return -1;\n    } else {\n      if (suits.indexOf(card1.suit) < suits.indexOf(card2.suit)) {\n        return 1;\n      } else {\n        return -1;\n      }\n    }\n  }\n  let pivot = array[0];\n  if (array.length < 2) return array;\n  let left = array.slice(1).filter(ele => sorter(pivot, ele) === -1);\n  let right = array.slice(1).filter(ele => sorter(pivot, ele) === 1);\n  let leftSorted = sortCards(left);\n  let rightSorted = sortCards(right);\n  return leftSorted.concat([pivot]).concat(rightSorted);\n}\nfunction createPoints(pos, box) {\n  const points = [{\n    x: pos[0],\n    y: pos[1]\n  }, {\n    x: pos[0] + box[0],\n    y: pos[1]\n  }, {\n    x: pos[0] + box[0],\n    y: pos[1] + box[1]\n  }, {\n    x: pos[0],\n    y: pos[1] + box[1]\n  }];\n  return points;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZV9maWxlcy91dGlsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQ08sU0FBU0EsU0FBU0EsQ0FBQ0MsS0FBSyxFQUFDO0VBQ3hCLFNBQVNDLE1BQU1BLENBQUNDLEtBQUssRUFBQ0MsS0FBSyxFQUFDO0lBQ3hCO0lBQ0E7SUFDQSxNQUFNQyxLQUFLLEdBQUcsQ0FBQyxRQUFRLEVBQUMsUUFBUSxFQUFDLFNBQVMsRUFBQyxPQUFPLENBQUM7SUFDbkQsSUFBR0YsS0FBSyxDQUFDRyxLQUFLLEdBQUNGLEtBQUssQ0FBQ0UsS0FBSyxFQUFDO01BQ3ZCLE9BQU8sQ0FBQztJQUNaLENBQUMsTUFBSyxJQUFHSCxLQUFLLENBQUNHLEtBQUssR0FBQ0YsS0FBSyxDQUFDRSxLQUFLLEVBQUM7TUFDN0IsT0FBTyxDQUFDLENBQUM7SUFDYixDQUFDLE1BQUk7TUFDRCxJQUFHRCxLQUFLLENBQUNFLE9BQU8sQ0FBQ0osS0FBSyxDQUFDSyxJQUFJLENBQUMsR0FBQ0gsS0FBSyxDQUFDRSxPQUFPLENBQUNILEtBQUssQ0FBQ0ksSUFBSSxDQUFDLEVBQUM7UUFDbkQsT0FBTyxDQUFDO01BQ1osQ0FBQyxNQUFJO1FBQ0QsT0FBTyxDQUFDLENBQUM7TUFDYjtJQUNKO0VBQ0o7RUFDQSxJQUFJQyxLQUFLLEdBQUdSLEtBQUssQ0FBQyxDQUFDLENBQUM7RUFDcEIsSUFBR0EsS0FBSyxDQUFDUyxNQUFNLEdBQUcsQ0FBQyxFQUFFLE9BQU9ULEtBQUs7RUFDakMsSUFBSVUsSUFBSSxHQUFHVixLQUFLLENBQUNXLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsTUFBTSxDQUFFQyxHQUFHLElBQUtaLE1BQU0sQ0FBQ08sS0FBSyxFQUFDSyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztFQUNuRSxJQUFJQyxLQUFLLEdBQUdkLEtBQUssQ0FBQ1csS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDQyxNQUFNLENBQUVDLEdBQUcsSUFBS1osTUFBTSxDQUFDTyxLQUFLLEVBQUNLLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztFQUNuRSxJQUFJRSxVQUFVLEdBQUdoQixTQUFTLENBQUNXLElBQUksQ0FBQztFQUNoQyxJQUFJTSxXQUFXLEdBQUdqQixTQUFTLENBQUNlLEtBQUssQ0FBQztFQUNsQyxPQUFPQyxVQUFVLENBQUNFLE1BQU0sQ0FBQyxDQUFDVCxLQUFLLENBQUMsQ0FBQyxDQUFDUyxNQUFNLENBQUNELFdBQVcsQ0FBQztBQUN6RDtBQUNHLFNBQVNFLFlBQVlBLENBQUNDLEdBQUcsRUFBQ0MsR0FBRyxFQUFDO0VBQzdCLE1BQU1DLE1BQU0sR0FBRSxDQUFDO0lBQ1hDLENBQUMsRUFBRUgsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNUSSxDQUFDLEVBQUVKLEdBQUcsQ0FBQyxDQUFDO0VBQ1osQ0FBQyxFQUFDO0lBQ0VHLENBQUMsRUFBRUgsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFDQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hCRyxDQUFDLEVBQUVKLEdBQUcsQ0FBQyxDQUFDO0VBQ1osQ0FBQyxFQUFDO0lBQ0VHLENBQUMsRUFBRUgsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFDQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hCRyxDQUFDLEVBQUVKLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBQ0MsR0FBRyxDQUFDLENBQUM7RUFDbkIsQ0FBQyxFQUFDO0lBQ0VFLENBQUMsRUFBRUgsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNUSSxDQUFDLEVBQUVKLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBQ0MsR0FBRyxDQUFDLENBQUM7RUFDbkIsQ0FBQyxDQUNKO0VBQ0QsT0FBT0MsTUFBTTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2Fybml2YWxwb2tlci8uL3NyYy9nYW1lX2ZpbGVzL3V0aWwuanM/YWRiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcclxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRDYXJkcyhhcnJheSl7XHJcbiAgICAgICAgZnVuY3Rpb24gc29ydGVyKGNhcmQxLGNhcmQyKXtcclxuICAgICAgICAgICAgLy9SZXR1cm4gMSBpZiBjYXJkIDEgPiBjYXJkIDJcclxuICAgICAgICAgICAgLy9SZXR1cm4gLTEgaWYgY2FyZCAxIDwgY2FyZCAyXHJcbiAgICAgICAgICAgIGNvbnN0IHN1aXRzID0gW1wiU3BhZGVzXCIsXCJIZWFydHNcIixcIkRpYW1vbmRcIixcIkNsdWJzXCJdXHJcbiAgICAgICAgICAgIGlmKGNhcmQxLnZhbHVlPmNhcmQyLnZhbHVlKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiAxXHJcbiAgICAgICAgICAgIH1lbHNlIGlmKGNhcmQxLnZhbHVlPGNhcmQyLnZhbHVlKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiAtMSBcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICBpZihzdWl0cy5pbmRleE9mKGNhcmQxLnN1aXQpPHN1aXRzLmluZGV4T2YoY2FyZDIuc3VpdCkpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAxXHJcbiAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gLTEgXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IHBpdm90ID0gYXJyYXlbMF07XHJcbiAgICAgICAgaWYoYXJyYXkubGVuZ3RoIDwgMikgcmV0dXJuIGFycmF5O1xyXG4gICAgICAgIGxldCBsZWZ0ID0gYXJyYXkuc2xpY2UoMSkuZmlsdGVyKChlbGUpID0+IHNvcnRlcihwaXZvdCxlbGUpID09PSAtMSk7XHJcbiAgICAgICAgbGV0IHJpZ2h0ID0gYXJyYXkuc2xpY2UoMSkuZmlsdGVyKChlbGUpID0+IHNvcnRlcihwaXZvdCxlbGUpID09PSAxKTtcclxuICAgICAgICBsZXQgbGVmdFNvcnRlZCA9IHNvcnRDYXJkcyhsZWZ0KTtcclxuICAgICAgICBsZXQgcmlnaHRTb3J0ZWQgPSBzb3J0Q2FyZHMocmlnaHQpO1xyXG4gICAgICAgIHJldHVybiBsZWZ0U29ydGVkLmNvbmNhdChbcGl2b3RdKS5jb25jYXQocmlnaHRTb3J0ZWQpO1xyXG4gICAgfVxyXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUG9pbnRzKHBvcyxib3gpe1xyXG4gICAgICAgIGNvbnN0IHBvaW50cyA9W3tcclxuICAgICAgICAgICAgeDogcG9zWzBdLFxyXG4gICAgICAgICAgICB5OiBwb3NbMV1cclxuICAgICAgICB9LHtcclxuICAgICAgICAgICAgeDogcG9zWzBdK2JveFswXSxcclxuICAgICAgICAgICAgeTogcG9zWzFdXHJcbiAgICAgICAgfSx7XHJcbiAgICAgICAgICAgIHg6IHBvc1swXStib3hbMF0sXHJcbiAgICAgICAgICAgIHk6IHBvc1sxXStib3hbMV1cclxuICAgICAgICB9LHtcclxuICAgICAgICAgICAgeDogcG9zWzBdLFxyXG4gICAgICAgICAgICB5OiBwb3NbMV0rYm94WzFdXHJcbiAgICAgICAgfVxyXG4gICAgXTtcclxuICAgIHJldHVybiBwb2ludHM7XHJcbiAgICB9Il0sIm5hbWVzIjpbInNvcnRDYXJkcyIsImFycmF5Iiwic29ydGVyIiwiY2FyZDEiLCJjYXJkMiIsInN1aXRzIiwidmFsdWUiLCJpbmRleE9mIiwic3VpdCIsInBpdm90IiwibGVuZ3RoIiwibGVmdCIsInNsaWNlIiwiZmlsdGVyIiwiZWxlIiwicmlnaHQiLCJsZWZ0U29ydGVkIiwicmlnaHRTb3J0ZWQiLCJjb25jYXQiLCJjcmVhdGVQb2ludHMiLCJwb3MiLCJib3giLCJwb2ludHMiLCJ4IiwieSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/game_files/util.js\n");

/***/ }),

/***/ "./src/game_files/view_game.js":
/*!*************************************!*\
  !*** ./src/game_files/view_game.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Util = __webpack_require__(/*! ./util */ \"./src/game_files/util.js\");\nclass ViewGame {\n  constructor(game, ctx1, ctx2) {\n    this.game = game;\n    this.dealerCtx = ctx1;\n    this.playerCtx = ctx2;\n    this.allCards = [];\n    this.allTricks = [];\n    this.setupScreen();\n    this.buildTricksCards();\n    this.bindPlayer();\n    this.cardSelected = false;\n  }\n  buildTricksCards() {\n    // 2D array, first item is the shape array. second item is the card.\n    // Loop through player tricks and build each card. \n    let tricks = this.game.player.tricks;\n    let allCards = [];\n    let allTricks = [];\n    // console.log(tricks,\"player tricks\");\n    for (let i = 0; i < tricks.length; i++) {\n      let trick = tricks[i];\n      allTricks.push(trick);\n      // console.log(trick,\"a grabbed trick\");\n      for (let j = 0; j < trick.cards.length; j++) {\n        let card = trick.cards[j];\n        // console.log(card,\"a grabbed card\");\n        allCards.push(card);\n      }\n    }\n    this.allCards = allCards;\n    this.allTricks = allTricks;\n  }\n  tracePath(object, ctx) {\n    let points = object.points;\n    ctx.beginPath();\n    ctx.moveTo(points[0].x, points[0].y);\n    for (let i = 1; i < points.length; i++) {\n      ctx.lineTo(points[i].x, points[i].y);\n    }\n  }\n  bindPlayer() {\n    let canvas = document.getElementById(\"player\");\n    // console.log(canvas,\"canvasgrabbed\");\n    canvas.addEventListener('click', this.handleCanvasClick.bind(this));\n  }\n  handleCanvasClick(e) {\n    e.preventDefault();\n    console.log(\"Click detected\");\n    console.log(this.cardSelected, \"Card Selected?\");\n    let xOffset = 0;\n    let yOffset = 450;\n    let mouseX = parseInt(e.clientX - xOffset);\n    let mouseY = parseInt(e.clientY - yOffset);\n    // console.log([e.clientX,e.clientY],\"Event Mouse Click Array\")\n    // console.log([mouseX,mouseY],\"Mouse Click Pos After Offsets\")\n    // console.log([this.allCards.length],\"Card Array Length\");\n    // console.log([this.allTricks.length],\"Trick Array Length\");\n    // see if a card has been clicked on\n    if (this.cardSelected === false) {\n      for (let i = 0; i < this.allCards.length; i++) {\n        let card = this.allCards[i];\n        // console.log(card.pos,\"Card Pos\");\n        this.tracePath(card, this.playerCtx);\n        if (this.playerCtx.isPointInPath(mouseX, mouseY)) {\n          this.cardSelected = card;\n          card.selected = true;\n          console.log(card, \"grabbed card\");\n          this.game.player.animate(this.playerCtx);\n          this.buildTricksCards();\n          break;\n        }\n      }\n    } else if (this.cardSelected) {\n      for (let i = 0; i < this.allTricks.length; i++) {\n        let trick = this.allTricks[i];\n        // console.log(trick.pos,\"Trick Pos\");\n        this.tracePath(trick, this.playerCtx);\n        if (this.playerCtx.isPointInPath(mouseX, mouseY)) {\n          console.log(trick, \"grabbed trick\");\n          this.moveCard(this.cardSelected, trick);\n          this.game.player.animate(this.playerCtx);\n          this.buildTricksCards();\n        }\n      }\n    }\n    const newTrickButton = [[1020, 100], [80, 80]];\n    const newCardButton = [[1020, 200], [55, 80]];\n    const newTrickButtonPoints = Util.createPoints(newTrickButton[0], newTrickButton[1]);\n    const newCardButtonPoints = Util.createPoints(newCardButton[0], newCardButton[1]);\n    // Eventually need to error handle if there isnt enough gold\n    if (this.game.player.gold >= 6) {\n      let points = {\n        points: newTrickButtonPoints\n      };\n      this.tracePath(points, this.playerCtx);\n      if (this.playerCtx.isPointInPath(mouseX, mouseY)) {\n        console.log(\"Clicked on Trick Button\");\n        // Activate next trick\n        this.game.player.gold -= 6;\n        this.game.player.animate(this.playerCtx);\n        this.buildTricksCards();\n      }\n    }\n    // Eventually error handle not enough gold\n    if (this.game.player.gold >= 2) {\n      let points = {\n        points: newCardButtonPoints\n      };\n      this.tracePath(points, this.playerCtx);\n      if (this.playerCtx.isPointInPath(mouseX, mouseY)) {\n        console.log(\"Clicked on Card Button\");\n        this.game.drawPlayer();\n        this.game.player.gold -= 2;\n        this.game.player.animate(this.playerCtx);\n        this.buildTricksCards();\n      }\n    }\n\n    // const newScoreRoundButton = [[1020,220][160,80]];\n    // const newScoreRoundButtonPoints = Util.createPoints(newScoreRoundButton[0],newScoreRoundButton[1]);\n    // let points = {points: newScoreRoundButtonPoints}\n    // this.tracePath(points,this.dealerCtx)\n    // if(this.dealerCtx.isPointInPath(mouseX+xOffset,mouseY+yOffset)){\n    //     console.log(\"Click on Score Round\");\n    //     this.playRound();\n    // }\n  }\n\n  moveCard(card, trick) {\n    let ownerid = card.trickid;\n    let owner;\n    this.allTricks.forEach(trick => {\n      if (trick.trickid === ownerid) {\n        owner = trick;\n        owner.removeCard(card);\n        owner.updateCards();\n        owner.evaluatePoker();\n      }\n    });\n    if (trick.addCard(card)) {\n      trick.updateCards();\n      trick.evaluatePoker();\n      this.cardSelected.selected = false;\n      this.cardSelected = false;\n    } else {\n      owner.addCard(card);\n      owner.updateCards();\n      owner.evaluatePoker();\n      this.cardSelected.selected = false;\n      this.cardSelected = false;\n    }\n  }\n  setupScreen() {\n    this.game.dealer.animate(this.dealerCtx);\n    this.game.player.animate(this.playerCtx);\n    this.animateRounds();\n  }\n  animateRounds() {\n    // Eventually move this to the dealer class\n    this.dealerCtx.font = \"40px Arial\";\n    this.dealerCtx.fillStyle = \"black\";\n    this.dealerCtx.onload = () => {\n      this.dealerCtx.fillText(`Round ${this.game.round}`, 1010, 100);\n      this.dealerCtx.font = \"20px Arial\";\n      let remRounds = 10 - this.game.round;\n      this.dealerCtx.fillText(`Remaining Rounds:`, 1010, 160);\n      this.dealerCtx.fillText(`${remRounds}`, 1090, 190);\n    };\n    this.dealerCtx.fillText(`Round ${this.game.round}`, 1010, 100);\n    this.dealerCtx.font = \"20px Arial\";\n    let remRounds = 10 - this.game.round;\n    this.dealerCtx.fillText(`Remaining Rounds:`, 1010, 160);\n    this.dealerCtx.fillText(`${remRounds}`, 1090, 190);\n    this.dealerCtx.fillStyle = \"#777777\";\n    this.dealerCtx.fillRect(1020, 220, 160, 80);\n    this.dealerCtx.fillStyle = \"black\";\n    this.dealerCtx.fillText(`Score Round`, 1040, 270);\n  }\n  playRound() {\n    this.game.nextRound();\n    this.game.dealer.animate(this.dealerCtx);\n    this.game.player.animate(this.playerCtx);\n    this.animateRounds();\n    this.buildTricksCards();\n  }\n}\nmodule.exports = ViewGame;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game_files/view_game.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("const Game = __webpack_require__(/*! ./game_files/game */ \"./src/game_files/game.js\");\nconst ViewGame = __webpack_require__(/*! ./game_files/view_game */ \"./src/game_files/view_game.js\");\n\n//Questions:\n// Ask about event handelers and what should own them\n// \n\nconst dealercanvas = document.getElementById(\"dealer\");\nconst playercanvas = document.getElementById(\"player\");\nconst dealerCtx = dealercanvas.getContext(\"2d\");\nconst playerCtx = playercanvas.getContext(\"2d\");\nconst game = new Game();\nconst view = new ViewGame(game, dealerCtx, playerCtx);\nwindow.game = game;\nwindow.view = view;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxtQkFBTyxDQUFDLG1EQUFtQixDQUFDO0FBQ3pDLE1BQU1DLFFBQVEsR0FBR0QsbUJBQU8sQ0FBQyw2REFBd0IsQ0FBQzs7QUFFbEQ7QUFDQTtBQUNBOztBQUVBLE1BQU1FLFlBQVksR0FBR0MsUUFBUSxDQUFDQyxjQUFjLENBQUMsUUFBUSxDQUFDO0FBQ3RELE1BQU1DLFlBQVksR0FBR0YsUUFBUSxDQUFDQyxjQUFjLENBQUMsUUFBUSxDQUFDO0FBQ3RELE1BQU1FLFNBQVMsR0FBR0osWUFBWSxDQUFDSyxVQUFVLENBQUMsSUFBSSxDQUFDO0FBQy9DLE1BQU1DLFNBQVMsR0FBR0gsWUFBWSxDQUFDRSxVQUFVLENBQUMsSUFBSSxDQUFDO0FBQy9DLE1BQU1FLElBQUksR0FBRyxJQUFJVixJQUFJLEVBQUc7QUFDeEIsTUFBTVcsSUFBSSxHQUFHLElBQUlULFFBQVEsQ0FBQ1EsSUFBSSxFQUFDSCxTQUFTLEVBQUNFLFNBQVMsQ0FBQztBQUduREcsTUFBTSxDQUFDRixJQUFJLEdBQUdBLElBQUk7QUFDbEJFLE1BQU0sQ0FBQ0QsSUFBSSxHQUFHQSxJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2Fybml2YWxwb2tlci8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEdhbWUgPSByZXF1aXJlKFwiLi9nYW1lX2ZpbGVzL2dhbWVcIilcclxuY29uc3QgVmlld0dhbWUgPSByZXF1aXJlKFwiLi9nYW1lX2ZpbGVzL3ZpZXdfZ2FtZVwiKVxyXG5cclxuLy9RdWVzdGlvbnM6XHJcbi8vIEFzayBhYm91dCBldmVudCBoYW5kZWxlcnMgYW5kIHdoYXQgc2hvdWxkIG93biB0aGVtXHJcbi8vIFxyXG5cclxuY29uc3QgZGVhbGVyY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkZWFsZXJcIik7XHJcbmNvbnN0IHBsYXllcmNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGxheWVyXCIpO1xyXG5jb25zdCBkZWFsZXJDdHggPSBkZWFsZXJjYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG5jb25zdCBwbGF5ZXJDdHggPSBwbGF5ZXJjYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG5jb25zdCBnYW1lID0gbmV3IEdhbWUgKCk7XHJcbmNvbnN0IHZpZXcgPSBuZXcgVmlld0dhbWUoZ2FtZSxkZWFsZXJDdHgscGxheWVyQ3R4KTtcclxuXHJcblxyXG53aW5kb3cuZ2FtZSA9IGdhbWU7XHJcbndpbmRvdy52aWV3ID0gdmlldztcclxuIl0sIm5hbWVzIjpbIkdhbWUiLCJyZXF1aXJlIiwiVmlld0dhbWUiLCJkZWFsZXJjYW52YXMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwicGxheWVyY2FudmFzIiwiZGVhbGVyQ3R4IiwiZ2V0Q29udGV4dCIsInBsYXllckN0eCIsImdhbWUiLCJ2aWV3Iiwid2luZG93Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYXJuaXZhbHBva2VyLy4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;