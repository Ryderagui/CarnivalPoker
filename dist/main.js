!function(){var t={596:function(t,e,s){function i(t,e,s){return(e=function(t){var e=function(t,e){if("object"!=typeof t||null===t)return t;var s=t[Symbol.toPrimitive];if(void 0!==s){var i=s.call(t,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==typeof e?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}const a=s(807);console.log(a.canvasSize(),"Util canvasSize");class r{constructor(t){this.value=t.value,this.suit=t.suit,this.sprite=new Image,this.sprite.src="images/Cards/Medium/"+this.suit+this.value+".png",this.selected=!1,this.trickid=0,this.pos=[0,0],this.points=[]}animate(t,e){t.drawImage(this.sprite,e[0],e[1],r.CARDWIDTH,r.CARDHEIGHT),this.selected&&(t.lineWidth=3,t.strokeStyle="#FFFF00",t.strokeRect(e[0],e[1],r.CARDWIDTH,r.CARDHEIGHT)),this.sprite.onload=()=>{t.drawImage(this.sprite,e[0],e[1],r.CARDWIDTH,r.CARDHEIGHT),this.selected&&(t.lineWidth=3,t.strokeStyle="#FFFF00",t.strokeRect(e[0],e[1],r.CARDWIDTH,r.CARDHEIGHT))}}updatePoints(t){this.pos=t||this.pos,this.points=[{x:this.pos[0],y:this.pos[1]},{x:this.pos[0]+r.CARDWIDTH,y:this.pos[1]},{x:this.pos[0]+r.CARDWIDTH,y:this.pos[1]+r.CARDHEIGHT},{x:this.pos[0],y:this.pos[1]+r.CARDHEIGHT}]}}i(r,"CARDDIMENSIONS",[[41,60],[55,80],[69,100]]),i(r,"canvasSize",a.canvasSize().size),i(r,"CARDWIDTH","Large"===r.canvasSize?r.CARDDIMENSIONS[2][0]:"Medium"===r.canvasSize?r.CARDDIMENSIONS[1][0]:r.CARDDIMENSIONS[0][0]),i(r,"CARDHEIGHT","Large"===r.canvasSize?r.CARDDIMENSIONS[2][1]:"Medium"===r.canvasSize?r.CARDDIMENSIONS[1][1]:r.CARDDIMENSIONS[0][1]),t.exports=r},381:function(t,e,s){const i=s(527),a=s(630);s(807),t.exports=class extends a{constructor(t){super(t),this.dealerCards=[],this.handTracker={result:[]},this.makeTricks()}addCardBoard(t){for(let e=0;e<this.tricks.length&&(!this.tricks[e].active||!this.tricks[e].addCard(t));e++)if(!this.tricks[e].active){this.activateNextTrick(),this.addCardBoard(t);break}return this.dealerPlayCycle(),!0}makeTricks(){let t=[],e=new i({pos:[this.pos[0],this.pos[1]+i.HEIGHT],color:"#FFA500",trickid:5,active:!0});t.push(e);let s=new i({pos:[this.pos[0]+i.WIDTH,this.pos[1]+i.HEIGHT],color:"#00CC33",trickid:6,active:!0});t.push(s);let a=new i({pos:this.pos,color:"#800080",trickid:7,active:!1});t.push(a);let r=new i({pos:[this.pos[0]+i.WIDTH,this.pos[1]],color:"#0099FF",trickid:8,active:!1});t.push(r),this.tricks=t}updateDealerCards(){let t=[];this.tricks.forEach((e=>{let s=[...e.cards];t=[...t,...s]})),this.dealerCards=t}updateCardTracker(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.dealerCards,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.handTracker;console.log(t,"cards"),e.cards=t,[...Array(15).keys()].splice(2,15).forEach((t=>{e[t]=[]})),["Clubs","Hearts","Diamond","Spades"].forEach((t=>{e[t]=[]})),t.forEach((t=>{let s=t.suit,i=t.value;e[s].push(t),e[i].push(t)})),console.log(e,"object = hand Tracker")}updateBestHand(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.handTracker;if(this.updateCardTracker(t.cards,t),t.cards.length<=5)return t.result.push(t.cards),t;let e=[],s=[],i=[],a=[],r=[];["Clubs","Hearts","Diamond","Spades"].forEach((s=>{t[s].length>4&&(e=t[s])}));let l=[...Array(15).keys()].splice(2,15),n=[];l.forEach((e=>{t[e].length>=4?i.push(t[e]):3===t[e].length?a.push(t[e]):2===t[e].length&&r.push(t[e]),t[e][0]?(n.push(t[e][0]),5===n.length&&(s=n)):n=[]}));const c=()=>{let e={...t};return console.log(e,"Object before card array clean"),t.result.forEach((e=>{e.forEach((e=>{t.cards.forEach(((s,i)=>{e.suit===s.suit&&e.value===s.value&&(t.cards=t.cards.slice(0,i).concat(t.cards.slice(i+1)))}))}))})),console.log(t,"Object after card array clean"),this.updateBestHand(t)};if(console.log([r,a,i,s,e],"Check arrays"),i.length){let e=[];for(let t=0;t<4;t++)e.push(i[0][t]);return t.result.push(e),console.log("Found Four Kind"),c()}if(a.length&&r.length){let e=[];for(let t=0;t<3;t++)e.push(a[0][t]),2!==t&&e.push(r[0][t]);return t.result.push(e),console.log("Found Full House"),c()}if(e.length){let s=[];for(let t=0;t<5;t++)s.push(e[t]);return t.result.push(s),console.log("Found Flush"),c()}if(s.length){let e=[];for(let t=0;t<5;t++)e.push(s[t]);return t.result.push(e),console.log("Found Straight"),c()}if(a.length){let e=[];for(let t=0;t<3;t++)e.push(a[0][t]);return t.result.push(e),console.log("Found Three"),c()}if(r.length){if(r.length>1){let e=[];for(let t=0;t<2;t++)e.push(r[0][t]),e.push(r[1][t]);return console.log(e,"Result in Two Pair"),t.result.push(e),c()}let e=[];for(let t=0;t<2;t++)e.push(r[0][t]);return console.log(e,"Result in Pair"),t.result.push(e),c()}let o=[];for(let e=0;e<5;e++)o.push(t.cards[e]);return console.log(o,"Result in Nothing"),t.result.push(o),console.log("Found Nothing"),c()}dealerPlayCycle(){if(this.updateDealerCards(),this.updateCardTracker(),this.dealerCards.length>=5&&(this.handTracker.result=[],this.updateBestHand(),console.log(this.handTracker,"Hand Tracker"),console.log(this.dealerCards,"Dealer Cards")),this.activeTricks===this.handTracker.result.length)this.handTracker.result.forEach(((t,e)=>{this.tricks[e].cards=[],t.forEach((t=>{this.tricks[e].addCard(t)}))}));else if(this.handTracker.result.length>this.activeTricks){let t=this.handTracker.result.flat();for(let e=0;e<this.activeTricks;e++)for(this.tricks[e].cards=[];this.tricks[e].cards.length<5&&t.length>0;)this.tricks[e].addCard(t.shift())}}sumScores(t){let e=0;return t.forEach((t=>{e+=t})),e}newTrickSet(){let t=[],e=(this.pos,new i({pos:this.pos,trickid:1}));t.push(e);let s=new i({pos:[this.pos[0]+400,this.pos[1]],color:"#00FF00",trickid:2});t.push(s);let a=new i({pos:[this.pos[0],this.pos[1]+150],color:"#FF0000",trickid:3,active:!1});t.push(a);let r=new i({pos:[this.pos[0]+400,this.pos[1]+150],color:"#0000FF",trickid:4,active:!1});return t.push(r),t}nextDealerCard(){}}},499:function(t,e,s){const i=s(596);t.exports=class{constructor(){this.cards=[],this.makeCards()}makeCards(){let t=[],e=[2,3,4,5,6,7,8,9,10,11,12,13,14],s=["Clubs","Hearts","Diamond","Spades"];for(let a=0;a<e.length;a++)for(let r=0;r<s.length;r++){let l=new i({suit:s[r],value:e[a]});t.push(l)}return this.cards=t,!0}drawCard(){const t=this.cards.length,e=Math.random(),s=Math.floor(t*e),i=this.cards[s];return this.cards.splice(this.cards.indexOf(i),1)[0]}}},36:function(t,e,s){function i(t,e,s){return(e=function(t){var e=function(t,e){if("object"!=typeof t||null===t)return t;var s=t[Symbol.toPrimitive];if(void 0!==s){var i=s.call(t,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==typeof e?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}const a=s(630),r=s(499),l=(s(807),s(381));class n{constructor(t){this.dealer=new l({pos:[.36*t[1],.25*t[1]],name:"Dealer",color:"#FFA500",canvasSize:t}),this.player=new a({pos:[.36*t[1],.7*t[1]],name:"Player",color:"#FFA500",canvasSize:t}),this.deck=new r,this.canvasSize=t,this.round=1,this.prep_game(),this.scaler=1}calcScaler(){return 900===this.canvasSize[0]?this.scaler=.75:1500===this.canvasSize[0]?this.scaler=1.25:void 0}prep_game(){for(let t=0;t<n.START_HAND;t++)this.drawPlayer();for(let t=0;t<n.START_HAND;t++)this.drawDealer()}drawPlayer(){let t=this.deck.drawCard();this.player.addCardBoard(t)}drawDealer(){let t=this.deck.drawCard();this.dealer.addCardBoard(t)}nextRound(){this.round+=1,this.player.gold+=4,this.compareBoards()}compareBoards(){let t=this.dealer.evaluateBoard(),e=this.player.evaluateBoard(),s=t.length<e.length?t.length:e.length,i=0,a=0;for(let r=0;r<s;r++)t[r]>e[r]?(document.getElementById(`score${r+1}`).innerText=0,a+=1):t[r]<e[r]?(document.getElementById(`score${r+1}`).innerText=1,i+=1):t[r]===e[r]&&(document.getElementById(`score${r+1}`).innerText="");this.player.score+=i,this.dealer.score+=a;let r=document.getElementById("playerscore"),l=document.getElementById("dealerscore");r.innerText=`Round Score     ${i}`,l.innerText=`Round Score     ${a}`}animate(t){this.calcScaler(),console.log(40*this.scaler+"px Arial"),t.font=40*this.scaler+"px Arial",t.fillStyle="#FFFFFF",t.clearRect(725/1200*this.canvasSize[0],0,300,.1875*this.canvasSize[1]),t.fillText(`Round: ${this.round}`,725/1200*this.canvasSize[0],.2375*this.canvasSize[1]),t.onload=()=>{this.calcScaler(),t.clearRect(725/1200*this.canvasSize[0],0,300,.1875*this.canvasSize[1]),t.fillText("Dealer Hands",725/1200*this.canvasSize[0],.2375*this.canvasSize[1])}}resetBoard(){}winner(){let t=this.player.score,e=this.dealer.score,s=[t,e];return t>e?s.push("Player Wins!"):s.push("Dealer Wins!"),s}}i(n,"START_HAND",7),i(n,"MAXROUNDS",11),t.exports=n},630:function(t,e,s){function i(t,e,s){return(e=function(t){var e=function(t,e){if("object"!=typeof t||null===t)return t;var s=t[Symbol.toPrimitive];if(void 0!==s){var i=s.call(t,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==typeof e?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}const a=s(596),r=s(527);s(807);class l{constructor(t){this.canvasSize=t.canvasSize,this.DIM_X=this.pos=t.pos,this.name=t.name,this.score=0,this.gold=0,this.color=t.color,this.tricks=[],this.activeTricks=2,this.makeTricks(),this.scaler=1,this.calcScaler()}calcScaler(){return 900===this.canvasSize[0]?this.scaler=.75:1500===this.canvasSize[0]?this.scaler=1.25:void 0}addCardBoard(t){for(let e=0;e<this.tricks.length;e++)if(this.tricks[e].addCard(t))return!0;return!1}activateNextTrick(){for(let t=0;t<this.tricks.length;t++){let e=this.tricks[t];if(!1===e.active){e.active=!0,this.activeTricks+=1;break}}}makeTricks(){let t=[],e=(this.pos,new r({pos:this.pos,color:"#FFA500",trickid:1,active:!0}));t.push(e);let s=new r({pos:[this.pos[0]+r.WIDTH,this.pos[1]],color:"#00CC33",trickid:2,active:!0});t.push(s);let i=new r({pos:[this.pos[0],this.pos[1]+r.HEIGHT],color:"#800080",trickid:3,active:!1});t.push(i);let a=new r({pos:[this.pos[0]+r.WIDTH,this.pos[1]+r.HEIGHT],color:"#0099FF",trickid:4,active:!1});t.push(a),this.tricks=t}animate(t){t.fillStyle=this.color,this.tricks.forEach((e=>{e.animate(t,this.name)})),this.animateGold(t)}evaluateBoard(){let t=[];for(let e=0;e<this.tricks.length;e++){let s=this.tricks[e];s.evaluatePoker();let i=s.value||0;t.push(i)}return t}animateGold(t){if("Player"===this.name){t.fillStyle="#003399",t.fillRect(980/1200*this.canvasSize[0],.4625*this.canvasSize[1],130*this.scaler,260*this.scaler),t.lineWidth=3,t.strokeStyle="#FFFFFF",t.strokeRect(980/1200*this.canvasSize[0],.4625*this.canvasSize[1],130*this.scaler,260*this.scaler),t.font=30*this.scaler+"px Arial",t.fillStyle="#FFFFFF",t.fillText(`Gold: ${this.gold}`,995/1200*this.canvasSize[0],.5*this.canvasSize[1]);const e=new Image;e.src="images/Cards/Medium/BackRed1.png",t.drawImage(e,.85*this.canvasSize[0],.50625*this.canvasSize[1],a.CARDWIDTH,a.CARDHEIGHT),t.font=20*this.scaler+"px Arial",t.fillStyle="#FFFFFF",t.fillText("New Card",995/1200*this.canvasSize[0],.63375*this.canvasSize[1]),t.fillText("2",1090/1200*this.canvasSize[0],.63375*this.canvasSize[1]),t.drawImage(e,995/1200*this.canvasSize[0],.64375*this.canvasSize[1],a.CARDWIDTH,a.CARDHEIGHT),t.drawImage(e,1001/1200*this.canvasSize[0],.64375*this.canvasSize[1],a.CARDWIDTH,a.CARDHEIGHT),t.drawImage(e,1007/1200*this.canvasSize[0],.64375*this.canvasSize[1],a.CARDWIDTH,a.CARDHEIGHT),t.drawImage(e,1013/1200*this.canvasSize[0],.64375*this.canvasSize[1],a.CARDWIDTH,a.CARDHEIGHT),t.drawImage(e,1019/1200*this.canvasSize[0],.64375*this.canvasSize[1],a.CARDWIDTH,a.CARDHEIGHT),t.font=20*this.scaler+"px Arial",t.fillStyle="#FFFFFF",t.fillText("New Hand",995/1200*this.canvasSize[0],.775*this.canvasSize[1]),t.fillText("6",.91*this.canvasSize[0],.775*this.canvasSize[1]),e.onload=()=>{t.drawImage(e,.85*this.canvasSize[0],.50625*this.canvasSize[1],a.CARDWIDTH,a.CARDHEIGHT),t.drawImage(e,995/1200*this.canvasSize[0],.64375*this.canvasSize[1],a.CARDWIDTH,a.CARDHEIGHT),t.drawImage(e,1001/1200*this.canvasSize[0],.64375*this.canvasSize[1],a.CARDWIDTH,a.CARDHEIGHT),t.drawImage(e,1007/1200*this.canvasSize[0],.64375*this.canvasSize[1],a.CARDWIDTH,a.CARDHEIGHT),t.drawImage(e,1013/1200*this.canvasSize[0],.64375*this.canvasSize[1],a.CARDWIDTH,a.CARDHEIGHT),t.drawImage(e,1019/1200*this.canvasSize[0],.64375*this.canvasSize[1],a.CARDWIDTH,a.CARDHEIGHT)}}}}i(l,"DIM_X",2*r.WIDTH),i(l,"DIM_Y",2*r.HEIGHT),t.exports=l},527:function(t,e,s){function i(t,e,s){return(e=function(t){var e=function(t,e){if("object"!=typeof t||null===t)return t;var s=t[Symbol.toPrimitive];if(void 0!==s){var i=s.call(t,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==typeof e?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}s(630);const a=s(596),r=s(807);class l{constructor(t){this.pos=t.pos,this.cards=[],this.value=0,this.values=[],this.trait="High Card",this.major=0,this.color=t.color,this.trickid=t.trickid,this.active=t.active,this.points=[],this.updatePoints(),this.scaler=1,this.calcScaler()}calcScaler(){return"Small"===this.canvasSize?this.scaler=.75:"Large"===this.canvasSize?this.scaler=1.25:void 0}updatePoints(t){this.pos=t||this.pos,this.points=[{x:this.pos[0],y:this.pos[1]},{x:this.pos[0]+l.WIDTH,y:this.pos[1]},{x:this.pos[0]+l.WIDTH,y:this.pos[1]+l.HEIGHT},{x:this.pos[0],y:this.pos[1]+l.HEIGHT}]}evaluate(){let t=0;return this.cards.forEach((e=>{t+=e.value})),t}evaluatePoker(){let t=r.sortCards(this.cards);this.cards=t,this.value=0,this.major=0;let e=[];this.trait="High Card";let s=["Clubs","Hearts","Diamond","Spades"];for(let t=0;t<this.cards.length;t++)e.push(this.cards[t].value);if(this.values=e,5===this.cards.length){let t=!1,i=!0;for(let e=0;e<s.length;e++){let i=s[e];this.cards.every((t=>t.suit===i))&&(t=!0)}for(let t=0;t<e.length-1;t++)e[t]!==e[t+1]+1&&(i=!1);t&&i?this.trait="Straight-Flush":t?this.trait="Flush":i&&(this.trait="Straight")}let i={};for(let t=0;t<e.length;t++)void 0===i[e[t]]?i[e[t]]=1:i[e[t]]+=1;let a=!1,l=!1;for(let t=0;t<e.length;t++)4===i[e[t]]&&(this.trait="Four of a Kind",this.major=e[t]),2===i[e[t]]&&!1===a?(a=!0,this.trait="One Pair",this.major=e[t]):2===i[e[t]]&&!0===a&&e[t]!==e[t-1]?(this.trait="Two Pair",this.major=e[t]>this.major?e[t]:this.major):3===i[e[t]]&&(l=!0,this.trait="Three of a Kind",this.major=e[t]);l&&a&&(this.trait="Full House"),this.major=this.major||e[0];let n=["High Card","One Pair","Two Pair","Three of a Kind","Straight","Flush","Full House","Four of a Kind","Straight-Flush"].indexOf(this.trait)+1,c=e.filter((t=>t!==this.major)),o=this.major*14**n*2,h=0;for(let t=1;t<c.length+1;t++)h+=c[t-1]*14**n/14**t;return this.value=o+h,this.value}removeCard(t){let e=this.cards.indexOf(t);return this.cards.splice(e,1)[0]}addCard(t){let e=this.cards.length;if(e<l.MAXCARDS&&this.active){let s=this.pos;s=[s[0]+l.XBUFFER,s[1]+l.YBUFFER];let i=e*a.CARDWIDTH+3*e;return s=[s[0]+i,s[1]],t.pos=s,t.trickid=this.trickid,t.updatePoints(),this.cards.push(t),!0}return!1}updateCards(){let t=this.cards.length;for(let e=0;e<t;e++){let t=this.cards[e],s=this.pos;s=[s[0]+l.XBUFFER,s[1]+l.YBUFFER];let i=e*a.CARDWIDTH+3*e;s=[s[0]+i,s[1]],t.pos=s,t.updatePoints()}}animate(t,e){let s=[16,22,30];const i="Small"===l.canvasSize?s[0]:"Large"===l.canvasSize?s[2]:s[1];if(this.active){const e=document.getElementById(`trick${this.trickid}`);e.style.display="flex",e.style.backgroundColor=this.color;let s=r.sortCards(this.cards);this.cards=s,this.updateCards(),this.evaluatePoker(),t.fillStyle=this.color;let a=this.pos[0],n=this.pos[1];t.fillRect(a,n,l.WIDTH,l.HEIGHT),t.fillStyle="#FFFFFF",t.font=`${i}px Arial`,t.fillText(`${this.trait}`,a+.33*l.WIDTH,n+.95*l.HEIGHT);for(let e=0;e<this.cards.length;e++){let s=this.cards[e];s.animate(t,s.pos),document.getElementById(`${this.trickid}-${e}`).src=s.sprite.src}t.lineWidth=3,t.strokeStyle="#FFFFFF",t.strokeRect(this.pos[0],this.pos[1],l.WIDTH,l.HEIGHT)}else{t.fillStyle=this.color;let s=this.pos[0],a=this.pos[1];t.fillRect(s,a,l.WIDTH,l.HEIGHT),t.fillStyle="#FFFFFF",t.font=`${i}px Arial`,"Player"===e?(console.log(i,"fontSize"),t.fillText("Unlock Hand: 6 Gold!",s+.2*l.WIDTH*this.scaler,a+.5*l.HEIGHT)):(t.fillStyle="#FFFFFF",t.fillText("Inactive Hand",s+.3*l.WIDTH*this.scaler,a+.5*l.HEIGHT)),t.lineWidth=3,t.strokeStyle="#FFFFFF",t.strokeRect(this.pos[0],this.pos[1],l.WIDTH,l.HEIGHT)}}}i(l,"TRICKDIMENSIONS",[[233,90],[310,120],[388,150]]),i(l,"canvasSize",r.canvasSize().size),i(l,"WIDTH","Large"===l.canvasSize?l.TRICKDIMENSIONS[2][0]:"Medium"===l.canvasSize?l.TRICKDIMENSIONS[1][0]:l.TRICKDIMENSIONS[0][0]),i(l,"HEIGHT","Large"===l.canvasSize?l.TRICKDIMENSIONS[2][1]:"Medium"===l.canvasSize?l.TRICKDIMENSIONS[1][1]:l.TRICKDIMENSIONS[0][1]),i(l,"YBUFFER",.09*l.HEIGHT),i(l,"XBUFFER",.09*l.HEIGHT),i(l,"MAXCARDS",5),t.exports=l},807:function(t,e,s){"use strict";function i(t){function e(t,e){const s=["Spades","Hearts","Diamond","Clubs"];return t.value>e.value?1:t.value<e.value?-1:s.indexOf(t.suit)<s.indexOf(e.suit)?1:-1}let s=t[0];if(t.length<2)return t;let a=t.slice(1).filter((t=>-1===e(s,t))),r=t.slice(1).filter((t=>1===e(s,t))),l=i(a),n=i(r);return l.concat([s]).concat(n)}function a(t,e){return[{x:t[0],y:t[1]},{x:t[0]+e[0],y:t[1]},{x:t[0]+e[0],y:t[1]+e[1]},{x:t[0],y:t[1]+e[1]}]}function r(){const t=window.innerWidth,e=window.innerHeight,s=[[900,600],[1200,800],[1500,1e3]];let i=s[0];return t>s[2][0]+200&&e>s[2][1]+100?(i=s[2],{canvasSize:i,size:"Large"}):t>s[1][0]+200&&e>s[1][1]+100?(i=s[1],{canvasSize:i,size:"Medium"}):(i=s[0],{canvasSize:i,size:"Small"})}s.r(e),s.d(e,{canvasSize:function(){return r},createPoints:function(){return a},sortCards:function(){return i}})},142:function(t,e,s){const i=s(807),a=s(36),r=s(596);s(527),t.exports=class{constructor(t,e,s,i){this.canvasSize=i,this.game=t,this.gameCtx=e,this.allCards=[],this.allTricks=[],this.setupScreen(),this.buildTricksCards(),this.bindCanvas(),this.cardSelected=!1,this.pos=s,this.scaler=1,this.calcScaler(),console.log(this.scaler,"this.scaler")}calcScaler(){return 900===this.canvasSize[0]?this.scaler=.75:1500===this.canvasSize[0]?this.scaler=1.25:void 0}resetCardLinks(){let t=[1,2,3,4,5,6,7,8],e=[0,1,2,3,4];for(let s=1;s<t.length;s++)for(let t=0;t<e.length;t++)document.getElementById(`${s}-${t}`).src="./images/transparent.png"}buildTricksCards(){let t=this.game.player.tricks,e=[],s=[];for(let i=0;i<t.length;i++){let a=t[i];s.push(a);for(let t=0;t<a.cards.length;t++){let s=a.cards[t];e.push(s)}}this.allCards=e,this.allTricks=s}tracePath(t,e){let s=t.points;e.beginPath(),e.moveTo(s[0].x,s[0].y);for(let t=1;t<s.length;t++)e.lineTo(s[t].x,s[t].y)}bindCanvas(){document.getElementById("game").addEventListener("click",this.handleCanvasClick.bind(this))}handleCanvasClick(t){let e=this.pos[0],s=this.pos[1],l=parseInt(t.clientX-e),n=parseInt(t.clientY-s);if(console.log([t.clientX,t.clientY],"Event Mouse Click Array"),console.log([l,n],"Mouse Click Pos After Offsets"),!1===this.cardSelected)for(let t=0;t<this.allCards.length;t++){let e=this.allCards[t];if(this.tracePath(e,this.gameCtx),this.gameCtx.isPointInPath(l,n)){this.cardSelected=e,e.selected=!0,this.game.player.animate(this.gameCtx),this.buildTricksCards();break}}else if(this.cardSelected)for(let t=0;t<this.allTricks.length;t++){let e=this.allTricks[t];this.tracePath(e,this.gameCtx),this.gameCtx.isPointInPath(l,n)&&(this.moveCard(this.cardSelected,e),this.game.player.animate(this.gameCtx),this.buildTricksCards())}const c=[[995/1200*this.canvasSize[0],.64375*this.canvasSize[1]],[r.CARDWIDTH+.25*r.CARDWIDTH,r.CARDHEIGHT]],o=[[.85*this.canvasSize[0],.50625*this.canvasSize[1]],[r.CARDWIDTH,r.CARDHEIGHT]],h=i.createPoints(c[0],c[1]),d=i.createPoints(o[0],o[1]);if(this.game.player.gold>=6){let t={points:h};this.tracePath(t,this.gameCtx),this.gameCtx.isPointInPath(l,n)&&(console.log("Clicked on Trick Button"),this.game.player.activateNextTrick(),this.game.player.gold-=6,this.game.player.animate(this.gameCtx),this.buildTricksCards())}if(this.game.player.gold>=2){let t={points:d};this.tracePath(t,this.gameCtx),this.gameCtx.isPointInPath(l,n)&&(console.log("Clicked on Card Button"),this.game.drawPlayer(),this.game.player.gold-=2,this.game.player.animate(this.gameCtx),this.buildTricksCards())}const u=[[500/1200*this.canvasSize[0],.5875*this.canvasSize[1]],[140*this.scaler,50*this.scaler]];let p={points:i.createPoints(u[0],u[1])};this.tracePath(p,this.gameCtx),this.gameCtx.isPointInPath(l,n)&&this.game.round<=a.MAXROUNDS&&this.playRound()}moveCard(t,e){let s,i=t.trickid;this.allTricks.forEach((e=>{e.trickid===i&&(s=e,s.removeCard(t),s.updateCards(),s.evaluatePoker())})),e.addCard(t)?(e.updateCards(),e.evaluatePoker(),this.cardSelected.selected=!1,this.cardSelected=!1):(s.addCard(t),s.updateCards(),s.evaluatePoker(),this.cardSelected.selected=!1,this.cardSelected=!1)}setupScreen(){this.resetCardLinks(),this.gameCtx.clearRect(0,0,this.canvasSize[0],this.canvasSize[1]),this.game.animate(this.gameCtx),this.game.dealer.animate(this.gameCtx),this.game.player.animate(this.gameCtx),this.animateScores(),this.buildTricksCards()}animateScores(){this.calcScaler();let t=this.scaler||1;this.gameCtx.font=40*t+"px Arial",this.gameCtx.fillStyle="#FFFFFF",this.gameCtx.clearRect(250/1200*this.canvasSize[0],0,300,.1875*this.canvasSize[1]),this.gameCtx.onload=()=>{this.calcScaler(),this.gameCtx.font="40px Arial",this.gameCtx.clearRect(.25*this.canvasSize[0],0,300,.1875*this.canvasSize[1]),this.gameCtx.fillText("Dealer Hands",.25*this.canvasSize[0],.2375*this.canvasSize[1])},this.gameCtx.fillText("Dealer Hands",.25*this.canvasSize[0],.2375*this.canvasSize[1]),this.gameCtx.font=24*t+"px Arial Bold",this.gameCtx.fillStyle="#003399",this.gameCtx.fillRect(.4375*this.canvasSize[0],.5875*this.canvasSize[1],140*t,50*t),this.gameCtx.fillStyle="#FFFFFF",this.gameCtx.fillText("Score Round",535/1200*this.canvasSize[0],.625*this.canvasSize[1]),this.gameCtx.lineWidth=3,this.gameCtx.strokeStyle="#FFFFFF",this.gameCtx.strokeRect(.4375*this.canvasSize[0],.5875*this.canvasSize[1],140*t,50*t),this.gameCtx.fillStyle="#003399",this.gameCtx.fillRect(.2375*this.canvasSize[0],.5875*this.canvasSize[1],180*t,50*t),this.gameCtx.fillStyle="#FFFFFF",this.gameCtx.fillText(`Player Score: ${this.game.player.score}`,295/1200*this.canvasSize[0],.625*this.canvasSize[1]),this.gameCtx.lineWidth=3,this.gameCtx.strokeStyle="#FFFFFF",this.gameCtx.strokeRect(.2375*this.canvasSize[0],.5875*this.canvasSize[1],180*t,50*t),this.gameCtx.fillStyle="#003399",this.gameCtx.fillRect(.6125*this.canvasSize[0],.5875*this.canvasSize[1],180*t,50*t),this.gameCtx.fillStyle="#FFFFFF",this.gameCtx.fillText(`Dealer Score: ${this.game.dealer.score}`,742/1200*this.canvasSize[0],.625*this.canvasSize[1]),this.gameCtx.lineWidth=3,this.gameCtx.strokeStyle="#FFFFFF",this.gameCtx.strokeRect(.6125*this.canvasSize[0],.5875*this.canvasSize[1],180*t,50*t)}playRound(){this.game.nextRound(),this.setupScreen(),this.buildTricksCards();const t=document.getElementById("roundscore");document.getElementById("overlay").style.display="block",t.style.display="flex"}}}},e={};function s(i){var a=e[i];if(void 0!==a)return a.exports;var r=e[i]={exports:{}};return t[i](r,r.exports,s),r.exports}s.d=function(t,e){for(var i in e)s.o(e,i)&&!s.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},function(){const t=s(36),e=s(142),i=window.innerWidth,a=window.innerHeight;console.log(i,a,"window X Y");const r=[[900,600],[1200,800],[1500,1e3]],l=document.getElementById("canvas"),n=l.getContext("2d");let c=r[0];c=i>r[2][0]+200&&a>r[2][1]+100?r[2]:i>r[1][0]+200&&a>r[1][1]+100?r[1]:r[0],console.log([i,r[1][0]+200,a,r[1][1]+100],"Deduce Canvas"),console.log(c,"canvasSize"),l.setAttribute("width",c[0]),l.setAttribute("height",c[1]);const o=new t(c),h=l.getBoundingClientRect(),d=[h.x,h.y];console.log(d,"gamepos");const u=new e(o,n,d,c),p=document.getElementById("overlay"),g=document.getElementById("start"),v=document.getElementById("start-button"),S=document.getElementById("roundscore"),m=document.getElementById("continuebutton");v.addEventListener("click",(()=>{p.style.display="none",g.style.display="none"})),m.addEventListener("click",(()=>{if(p.style.display="none",S.style.display="none",o.round<t.MAXROUNDS)u.game.drawDealer(),u.setupScreen();else{const t=document.getElementById("finalplayerscore"),e=document.getElementById("finaldealerscore"),s=document.getElementById("winner"),i=document.getElementById("gameover"),a=o.winner();console.log([t,e,s],"edits"),t.innerText=a[0],e.innerText=a[1],s.innerText=a[2],p.style.display="block",i.style.display="block"}})),window.game=o,window.view=u}()}();
//# sourceMappingURL=main.js.map